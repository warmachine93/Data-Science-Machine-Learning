{"cells":[{"cell_type":"markdown","id":"827ef843","metadata":{"id":"827ef843"},"source":["# Predicting Credit Card Approval for a Bank"]},{"cell_type":"markdown","id":"bcf754ac","metadata":{"id":"bcf754ac"},"source":["# **1) Why is your proposal important in todayâ€™s world? How predicting a good client is worthy for a bank?**\n","\n","The proposal to predict credit card approval is highly relevant in today's world due to the increasing use of credit cards as a financial tool. With the rise in e-commerce and online transactions, credit cards have become a primary payment method for many individuals, making it essential for banks to efficiently process credit card applications and improve the approval rate. Predicting a good client is essential for a bank because it helps to minimize the risk of credit default and reduce the cost of managing credit card accounts. Banks can use machine learning algorithms to analyze various factors such as income level, employment status etc. By accurately predicting, banks can offer credit cards to clients with lower risk profiles, which can ultimately lead to better profitability and improved customer satisfaction\n","\n","# **2) How is it going to impact the banking sector?**\n","\n","Predicting credit card approval using machine learning can have a transformative impact on the banking sector by improving the customer experience, reducing risk, and increasing profitability.\n","\n","**Improved customer experience:** By using predictive models, banks can offer faster and more accurate credit card approvals, which can improve the overall customer experience. This can lead to increased customer satisfaction and loyalty.\n","\n","**Reduced risk of credit defaults:** Machine learning algorithms can help banks to accurately predict the likelihood of a client defaulting on their credit card payments. By identifying clients with lower credit risk profiles, banks can offer credit cards with lower interest rates, which can reduce the risk of defaults and ultimately improve the bank's profitability.\n","\n","**Improved profitability:** By reducing the risk of credit defaults and improving the efficiency of the underwriting process, banks can increase their profitability. This can help banks to offer better rates and benefits to their clients, leading to increased market share and revenue.\n","\n","\n","# **3) If any, what is the gap in the knowledge or how your proposed method can be helpful if required in future for any bank in India.**\n","\n","If there is a gap in the knowledge or process used by a bank in India for credit card approval, the proposed method can be helpful for banks in India by improving the accuracy of credit card approval predictions, enhancing credit risk management strategies, and improving efficiency. However, to fully leverage the benefits of our proposed method, banks will need to ensure that they have access to reliable and comprehensive data sources."]},{"cell_type":"markdown","id":"a8f371c0","metadata":{"id":"a8f371c0"},"source":["# Initial Hypotheses"]},{"cell_type":"markdown","id":"c0b5fbd2","metadata":{"id":"c0b5fbd2"},"source":["**Hypothesis 1**: Customer income, education level, and employment status are critical factors influencing credit card approval decisions.\n","\n","**Hypothesis 2**: Applicants with a higher number of family members may have a higher likelihood of credit card approval.\n","\n","**Hypothesis 3**: Feature engineering techniques and feature scaling, will be relevant for preparing the dataset for machine learning.\n","\n","**Hypothesis 4**: Exploratory Data Analysis (EDA) will reveal patterns and relationships within the dataset that can help improve credit card approval predictions.\n"]},{"cell_type":"markdown","id":"a8f55d35","metadata":{"id":"a8f55d35"},"source":["# Data Analysis Approach"]},{"cell_type":"markdown","id":"bd653550","metadata":{"id":"bd653550"},"source":["- **Data Preprocessing:** Handle missing values, perform one-hot encoding for categorical variables, and scale numerical features.\n","- **Exploratory Data Analysis (EDA):** Visualize and analyze the dataset to identify patterns and correlations.\n","- **Feature Selection:** Identify the most important features that impact credit card approval using statistical tests and feature importance scores from machine learning models.\n","- **Model Building:** Train machine learning models, including logistic regression, decision trees, random forests, and neural networks, to predict credit card approval.\n","- **Model Evaluation:** Use appropriate metrics (e.g., accuracy, precision, recall, F1-score) to evaluate model performance.\n","- **Model Interpretation:** Interpret the results to understand which factors influence credit card approval the most.\n","- **Hyperparameter Tuning:** Optimize hyperparameters for the best-performing model.\n","- **Model Deployment:** If applicable, deploy the model in a real-world environment for ongoing credit card approval decisions.\n","Justification: This approach ensures a comprehensive analysis of the dataset, including both traditional credit scoring methods and machine learning techniques. EDA will help us understand the data's underlying structure and relationships, and machine learning models will provide predictive accuracy.\n"]},{"cell_type":"markdown","id":"5e11f78e","metadata":{"id":"5e11f78e"},"source":["# Machine Learning Approach"]},{"cell_type":"markdown","id":"795c6946","metadata":{"id":"795c6946"},"source":["Method: We will use various machine learning algorithms, including but not limited to:\n","\n","- Logistic Regression\n","- Decision Trees\n","- Random Forests\n","- Support Vector Machine\n","\n"]},{"cell_type":"markdown","id":"4711c898","metadata":{"id":"4711c898"},"source":["# Steps to Improve Accuracy:# Steps to Improve Accuracy:"]},{"cell_type":"markdown","id":"a5c29af1","metadata":{"id":"a5c29af1"},"source":["- **Cross-validation:** Employ k-fold cross-validation to ensure robust model performance.\n","- **Feature Engineering:** Experiment with feature engineering techniques to create informative features.\n","- **Hyperparameter Tuning:** Use techniques like grid search or random search to find optimal hyperparameters.\n","- **Model Comparison:** We will compare model performance based on metrics such as accuracy, precision, recall, F1-score.\n","\n","**By following this approach, we aim to provide the bank with a data-driven solution for predicting credit card approval and improving its credit assessment process, ultimately benefiting both the bank and its customers.**"]},{"cell_type":"code","execution_count":3,"id":"08a16a39","metadata":{"id":"08a16a39","executionInfo":{"status":"ok","timestamp":1708774121906,"user_tz":-330,"elapsed":1214,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# models to read, view, clean and process the data\n","import pandas as pd\n","import numpy as np\n","\n","# To visualize data as graphs and charts\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","matplotlib.rcParams['figure.figsize']=(15,10) # size of graph\n","\n","# for user interaction\n","from ipywidgets import interact\n","\n","# to scale and assigning dummies to values\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","\n","# for splitting data and selecting suitable model with highest accuracy and appropriate hyperparameters\n","\n","from sklearn.model_selection import train_test_split # Splitting data\n","from sklearn.model_selection import cross_val_score, GridSearchCV  # for model selection and hyperparameters\n","\n","# to import models\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","\n","# To evaluate model accuracy\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, r2_score\n","\n"]},{"cell_type":"code","execution_count":4,"id":"d3552000","metadata":{"id":"d3552000","executionInfo":{"status":"ok","timestamp":1708774138822,"user_tz":-330,"elapsed":1012,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# loading the data to pandas\n","df1=pd.read_csv('/content/drive/MyDrive/Credit_card.csv')\n","df2=pd.read_csv('/content/drive/MyDrive/Credit_card_label.csv')"]},{"cell_type":"code","execution_count":5,"id":"54d71d4a","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"54d71d4a","executionInfo":{"status":"ok","timestamp":1708774209430,"user_tz":-330,"elapsed":577,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"8492b698-2171-4744-fbc9-909f4640db03"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Ind_ID GENDER Car_Owner Propert_Owner  CHILDREN  Annual_income  \\\n","0  5008827      M         Y             Y         0       180000.0   \n","1  5009744      F         Y             N         0       315000.0   \n","2  5009746      F         Y             N         0       315000.0   \n","3  5009749      F         Y             N         0            NaN   \n","4  5009752      F         Y             N         0       315000.0   \n","\n","            Type_Income         EDUCATION Marital_status       Housing_type  \\\n","0             Pensioner  Higher education        Married  House / apartment   \n","1  Commercial associate  Higher education        Married  House / apartment   \n","2  Commercial associate  Higher education        Married  House / apartment   \n","3  Commercial associate  Higher education        Married  House / apartment   \n","4  Commercial associate  Higher education        Married  House / apartment   \n","\n","   Birthday_count  Employed_days  Mobile_phone  Work_Phone  Phone  EMAIL_ID  \\\n","0        -18772.0         365243             1           0      0         0   \n","1        -13557.0           -586             1           1      1         0   \n","2             NaN           -586             1           1      1         0   \n","3        -13557.0           -586             1           1      1         0   \n","4        -13557.0           -586             1           1      1         0   \n","\n","  Type_Occupation  Family_Members  \n","0             NaN               2  \n","1             NaN               2  \n","2             NaN               2  \n","3             NaN               2  \n","4             NaN               2  "],"text/html":["\n","  <div id=\"df-b510c154-b8ab-4a91-8554-8e029583c72e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ind_ID</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Mobile_phone</th>\n","      <th>Work_Phone</th>\n","      <th>Phone</th>\n","      <th>EMAIL_ID</th>\n","      <th>Type_Occupation</th>\n","      <th>Family_Members</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5008827</td>\n","      <td>M</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>Pensioner</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5009744</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5009746</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>NaN</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5009749</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5009752</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b510c154-b8ab-4a91-8554-8e029583c72e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b510c154-b8ab-4a91-8554-8e029583c72e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b510c154-b8ab-4a91-8554-8e029583c72e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-918101d1-9329-4c08-9aa4-73fcba15de42\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-918101d1-9329-4c08-9aa4-73fcba15de42')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-918101d1-9329-4c08-9aa4-73fcba15de42 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df1","summary":"{\n  \"name\": \"df1\",\n  \"rows\": 1548,\n  \"fields\": [\n    {\n      \"column\": \"Ind_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41717,\n        \"min\": 5008827,\n        \"max\": 5150412,\n        \"num_unique_values\": 1548,\n        \"samples\": [\n          5029028,\n          5051097,\n          5028990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113252.9976560387,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Commercial associate\",\n          \"State servant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Secondary / secondary special\",\n          \"Academic degree\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Single / not married\",\n          \"Widow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"House / apartment\",\n          \"With parents\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4229.503202035153,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1270,\n        \"samples\": [\n          -12250.0,\n          -21135.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137808,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 956,\n        \"samples\": [\n          -5004,\n          -8760\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mobile_phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAIL_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Core staff\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["df1.head() # to view top  5 rows of table"]},{"cell_type":"code","execution_count":6,"id":"2266e5c0","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2266e5c0","executionInfo":{"status":"ok","timestamp":1708774216453,"user_tz":-330,"elapsed":677,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"9ce76626-d782-4125-8088-f43c7e3aa6f2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1548, 18)"]},"metadata":{},"execution_count":6}],"source":["df1.shape # Total number of rows and coluns"]},{"cell_type":"code","execution_count":7,"id":"4995fc36","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4995fc36","executionInfo":{"status":"ok","timestamp":1708774218928,"user_tz":-330,"elapsed":20,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"66ab2a84-b01d-4c8b-ab54-dacfe6dca2b7"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1548 entries, 0 to 1547\n","Data columns (total 18 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Ind_ID           1548 non-null   int64  \n"," 1   GENDER           1541 non-null   object \n"," 2   Car_Owner        1548 non-null   object \n"," 3   Propert_Owner    1548 non-null   object \n"," 4   CHILDREN         1548 non-null   int64  \n"," 5   Annual_income    1525 non-null   float64\n"," 6   Type_Income      1548 non-null   object \n"," 7   EDUCATION        1548 non-null   object \n"," 8   Marital_status   1548 non-null   object \n"," 9   Housing_type     1548 non-null   object \n"," 10  Birthday_count   1526 non-null   float64\n"," 11  Employed_days    1548 non-null   int64  \n"," 12  Mobile_phone     1548 non-null   int64  \n"," 13  Work_Phone       1548 non-null   int64  \n"," 14  Phone            1548 non-null   int64  \n"," 15  EMAIL_ID         1548 non-null   int64  \n"," 16  Type_Occupation  1060 non-null   object \n"," 17  Family_Members   1548 non-null   int64  \n","dtypes: float64(2), int64(8), object(8)\n","memory usage: 217.8+ KB\n"]}],"source":["#Overview of data_types and non_null values of all columns\n","df1.info()"]},{"cell_type":"code","execution_count":8,"id":"300180ed","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"300180ed","executionInfo":{"status":"ok","timestamp":1708774222818,"user_tz":-330,"elapsed":491,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e201fa6b-0da6-4404-b8d0-d8fb47bcc26a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Ind_ID  label\n","0  5008827      1\n","1  5009744      1\n","2  5009746      1\n","3  5009749      1\n","4  5009752      1"],"text/html":["\n","  <div id=\"df-397e39ea-1b3d-4716-a15a-24748682822f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ind_ID</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5008827</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5009744</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5009746</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5009749</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5009752</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-397e39ea-1b3d-4716-a15a-24748682822f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-397e39ea-1b3d-4716-a15a-24748682822f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-397e39ea-1b3d-4716-a15a-24748682822f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c48b66b0-bfc6-46e2-a4e1-9b7b7a6415bd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c48b66b0-bfc6-46e2-a4e1-9b7b7a6415bd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c48b66b0-bfc6-46e2-a4e1-9b7b7a6415bd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 1548,\n  \"fields\": [\n    {\n      \"column\": \"Ind_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41717,\n        \"min\": 5008827,\n        \"max\": 5150412,\n        \"num_unique_values\": 1548,\n        \"samples\": [\n          5029028,\n          5051097,\n          5028990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}],"source":["df2.head()"]},{"cell_type":"code","execution_count":9,"id":"65e54a8b","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"65e54a8b","executionInfo":{"status":"ok","timestamp":1708774226923,"user_tz":-330,"elapsed":648,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"d6db388a-bb76-4cd3-f9da-7d4d16d13424"},"outputs":[{"output_type":"stream","name":"stdout","text":["df1: (1548, 18)\n","df2: (1548, 2)\n"]}],"source":["print('df1:',df1.shape)\n","print('df2:',df2.shape)"]},{"cell_type":"code","execution_count":10,"id":"f919d97a","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"f919d97a","executionInfo":{"status":"ok","timestamp":1708774229663,"user_tz":-330,"elapsed":688,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"7fa183a3-0485-4d4c-dfcf-8eb35039c292"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Ind_ID GENDER Car_Owner Propert_Owner  CHILDREN  Annual_income  \\\n","0  5008827      M         Y             Y         0       180000.0   \n","1  5009744      F         Y             N         0       315000.0   \n","2  5009746      F         Y             N         0       315000.0   \n","3  5009749      F         Y             N         0            NaN   \n","4  5009752      F         Y             N         0       315000.0   \n","\n","            Type_Income         EDUCATION Marital_status       Housing_type  \\\n","0             Pensioner  Higher education        Married  House / apartment   \n","1  Commercial associate  Higher education        Married  House / apartment   \n","2  Commercial associate  Higher education        Married  House / apartment   \n","3  Commercial associate  Higher education        Married  House / apartment   \n","4  Commercial associate  Higher education        Married  House / apartment   \n","\n","   Birthday_count  Employed_days  Mobile_phone  Work_Phone  Phone  EMAIL_ID  \\\n","0        -18772.0         365243             1           0      0         0   \n","1        -13557.0           -586             1           1      1         0   \n","2             NaN           -586             1           1      1         0   \n","3        -13557.0           -586             1           1      1         0   \n","4        -13557.0           -586             1           1      1         0   \n","\n","  Type_Occupation  Family_Members  label  \n","0             NaN               2      1  \n","1             NaN               2      1  \n","2             NaN               2      1  \n","3             NaN               2      1  \n","4             NaN               2      1  "],"text/html":["\n","  <div id=\"df-7983afc6-bd9b-486f-8c93-cb0c40d090cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ind_ID</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Mobile_phone</th>\n","      <th>Work_Phone</th>\n","      <th>Phone</th>\n","      <th>EMAIL_ID</th>\n","      <th>Type_Occupation</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5008827</td>\n","      <td>M</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>Pensioner</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5009744</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5009746</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>NaN</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5009749</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5009752</td>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7983afc6-bd9b-486f-8c93-cb0c40d090cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7983afc6-bd9b-486f-8c93-cb0c40d090cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7983afc6-bd9b-486f-8c93-cb0c40d090cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f341050-8de2-491c-a465-4b449bad9a32\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f341050-8de2-491c-a465-4b449bad9a32')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f341050-8de2-491c-a465-4b449bad9a32 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3","summary":"{\n  \"name\": \"df3\",\n  \"rows\": 1548,\n  \"fields\": [\n    {\n      \"column\": \"Ind_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41717,\n        \"min\": 5008827,\n        \"max\": 5150412,\n        \"num_unique_values\": 1548,\n        \"samples\": [\n          5029028,\n          5051097,\n          5028990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113252.9976560387,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Commercial associate\",\n          \"State servant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Secondary / secondary special\",\n          \"Academic degree\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Single / not married\",\n          \"Widow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"House / apartment\",\n          \"With parents\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4229.503202035153,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1270,\n        \"samples\": [\n          -12250.0,\n          -21135.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137808,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 956,\n        \"samples\": [\n          -5004,\n          -8760\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mobile_phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAIL_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Core staff\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}],"source":["# Merges the two tables on common column\n","df3=pd.merge(df1,df2, on ='Ind_ID')\n","df3.head()"]},{"cell_type":"code","execution_count":11,"id":"658da2d3","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"658da2d3","executionInfo":{"status":"ok","timestamp":1708774235641,"user_tz":-330,"elapsed":503,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"378c434e-b58c-4c6a-ab91-5dc3f14bfc53"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1548, 19)"]},"metadata":{},"execution_count":11}],"source":["df3.shape"]},{"cell_type":"code","execution_count":12,"id":"d5d77f0a","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5d77f0a","executionInfo":{"status":"ok","timestamp":1708774237891,"user_tz":-330,"elapsed":7,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"509c698c-aa4a-424b-d10d-64f9de76fb31"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 1548 entries, 0 to 1547\n","Data columns (total 19 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Ind_ID           1548 non-null   int64  \n"," 1   GENDER           1541 non-null   object \n"," 2   Car_Owner        1548 non-null   object \n"," 3   Propert_Owner    1548 non-null   object \n"," 4   CHILDREN         1548 non-null   int64  \n"," 5   Annual_income    1525 non-null   float64\n"," 6   Type_Income      1548 non-null   object \n"," 7   EDUCATION        1548 non-null   object \n"," 8   Marital_status   1548 non-null   object \n"," 9   Housing_type     1548 non-null   object \n"," 10  Birthday_count   1526 non-null   float64\n"," 11  Employed_days    1548 non-null   int64  \n"," 12  Mobile_phone     1548 non-null   int64  \n"," 13  Work_Phone       1548 non-null   int64  \n"," 14  Phone            1548 non-null   int64  \n"," 15  EMAIL_ID         1548 non-null   int64  \n"," 16  Type_Occupation  1060 non-null   object \n"," 17  Family_Members   1548 non-null   int64  \n"," 18  label            1548 non-null   int64  \n","dtypes: float64(2), int64(9), object(8)\n","memory usage: 241.9+ KB\n"]}],"source":["df3.info()"]},{"cell_type":"code","execution_count":13,"id":"2ac46feb","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"2ac46feb","executionInfo":{"status":"ok","timestamp":1708774242406,"user_tz":-330,"elapsed":724,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"2ecd9301-fb13-41d7-aad9-3baa98637ef5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Ind_ID, GENDER, Car_Owner, Propert_Owner, CHILDREN, Annual_income, Type_Income, EDUCATION, Marital_status, Housing_type, Birthday_count, Employed_days, Mobile_phone, Work_Phone, Phone, EMAIL_ID, Type_Occupation, Family_Members, label]\n","Index: []"],"text/html":["\n","  <div id=\"df-a83d205a-6ac7-4b19-aa8f-84452021544a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ind_ID</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Mobile_phone</th>\n","      <th>Work_Phone</th>\n","      <th>Phone</th>\n","      <th>EMAIL_ID</th>\n","      <th>Type_Occupation</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a83d205a-6ac7-4b19-aa8f-84452021544a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a83d205a-6ac7-4b19-aa8f-84452021544a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a83d205a-6ac7-4b19-aa8f-84452021544a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"'str' object has no attribute 'empty'"}},"metadata":{},"execution_count":13}],"source":["# Identify the dublicate values in table\n","df3[df3.duplicated()]"]},{"cell_type":"code","execution_count":14,"id":"1ae54170","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ae54170","executionInfo":{"status":"ok","timestamp":1708774243181,"user_tz":-330,"elapsed":12,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"61b568e2-eab6-40d5-8f1e-e3ad3b1db1cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":14}],"source":["df3.duplicated().any()"]},{"cell_type":"code","execution_count":15,"id":"116b586e","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"116b586e","executionInfo":{"status":"ok","timestamp":1708774247592,"user_tz":-330,"elapsed":775,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e2c74577-aa23-4502-e24c-42a668e33b28"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ind_ID              0.000000\n","GENDER              0.452196\n","Car_Owner           0.000000\n","Propert_Owner       0.000000\n","CHILDREN            0.000000\n","Annual_income       1.485788\n","Type_Income         0.000000\n","EDUCATION           0.000000\n","Marital_status      0.000000\n","Housing_type        0.000000\n","Birthday_count      1.421189\n","Employed_days       0.000000\n","Mobile_phone        0.000000\n","Work_Phone          0.000000\n","Phone               0.000000\n","EMAIL_ID            0.000000\n","Type_Occupation    31.524548\n","Family_Members      0.000000\n","label               0.000000\n","dtype: float64"]},"metadata":{},"execution_count":15}],"source":["# Percent of null values in each column\n","df3.isnull().sum()/len(df3)*100"]},{"cell_type":"code","execution_count":16,"id":"78b82387","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"78b82387","executionInfo":{"status":"ok","timestamp":1708774252028,"user_tz":-330,"elapsed":708,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"efe1afa9-cbbd-468e-e22d-5a5310b55253"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan, 'Core staff', 'Cooking staff', 'Laborers', 'Sales staff',\n","       'Accountants', 'High skill tech staff', 'Managers',\n","       'Cleaning staff', 'Drivers', 'Low-skill Laborers', 'IT staff',\n","       'Waiters/barmen staff', 'Security staff', 'Medicine staff',\n","       'Private service staff', 'HR staff', 'Secretaries',\n","       'Realty agents'], dtype=object)"]},"metadata":{},"execution_count":16}],"source":["# Distinct values in column 'Type_Occupation'\n","df3['Type_Occupation'].unique()"]},{"cell_type":"code","execution_count":17,"id":"842372ed","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"842372ed","executionInfo":{"status":"ok","timestamp":1708774256772,"user_tz":-330,"elapsed":484,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"da21091f-ae76-4025-9512-6cb7757b1f8d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["label  Type_Occupation      \n","0      Laborers                 240\n","       Core staff               151\n","       Managers                 122\n","       Sales staff              112\n","       Drivers                   77\n","       High skill tech staff     58\n","       Medicine staff            47\n","       Accountants               39\n","       Cleaning staff            20\n","       Cooking staff             17\n","       Private service staff     17\n","       Security staff            17\n","       Secretaries                9\n","       Low-skill Laborers         7\n","       Waiters/barmen staff       4\n","       HR staff                   3\n","       Realty agents              2\n","1      Laborers                  28\n","       Core staff                23\n","       Managers                  14\n","       Sales staff               10\n","       Drivers                    9\n","       Security staff             8\n","       High skill tech staff      7\n","       Accountants                5\n","       Cooking staff              4\n","       Medicine staff             3\n","       Cleaning staff             2\n","       IT staff                   2\n","       Low-skill Laborers         2\n","       Waiters/barmen staff       1\n","Name: Type_Occupation, dtype: int64"]},"metadata":{},"execution_count":17}],"source":["# total number of people having credit label good or bad with respect thier type of occupation\n","df3.groupby('label')['Type_Occupation'].value_counts()"]},{"cell_type":"code","execution_count":18,"id":"919e06e3","metadata":{"id":"919e06e3","executionInfo":{"status":"ok","timestamp":1708774261660,"user_tz":-330,"elapsed":448,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# deep copy of dataframe\n","df4=df3.copy()"]},{"cell_type":"markdown","id":"efc2ce9d","metadata":{"id":"efc2ce9d"},"source":["Type_Occupation have large dimensions and irregularity in data. It is not necessary, when we have annual income which is more important than occupation type, to acess credit status.So it is removed from table."]},{"cell_type":"code","execution_count":19,"id":"7fdfacea","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7fdfacea","executionInfo":{"status":"ok","timestamp":1708774265590,"user_tz":-330,"elapsed":492,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"b5b129ea-38ba-4a4d-ed0e-5c168c798113"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0               NaN\n","1               NaN\n","2               NaN\n","3               NaN\n","4               NaN\n","           ...     \n","1543       Managers\n","1544    Accountants\n","1545       Managers\n","1546        Drivers\n","1547            NaN\n","Name: Type_Occupation, Length: 1548, dtype: object"]},"metadata":{},"execution_count":19}],"source":["# Delets the column from table\n","df4.pop('Type_Occupation')"]},{"cell_type":"code","execution_count":20,"id":"9c334ee9","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9c334ee9","executionInfo":{"status":"ok","timestamp":1708774269844,"user_tz":-330,"elapsed":472,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"a7ac295e-c2cc-46ac-d23e-6074cb5048ac"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1548, 18)"]},"metadata":{},"execution_count":20}],"source":["df4.shape"]},{"cell_type":"code","execution_count":21,"id":"84d1efdd","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"84d1efdd","executionInfo":{"status":"ok","timestamp":1708774271666,"user_tz":-330,"elapsed":14,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"d4ce34cb-3199-4d3a-c956-bd34ff5215bd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Ind_ID', 'GENDER', 'Car_Owner', 'Propert_Owner', 'CHILDREN',\n","       'Annual_income', 'Type_Income', 'EDUCATION', 'Marital_status',\n","       'Housing_type', 'Birthday_count', 'Employed_days', 'Mobile_phone',\n","       'Work_Phone', 'Phone', 'EMAIL_ID', 'Family_Members', 'label'],\n","      dtype='object')"]},"metadata":{},"execution_count":21}],"source":["# Different type of Columns in table\n","df4.columns"]},{"cell_type":"code","execution_count":22,"id":"092621ca","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"092621ca","executionInfo":{"status":"ok","timestamp":1708774276805,"user_tz":-330,"elapsed":530,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"26845ce4-92a4-472e-845f-febbc4b0abf5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ind_ID            0.000000\n","GENDER            0.004522\n","Car_Owner         0.000000\n","Propert_Owner     0.000000\n","CHILDREN          0.000000\n","Annual_income     0.014858\n","Type_Income       0.000000\n","EDUCATION         0.000000\n","Marital_status    0.000000\n","Housing_type      0.000000\n","Birthday_count    0.014212\n","Employed_days     0.000000\n","Mobile_phone      0.000000\n","Work_Phone        0.000000\n","Phone             0.000000\n","EMAIL_ID          0.000000\n","Family_Members    0.000000\n","label             0.000000\n","dtype: float64"]},"metadata":{},"execution_count":22}],"source":["df4.isnull().sum()/len(df4)"]},{"cell_type":"code","execution_count":23,"id":"4f8051cf","metadata":{"id":"4f8051cf","executionInfo":{"status":"ok","timestamp":1708774280539,"user_tz":-330,"elapsed":613,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#It removes the rows containing null values from table\n","df4.dropna(inplace=True)"]},{"cell_type":"code","execution_count":24,"id":"f3e74add","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f3e74add","executionInfo":{"status":"ok","timestamp":1708774282877,"user_tz":-330,"elapsed":12,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"67bdd376-776f-4eaf-dd03-1b7365097a74"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ind_ID            0.0\n","GENDER            0.0\n","Car_Owner         0.0\n","Propert_Owner     0.0\n","CHILDREN          0.0\n","Annual_income     0.0\n","Type_Income       0.0\n","EDUCATION         0.0\n","Marital_status    0.0\n","Housing_type      0.0\n","Birthday_count    0.0\n","Employed_days     0.0\n","Mobile_phone      0.0\n","Work_Phone        0.0\n","Phone             0.0\n","EMAIL_ID          0.0\n","Family_Members    0.0\n","label             0.0\n","dtype: float64"]},"metadata":{},"execution_count":24}],"source":["df4.isnull().sum()/len(df4)"]},{"cell_type":"code","execution_count":25,"id":"a05af596","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a05af596","executionInfo":{"status":"ok","timestamp":1708774286560,"user_tz":-330,"elapsed":581,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"0be16371-f540-48db-f990-8bff2c1c1c13"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       5008827\n","1       5009744\n","4       5009752\n","6       5009754\n","7       5009894\n","         ...   \n","1542    5118268\n","1544    5023655\n","1545    5115992\n","1546    5118219\n","1547    5053790\n","Name: Ind_ID, Length: 1496, dtype: int64"]},"metadata":{},"execution_count":25}],"source":["#Id delets the Id column from table. Because it does not affect credit status\n","df4.pop('Ind_ID')"]},{"cell_type":"code","execution_count":26,"id":"0c558f8f","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0c558f8f","executionInfo":{"status":"ok","timestamp":1708774289863,"user_tz":-330,"elapsed":488,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"92d5474a-d390-4a0f-f90a-1892379b1dcf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['GENDER', 'Car_Owner', 'Propert_Owner', 'CHILDREN', 'Annual_income',\n","       'Type_Income', 'EDUCATION', 'Marital_status', 'Housing_type',\n","       'Birthday_count', 'Employed_days', 'Mobile_phone', 'Work_Phone',\n","       'Phone', 'EMAIL_ID', 'Family_Members', 'label'],\n","      dtype='object')"]},"metadata":{},"execution_count":26}],"source":["df4.columns"]},{"cell_type":"markdown","id":"559cabcf","metadata":{"id":"559cabcf"},"source":["# Feature engineering"]},{"cell_type":"markdown","id":"565b67c7","metadata":{"id":"565b67c7"},"source":["Creating seperate dataframe for catogorical and numerical values to facilitate data processing and feature engineering"]},{"cell_type":"code","execution_count":27,"id":"0e910db4","metadata":{"id":"0e910db4","executionInfo":{"status":"ok","timestamp":1708774293606,"user_tz":-330,"elapsed":731,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# catogorical dataframe\n","df4_cat=df4[['GENDER', 'Car_Owner', 'Propert_Owner','Type_Income', 'EDUCATION', 'Marital_status',\n","       'Housing_type']]"]},{"cell_type":"code","execution_count":28,"id":"b0e404f5","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"b0e404f5","executionInfo":{"status":"ok","timestamp":1708774297297,"user_tz":-330,"elapsed":468,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"9d3dfa90-4bda-4ff9-9e4b-3affa7225346"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  GENDER Car_Owner Propert_Owner           Type_Income  \\\n","0      M         Y             Y             Pensioner   \n","1      F         Y             N  Commercial associate   \n","4      F         Y             N  Commercial associate   \n","6      F         Y             N  Commercial associate   \n","7      F         N             N             Pensioner   \n","\n","                       EDUCATION Marital_status       Housing_type  \n","0               Higher education        Married  House / apartment  \n","1               Higher education        Married  House / apartment  \n","4               Higher education        Married  House / apartment  \n","6               Higher education        Married  House / apartment  \n","7  Secondary / secondary special        Married  House / apartment  "],"text/html":["\n","  <div id=\"df-f80255aa-0d14-4a45-a43e-0ef85c159e7a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>Pensioner</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>Commercial associate</td>\n","      <td>Higher education</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>F</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>Pensioner</td>\n","      <td>Secondary / secondary special</td>\n","      <td>Married</td>\n","      <td>House / apartment</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f80255aa-0d14-4a45-a43e-0ef85c159e7a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f80255aa-0d14-4a45-a43e-0ef85c159e7a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f80255aa-0d14-4a45-a43e-0ef85c159e7a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab6c02ec-3879-46ba-9bee-928a40442081\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab6c02ec-3879-46ba-9bee-928a40442081')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab6c02ec-3879-46ba-9bee-928a40442081 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df4_cat","summary":"{\n  \"name\": \"df4_cat\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Commercial associate\",\n          \"State servant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Secondary / secondary special\",\n          \"Academic degree\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Single / not married\",\n          \"Widow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"House / apartment\",\n          \"With parents\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}],"source":["df4_cat.head()"]},{"cell_type":"code","execution_count":29,"id":"383ddd8e","metadata":{"id":"383ddd8e","executionInfo":{"status":"ok","timestamp":1708774305406,"user_tz":-330,"elapsed":586,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#numerical dataframe\n","df4_nu=df4.drop(['GENDER', 'Car_Owner', 'Propert_Owner','Type_Income', 'EDUCATION', 'Marital_status',\n","       'Housing_type'], axis= 1)"]},{"cell_type":"code","execution_count":30,"id":"64b096f9","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"64b096f9","executionInfo":{"status":"ok","timestamp":1708774307101,"user_tz":-330,"elapsed":25,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e8fb8560-4f75-4600-ece1-982f0f81250c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CHILDREN  Annual_income  Birthday_count  Employed_days  Mobile_phone  \\\n","0         0       180000.0        -18772.0         365243             1   \n","1         0       315000.0        -13557.0           -586             1   \n","4         0       315000.0        -13557.0           -586             1   \n","6         0       315000.0        -13557.0           -586             1   \n","7         0       180000.0        -22134.0         365243             1   \n","\n","   Work_Phone  Phone  EMAIL_ID  Family_Members  label  \n","0           0      0         0               2      1  \n","1           1      1         0               2      1  \n","4           1      1         0               2      1  \n","6           1      1         0               2      1  \n","7           0      0         0               2      1  "],"text/html":["\n","  <div id=\"df-e9cf0506-30a0-47a7-b897-37aa5309afab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Mobile_phone</th>\n","      <th>Work_Phone</th>\n","      <th>Phone</th>\n","      <th>EMAIL_ID</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-22134.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9cf0506-30a0-47a7-b897-37aa5309afab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9cf0506-30a0-47a7-b897-37aa5309afab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9cf0506-30a0-47a7-b897-37aa5309afab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-721b4bbe-cc6b-4e3d-8269-6b6bc82db793\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-721b4bbe-cc6b-4e3d-8269-6b6bc82db793')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-721b4bbe-cc6b-4e3d-8269-6b6bc82db793 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df4_nu","summary":"{\n  \"name\": \"df4_nu\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113138.37456229939,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4226.506556872755,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          -23360.0,\n          -13336.0,\n          -11532.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137766,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 931,\n        \"samples\": [\n          -2024,\n          -1595,\n          -1114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mobile_phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAIL_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}],"source":["df4_nu.head()"]},{"cell_type":"code","execution_count":31,"id":"62d4bb11","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":934,"referenced_widgets":["cab142a87a1945629e60ab513c4e24fd","e67d2e7246d140c680fb27d68fdfdd59","f10aae087d7b437e87d02478576dcf6c","d28c54c156b641619d2196456db5381b","5a31716b88b64d47bbf42e906361ed47","bdaf46f96b5e422ea68a8a8f0575778a","ce1a6a396bcb40a4b770766d0fdbb9e1"]},"id":"62d4bb11","executionInfo":{"status":"ok","timestamp":1708774311825,"user_tz":-330,"elapsed":1293,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"cd01ef14-5c93-428e-830c-9b915ad2dafc"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('GENDER', 'Car_Owner', 'Propert_Owner', 'Type_Incomâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cab142a87a1945629e60ab513c4e24fd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#Creates interative drop down list\n","@interact\n","def cat_uniq(col=list(df4_cat.columns)):\n","    print(df4_cat[col].value_counts())\n","    sns.countplot(x=df4_cat[col],hue=df4['label'], data= df4_cat)"]},{"cell_type":"markdown","id":"3335e8ce","metadata":{"id":"3335e8ce"},"source":["Reducing dimensions of categorical columns"]},{"cell_type":"code","execution_count":32,"id":"388f2926","metadata":{"id":"388f2926","executionInfo":{"status":"ok","timestamp":1708774321882,"user_tz":-330,"elapsed":457,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["df4_cat1=df4_cat.copy()"]},{"cell_type":"code","execution_count":33,"id":"87e2a097","metadata":{"id":"87e2a097","executionInfo":{"status":"ok","timestamp":1708774326055,"user_tz":-330,"elapsed":27,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#sorting values into ['Commercial associate', 'Working', 'State servant'] as'working' and remaining as'Pensioner'\n","df4_cat1['Type_Income']=np.where(df4_cat1['Type_Income'].isin(['Commercial associate', 'Working', 'State servant']), 'working', 'Pensioner')\n"]},{"cell_type":"code","execution_count":34,"id":"b04e89b1","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b04e89b1","executionInfo":{"status":"ok","timestamp":1708774328400,"user_tz":-330,"elapsed":10,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"9257e395-9562-4987-f816-2a3924398807"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["working      1237\n","Pensioner     259\n","Name: Type_Income, dtype: int64"]},"metadata":{},"execution_count":34}],"source":["df4_cat1['Type_Income'].value_counts()"]},{"cell_type":"code","execution_count":35,"id":"7bfd7733","metadata":{"id":"7bfd7733","executionInfo":{"status":"ok","timestamp":1708774339761,"user_tz":-330,"elapsed":438,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#sorting values into ['Higher education','Academic degree'] as'Degree' and ['Secondary / secondary special','Incomplete higher'] as'Secondary' and remaining as 'Lower Secondary'\n","df4_cat1['EDUCATION']=np.where(df4_cat1['EDUCATION'].isin(['Higher education','Academic degree']), 'Degree',np.where(df4_cat1['EDUCATION'].isin(['Secondary / secondary special','Incomplete higher']), 'Secondary', 'Lower Secondary'))\n"]},{"cell_type":"code","execution_count":36,"id":"79b40f37","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"79b40f37","executionInfo":{"status":"ok","timestamp":1708774342524,"user_tz":-330,"elapsed":13,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"f73034a6-97c1-4057-de5e-50f3f1c9d6b0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Secondary          1064\n","Degree              411\n","Lower Secondary      21\n","Name: EDUCATION, dtype: int64"]},"metadata":{},"execution_count":36}],"source":["df4_cat1['EDUCATION'].value_counts()"]},{"cell_type":"code","execution_count":37,"id":"c434ba8f","metadata":{"id":"c434ba8f","executionInfo":{"status":"ok","timestamp":1708774344653,"user_tz":-330,"elapsed":9,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#sorting values into ['Married','Civil marriage'] as 'Married' and ['Separated','Widow'] as 'Single(married)' and remaining as 'Single(not married)'\n","\n","df4_cat1['Marital_status']=np.where(df4_cat1['Marital_status'].isin(['Married','Civil marriage']), 'Married',np.where(df4_cat1['Marital_status'].isin(['Separated','Widow']), 'Single(married)', 'Single(not married)'))\n"]},{"cell_type":"code","execution_count":38,"id":"12f20616","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"12f20616","executionInfo":{"status":"ok","timestamp":1708774347984,"user_tz":-330,"elapsed":498,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"ec45d134-a2c9-4171-fd09-5911ef448970"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Married                1112\n","Single(not married)     218\n","Single(married)         166\n","Name: Marital_status, dtype: int64"]},"metadata":{},"execution_count":38}],"source":["# Total number of each distinct values in marital_status column\n","df4_cat1['Marital_status'].value_counts()"]},{"cell_type":"code","execution_count":39,"id":"24298338","metadata":{"id":"24298338","executionInfo":{"status":"ok","timestamp":1708774350815,"user_tz":-330,"elapsed":523,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#sorting values into ['House / apartment','With parents'] as 'Own_house' and remaining as'No-Own_house'\n","df4_cat1['Housing_type']=np.where(df4_cat1['Housing_type'].isin(['House / apartment','With parents']), 'Own_house', 'No-Own_house')\n"]},{"cell_type":"code","execution_count":40,"id":"eb39523a","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eb39523a","executionInfo":{"status":"ok","timestamp":1708774354360,"user_tz":-330,"elapsed":496,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"fadbcfed-6966-4f32-90eb-85a01b8d8170"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Own_house       1410\n","No-Own_house      86\n","Name: Housing_type, dtype: int64"]},"metadata":{},"execution_count":40}],"source":["df4_cat1['Housing_type'].value_counts()"]},{"cell_type":"code","execution_count":41,"id":"5861e8cc","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"5861e8cc","executionInfo":{"status":"ok","timestamp":1708774357046,"user_tz":-330,"elapsed":18,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"ad26bd55-a880-41ac-ace2-6c9565e47274"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  GENDER Car_Owner Propert_Owner Type_Income  EDUCATION Marital_status  \\\n","0      M         Y             Y   Pensioner     Degree        Married   \n","1      F         Y             N     working     Degree        Married   \n","4      F         Y             N     working     Degree        Married   \n","6      F         Y             N     working     Degree        Married   \n","7      F         N             N   Pensioner  Secondary        Married   \n","\n","  Housing_type  \n","0    Own_house  \n","1    Own_house  \n","4    Own_house  \n","6    Own_house  \n","7    Own_house  "],"text/html":["\n","  <div id=\"df-d24a611a-5c47-45c6-a305-e2df4ff76c84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>M</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>Pensioner</td>\n","      <td>Degree</td>\n","      <td>Married</td>\n","      <td>Own_house</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>working</td>\n","      <td>Degree</td>\n","      <td>Married</td>\n","      <td>Own_house</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>working</td>\n","      <td>Degree</td>\n","      <td>Married</td>\n","      <td>Own_house</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>F</td>\n","      <td>Y</td>\n","      <td>N</td>\n","      <td>working</td>\n","      <td>Degree</td>\n","      <td>Married</td>\n","      <td>Own_house</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>F</td>\n","      <td>N</td>\n","      <td>N</td>\n","      <td>Pensioner</td>\n","      <td>Secondary</td>\n","      <td>Married</td>\n","      <td>Own_house</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d24a611a-5c47-45c6-a305-e2df4ff76c84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d24a611a-5c47-45c6-a305-e2df4ff76c84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d24a611a-5c47-45c6-a305-e2df4ff76c84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-424764ff-989c-4f0b-be6a-30ab3787e5c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-424764ff-989c-4f0b-be6a-30ab3787e5c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-424764ff-989c-4f0b-be6a-30ab3787e5c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df4_cat1","summary":"{\n  \"name\": \"df4_cat1\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"N\",\n          \"Y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"working\",\n          \"Pensioner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Degree\",\n          \"Secondary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Married\",\n          \"Single(not married)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No-Own_house\",\n          \"Own_house\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}],"source":["df4_cat1.head()"]},{"cell_type":"code","execution_count":42,"id":"dff7bf4d","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":934,"referenced_widgets":["7f4bee0f9cc2489bb108d8ada7907197","58a09eff2fa6448ab4b57bfd4c984b40","ec8ae469657d4d85907a433b59797156","38bf7cb843554319854eae90f76edb41","fdd61593284f4d588e3fd5f12f7fdb28","253a829725184372a31b6d7cc07a7f8e","168f9f8f72454119804d8426c28acb6d"]},"id":"dff7bf4d","executionInfo":{"status":"ok","timestamp":1708774361058,"user_tz":-330,"elapsed":812,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"53bd322c-6656-4ecb-e7ae-92736b59f62b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('GENDER', 'Car_Owner', 'Propert_Owner', 'Type_Incomâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7f4bee0f9cc2489bb108d8ada7907197"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# User interaction to view distinct values of column and graph of 'distinct values' vs 'label'\n","@interact\n","def cat_uniq(col=list(df4_cat1.columns)):\n","    print(df4_cat1[col].value_counts()) # distinct values of column\n","    sns.countplot(x=df4_cat1[col],hue=df4['label'], data= df4_cat1) # ploting each distinct'value vs label', to observe no_of each values with 0 & 1 label."]},{"cell_type":"code","execution_count":43,"id":"24fd7583","metadata":{"id":"24fd7583","executionInfo":{"status":"ok","timestamp":1708774367855,"user_tz":-330,"elapsed":471,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["df4_cat2=df4_cat1.copy()"]},{"cell_type":"code","execution_count":44,"id":"309740c4","metadata":{"id":"309740c4","executionInfo":{"status":"ok","timestamp":1708774369931,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["le=LabelEncoder() # to create numerical dummies for categorical values."]},{"cell_type":"code","execution_count":45,"id":"81833641","metadata":{"id":"81833641","executionInfo":{"status":"ok","timestamp":1708774371954,"user_tz":-330,"elapsed":13,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["cols=list(df4_cat2.columns)\n","\n","# loop which iterate over all categorical columns and creates dummies for it.\n","for i in cols:\n","    df4_cat2[i]=le.fit_transform(df4_cat2[i])\n"]},{"cell_type":"code","execution_count":46,"id":"ed390cea","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"ed390cea","executionInfo":{"status":"ok","timestamp":1708774375688,"user_tz":-330,"elapsed":695,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"8bca8140-ebb4-44a4-f299-c33efddb9505"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  Marital_status  \\\n","0        1          1              1            0          0               0   \n","1        0          1              0            1          0               0   \n","4        0          1              0            1          0               0   \n","6        0          1              0            1          0               0   \n","7        0          0              0            0          2               0   \n","8        1          1              1            1          2               0   \n","9        1          1              1            0          2               0   \n","10       1          1              1            1          2               2   \n","11       0          1              1            1          2               0   \n","13       0          1              1            1          2               0   \n","14       1          0              0            0          0               0   \n","15       1          0              1            1          2               0   \n","16       1          0              1            1          2               2   \n","17       0          0              1            1          0               2   \n","18       0          0              1            1          0               2   \n","\n","    Housing_type  \n","0              1  \n","1              1  \n","4              1  \n","6              1  \n","7              1  \n","8              1  \n","9              1  \n","10             1  \n","11             1  \n","13             1  \n","14             1  \n","15             1  \n","16             1  \n","17             1  \n","18             1  "],"text/html":["\n","  <div id=\"df-9cbc1e25-29f2-46a2-95f7-7b307a939e34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cbc1e25-29f2-46a2-95f7-7b307a939e34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9cbc1e25-29f2-46a2-95f7-7b307a939e34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9cbc1e25-29f2-46a2-95f7-7b307a939e34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db583562-4f43-4c88-b697-72f4f2677a58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db583562-4f43-4c88-b697-72f4f2677a58')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db583562-4f43-4c88-b697-72f4f2677a58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df4_cat2","summary":"{\n  \"name\": \"df4_cat2\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}],"source":["# Data frame of Categorical columns transformed with numerical dummy values using 'LabelEncoder'\n","df4_cat2.head(15)"]},{"cell_type":"markdown","id":"42544d81","metadata":{"id":"42544d81"},"source":["- 'Gender:        Female- 0 ,  Male- 1'\n","- 'Car_owner:     No-0,        Yes-1 '\n","- 'Property_owner:No-0,        Yes-1 '\n","- 'Type_Income:   Working-1,   Pensioner-0 '\n","- 'Education:     Lower Secondary-0,    Degree-1,    Secondary-2'\n","- 'Martial status:Married-0,   Single(married)-1,    Singele(Not married)-2 '\n","- 'Housing type:  No-Own house-0,  Own house-1"]},{"cell_type":"code","execution_count":47,"id":"c8fe549a","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"c8fe549a","executionInfo":{"status":"ok","timestamp":1708774381464,"user_tz":-330,"elapsed":834,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"c134c447-54fd-4bd6-fb64-5d326eb85f44"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CHILDREN  Annual_income  Birthday_count  Employed_days  Mobile_phone  \\\n","0         0       180000.0        -18772.0         365243             1   \n","1         0       315000.0        -13557.0           -586             1   \n","4         0       315000.0        -13557.0           -586             1   \n","6         0       315000.0        -13557.0           -586             1   \n","7         0       180000.0        -22134.0         365243             1   \n","\n","   Work_Phone  Phone  EMAIL_ID  Family_Members  label  \n","0           0      0         0               2      1  \n","1           1      1         0               2      1  \n","4           1      1         0               2      1  \n","6           1      1         0               2      1  \n","7           0      0         0               2      1  "],"text/html":["\n","  <div id=\"df-d9042439-c911-4cde-8b7f-d21033339e67\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Mobile_phone</th>\n","      <th>Work_Phone</th>\n","      <th>Phone</th>\n","      <th>EMAIL_ID</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-22134.0</td>\n","      <td>365243</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9042439-c911-4cde-8b7f-d21033339e67')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9042439-c911-4cde-8b7f-d21033339e67 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9042439-c911-4cde-8b7f-d21033339e67');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cef9c989-29e0-4858-91b5-27a29458c6a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cef9c989-29e0-4858-91b5-27a29458c6a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cef9c989-29e0-4858-91b5-27a29458c6a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df4_nu","summary":"{\n  \"name\": \"df4_nu\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113138.37456229939,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4226.506556872755,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          -23360.0,\n          -13336.0,\n          -11532.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137766,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 931,\n        \"samples\": [\n          -2024,\n          -1595,\n          -1114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mobile_phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Work_Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Phone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAIL_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}],"source":["df4_nu.head()"]},{"cell_type":"markdown","id":"328f1c2f","metadata":{"id":"328f1c2f"},"source":["The columns 'Mobile_phone', 'Work_Phone', 'Phone', 'EMAIL_ID' do not have any effect on credit labeling so these are removed from dataframe for further analysis"]},{"cell_type":"code","execution_count":48,"id":"0827d81c","metadata":{"id":"0827d81c","executionInfo":{"status":"ok","timestamp":1708774385672,"user_tz":-330,"elapsed":498,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["df4_nu1=df4_nu.copy()\n","df4_nu1.drop(['Mobile_phone', 'Work_Phone', 'Phone', 'EMAIL_ID'], axis=1,inplace=True)"]},{"cell_type":"code","execution_count":49,"id":"725fa904","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"725fa904","executionInfo":{"status":"ok","timestamp":1708774387398,"user_tz":-330,"elapsed":28,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"6116aa0a-2e7a-4ba0-d634-851e43a70ac5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["          CHILDREN  Annual_income  Birthday_count  Employed_days  \\\n","count  1496.000000   1.496000e+03     1496.000000    1496.000000   \n","mean      0.415775   1.907750e+05   -16036.192513   59290.681818   \n","std       0.780784   1.131384e+05     4226.506557  137766.774169   \n","min       0.000000   3.375000e+04   -24946.000000  -14887.000000   \n","25%       0.000000   1.210500e+05   -19543.000000   -3229.250000   \n","50%       0.000000   1.660500e+05   -15686.000000   -1575.500000   \n","75%       1.000000   2.250000e+05   -12417.000000    -431.000000   \n","max      14.000000   1.575000e+06    -7705.000000  365243.000000   \n","\n","       Family_Members        label  \n","count     1496.000000  1496.000000  \n","mean         2.165107     0.106952  \n","std          0.951752     0.309155  \n","min          1.000000     0.000000  \n","25%          2.000000     0.000000  \n","50%          2.000000     0.000000  \n","75%          3.000000     0.000000  \n","max         15.000000     1.000000  "],"text/html":["\n","  <div id=\"df-a1360435-9bfc-4ae0-af3a-3905ef42300f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1496.000000</td>\n","      <td>1.496000e+03</td>\n","      <td>1496.000000</td>\n","      <td>1496.000000</td>\n","      <td>1496.000000</td>\n","      <td>1496.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.415775</td>\n","      <td>1.907750e+05</td>\n","      <td>-16036.192513</td>\n","      <td>59290.681818</td>\n","      <td>2.165107</td>\n","      <td>0.106952</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.780784</td>\n","      <td>1.131384e+05</td>\n","      <td>4226.506557</td>\n","      <td>137766.774169</td>\n","      <td>0.951752</td>\n","      <td>0.309155</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>3.375000e+04</td>\n","      <td>-24946.000000</td>\n","      <td>-14887.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>1.210500e+05</td>\n","      <td>-19543.000000</td>\n","      <td>-3229.250000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>1.660500e+05</td>\n","      <td>-15686.000000</td>\n","      <td>-1575.500000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>2.250000e+05</td>\n","      <td>-12417.000000</td>\n","      <td>-431.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>14.000000</td>\n","      <td>1.575000e+06</td>\n","      <td>-7705.000000</td>\n","      <td>365243.000000</td>\n","      <td>15.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1360435-9bfc-4ae0-af3a-3905ef42300f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a1360435-9bfc-4ae0-af3a-3905ef42300f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a1360435-9bfc-4ae0-af3a-3905ef42300f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3ee94487-d49a-4c4e-bf68-58c67f618e8a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ee94487-d49a-4c4e-bf68-58c67f618e8a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3ee94487-d49a-4c4e-bf68-58c67f618e8a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df4_nu1\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 528.1195046247265,\n        \"min\": 0.0,\n        \"max\": 1496.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1496.0,\n          0.4157754010695187,\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 519336.1927847859,\n        \"min\": 1496.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          190775.04846256683,\n          166050.0,\n          1496.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10105.19716222988,\n        \"min\": -24946.0,\n        \"max\": 4226.506556872755,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -16036.192513368984,\n          -15686.0,\n          1496.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 130486.36356965025,\n        \"min\": -14887.0,\n        \"max\": 365243.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          59290.681818181816,\n          -1575.5,\n          1496.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.6172350415249,\n        \"min\": 0.9517519782057345,\n        \"max\": 1496.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1496.0,\n          2.1651069518716577,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 528.8444589356642,\n        \"min\": 0.0,\n        \"max\": 1496.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.10695187165775401,\n          1.0,\n          0.3091553933119813\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}],"source":["# Statistical attributes of each numerical column\n","df4_nu1.describe()"]},{"cell_type":"code","execution_count":50,"id":"50685333","metadata":{"id":"50685333","executionInfo":{"status":"ok","timestamp":1708774391327,"user_tz":-330,"elapsed":566,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# To combine the columns of both data frames\n","dfs=[df4_nu1,df4_cat2]\n","df5=pd.concat(dfs, axis=1)"]},{"cell_type":"code","execution_count":51,"id":"6ec49608","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"6ec49608","executionInfo":{"status":"ok","timestamp":1708774393530,"user_tz":-330,"elapsed":34,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"630b026d-915b-4e06-bc6c-c29363314a04"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CHILDREN  Annual_income  Birthday_count  Employed_days  Family_Members  \\\n","0            0       180000.0        -18772.0         365243               2   \n","1            0       315000.0        -13557.0           -586               2   \n","4            0       315000.0        -13557.0           -586               2   \n","6            0       315000.0        -13557.0           -586               2   \n","7            0       180000.0        -22134.0         365243               2   \n","...        ...            ...             ...            ...             ...   \n","1542         1       360000.0        -11294.0          -3536               3   \n","1544         0       225000.0        -10229.0          -1209               1   \n","1545         2       180000.0        -13174.0          -2477               4   \n","1546         0       270000.0        -15292.0           -645               2   \n","1547         0       225000.0        -16601.0          -2859               2   \n","\n","      label  GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  \\\n","0         1       1          1              1            0          0   \n","1         1       0          1              0            1          0   \n","4         1       0          1              0            1          0   \n","6         1       0          1              0            1          0   \n","7         1       0          0              0            0          2   \n","...     ...     ...        ...            ...          ...        ...   \n","1542      0       1          1              0            1          2   \n","1544      0       0          0              0            1          2   \n","1545      0       1          1              1            1          0   \n","1546      0       1          1              0            1          2   \n","1547      0       0          1              1            1          0   \n","\n","      Marital_status  Housing_type  \n","0                  0             1  \n","1                  0             1  \n","4                  0             1  \n","6                  0             1  \n","7                  0             1  \n","...              ...           ...  \n","1542               0             1  \n","1544               2             1  \n","1545               0             1  \n","1546               0             1  \n","1547               0             1  \n","\n","[1496 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-c72a6096-ca7b-487d-9431-9e2d0674d8aa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-22134.0</td>\n","      <td>365243</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1542</th>\n","      <td>1</td>\n","      <td>360000.0</td>\n","      <td>-11294.0</td>\n","      <td>-3536</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1544</th>\n","      <td>0</td>\n","      <td>225000.0</td>\n","      <td>-10229.0</td>\n","      <td>-1209</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1545</th>\n","      <td>2</td>\n","      <td>180000.0</td>\n","      <td>-13174.0</td>\n","      <td>-2477</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1546</th>\n","      <td>0</td>\n","      <td>270000.0</td>\n","      <td>-15292.0</td>\n","      <td>-645</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1547</th>\n","      <td>0</td>\n","      <td>225000.0</td>\n","      <td>-16601.0</td>\n","      <td>-2859</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1496 rows Ã— 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c72a6096-ca7b-487d-9431-9e2d0674d8aa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c72a6096-ca7b-487d-9431-9e2d0674d8aa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c72a6096-ca7b-487d-9431-9e2d0674d8aa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8d7ed48e-c1f6-4e70-8108-1cb696d1c181\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d7ed48e-c1f6-4e70-8108-1cb696d1c181')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8d7ed48e-c1f6-4e70-8108-1cb696d1c181 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1978578c-10c3-417d-906e-bbf0fb5554d9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df5')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1978578c-10c3-417d-906e-bbf0fb5554d9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df5');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df5","summary":"{\n  \"name\": \"df5\",\n  \"rows\": 1496,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113138.37456229939,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4226.506556872755,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          -23360.0,\n          -13336.0,\n          -11532.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137766,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 931,\n        \"samples\": [\n          -2024,\n          -1595,\n          -1114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}],"source":["df5"]},{"cell_type":"code","execution_count":52,"id":"510cbf7f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":66,"referenced_widgets":["65987b3f1a704d1284162db99f4da91d","d98c51a70488404f9f86c0310fa73945","f6d7965040f648fda95c39a856809f9a","4bda211b364f427fbbda78cc5473d515","b41342aa082b49e5b04919a9bfb6c4cd","656b3875cb4b47a7bf0f63e2cd0c5bc2","019f9f7d3a704ad2bd40c3b5e25e25aa"]},"id":"510cbf7f","executionInfo":{"status":"ok","timestamp":1708774397882,"user_tz":-330,"elapsed":644,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"0872f516-ed4f-446b-dbbb-7e8087a105d4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('CHILDREN', 'Annual_income', 'Birthday_count', 'Empâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"65987b3f1a704d1284162db99f4da91d"}},"metadata":{}}],"source":["@interact\n","def cat_uniq(col=list(df5.columns)):\n","    print(df5[col].unique())\n","    #sns.plot(x=df4_cat1[col],hue=df4['label'], data= df4_cat1)"]},{"cell_type":"code","execution_count":53,"id":"a67ad38d","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":867},"id":"a67ad38d","executionInfo":{"status":"ok","timestamp":1708774401723,"user_tz":-330,"elapsed":647,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"801b6487-f9c1-4e76-c0bd-fdea2d6dc717"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='CHILDREN', ylabel='Family_Members'>"]},"metadata":{},"execution_count":53},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Relationship between Children and family members\n","sns.scatterplot(x= df5['CHILDREN'], y=df5['Family_Members'], data=df5) # Scatter plot"]},{"cell_type":"code","execution_count":54,"id":"31c4c6be","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":101},"id":"31c4c6be","executionInfo":{"status":"ok","timestamp":1708774408048,"user_tz":-330,"elapsed":850,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"88817df7-1fe0-4bf1-fc00-1454433b544e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     CHILDREN  Annual_income  Birthday_count  Employed_days  Family_Members  \\\n","565        14       225000.0        -17754.0          -1689              15   \n","\n","     label  GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  \\\n","565      0       1          1              1            1          2   \n","\n","     Marital_status  Housing_type  \n","565               1             1  "],"text/html":["\n","  <div id=\"df-8a87569b-8499-4a17-8ed9-86a0f90eef56\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>565</th>\n","      <td>14</td>\n","      <td>225000.0</td>\n","      <td>-17754.0</td>\n","      <td>-1689</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a87569b-8499-4a17-8ed9-86a0f90eef56')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a87569b-8499-4a17-8ed9-86a0f90eef56 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a87569b-8499-4a17-8ed9-86a0f90eef56');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df5[df5['CHILDREN']>4]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 14,\n        \"max\": 14,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 225000.0,\n        \"max\": 225000.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          225000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": -17754.0,\n        \"max\": -17754.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -17754.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": -1689,\n        \"max\": -1689,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -1689\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 15,\n        \"max\": 15,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2,\n        \"max\": 2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}],"source":["# rows having number of children more than 4\n","df5[df5['CHILDREN']>4]"]},{"cell_type":"markdown","id":"fe9f5e02","metadata":{"id":"fe9f5e02"},"source":["It appears rare case of family with 14 childrens. To overcome outlier error and enhance data modeling and accuracy, it is removed from table"]},{"cell_type":"code","execution_count":55,"id":"c7687ed9","metadata":{"id":"c7687ed9","executionInfo":{"status":"ok","timestamp":1708774413518,"user_tz":-330,"elapsed":495,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["#Removing row from dataframe\n","df6=df5[~(df5['CHILDREN']>4)]"]},{"cell_type":"code","execution_count":56,"id":"2de24e46","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2de24e46","executionInfo":{"status":"ok","timestamp":1708774415929,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"f8f871aa-ae08-4a80-a40a-81415b261eb4"},"outputs":[{"output_type":"stream","name":"stdout","text":["df5: (1496, 13)\n","df6: (1495, 13)\n"]}],"source":["print('df5:',df5.shape)\n","print('df6:',df6.shape)"]},{"cell_type":"code","execution_count":57,"id":"f08fd260","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f08fd260","executionInfo":{"status":"ok","timestamp":1708774420462,"user_tz":-330,"elapsed":475,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"90c67e59-614d-4938-f084-df0d439cf222"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-57-3b0daca843e5>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df6['age']=round(df6['Birthday_count']/365*-1, 0) # converts number of days into years\n"]}],"source":["# Create a new column 'age' from 'birthday_count' column\n","df6['age']=round(df6['Birthday_count']/365*-1, 0) # converts number of days into years"]},{"cell_type":"code","execution_count":58,"id":"7bef83d3","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7bef83d3","executionInfo":{"status":"ok","timestamp":1708774424124,"user_tz":-330,"elapsed":502,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"26fd0b3a-0411-4e5c-e2b6-f83ca75fbf4d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([51., 37., 61., 50., 52., 24., 46., 35., 33., 49., 44., 43., 60.,\n","       55., 29., 36., 56., 58., 65., 53., 64., 42., 30., 32., 26., 28.,\n","       45., 67., 25., 57., 59., 38., 31., 40., 34., 47., 41., 63., 54.,\n","       48., 62., 27., 39., 66., 23., 68., 22., 21.])"]},"metadata":{},"execution_count":58}],"source":["df6['age'].unique() # distinct ages in column"]},{"cell_type":"code","execution_count":59,"id":"271a6d04","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":953},"id":"271a6d04","executionInfo":{"status":"ok","timestamp":1708774427457,"user_tz":-330,"elapsed":1133,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"615e5510-5432-4739-fdbe-9f401372de66"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(20,15))\n","sns.countplot(x=df6['age'], hue=df6['label'], data=df6)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":60,"id":"12882eba","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"12882eba","executionInfo":{"status":"ok","timestamp":1708774433263,"user_tz":-330,"elapsed":451,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"1e26f4a2-c8f8-4aee-836e-d31b5a0ea2b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([365243])"]},"metadata":{},"execution_count":60}],"source":["df6[df6['Employed_days']>0]['Employed_days'].unique()"]},{"cell_type":"code","execution_count":61,"id":"61883693","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61883693","executionInfo":{"status":"ok","timestamp":1708774437380,"user_tz":-330,"elapsed":818,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"32001287-b296-4299-b241-9d002b0d4315"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-61-20a8c93dfb49>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df6['Experience']=np.where(df6['Employed_days']>0, 0, exp)\n"]}],"source":["exp= round(df6['Employed_days']/365*-1,0)\n","df6['Experience']=np.where(df6['Employed_days']>0, 0, exp)"]},{"cell_type":"code","execution_count":62,"id":"669d5c46","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"669d5c46","executionInfo":{"status":"ok","timestamp":1708774441439,"user_tz":-330,"elapsed":811,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"18eb0709-01e3-4f2a-fde9-fba4fbf0c561"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.,  2.,  3.,  1.,  7.,  5., 12., 13., 10.,  4., 20.,  6., 11.,\n","        9., 23.,  8., 14., 19., 22., 21., 17., 26., 24., 15., 16., 34.,\n","       37., 27., 41., 35., 18., 31., 32., 25., 29., 38., 33., 28., 36.])"]},"metadata":{},"execution_count":62}],"source":["df6['Experience'].unique()"]},{"cell_type":"code","execution_count":63,"id":"602af4b0","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":948},"id":"602af4b0","executionInfo":{"status":"ok","timestamp":1708774446802,"user_tz":-330,"elapsed":1428,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e0435297-7afc-4f95-8c44-01ce81b46f1c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(20,15))\n","sns.countplot(x=df6['Experience'], hue=df6['label'], data=df6)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":64,"id":"3891bc8c","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"3891bc8c","executionInfo":{"status":"ok","timestamp":1708774453270,"user_tz":-330,"elapsed":520,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"87302c12-0ecc-4a24-e8c7-865a314d9dc7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CHILDREN  Annual_income  Birthday_count  Employed_days  Family_Members  \\\n","0         0       180000.0        -18772.0         365243               2   \n","1         0       315000.0        -13557.0           -586               2   \n","4         0       315000.0        -13557.0           -586               2   \n","6         0       315000.0        -13557.0           -586               2   \n","7         0       180000.0        -22134.0         365243               2   \n","\n","   label  GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  \\\n","0      1       1          1              1            0          0   \n","1      1       0          1              0            1          0   \n","4      1       0          1              0            1          0   \n","6      1       0          1              0            1          0   \n","7      1       0          0              0            0          2   \n","\n","   Marital_status  Housing_type   age  Experience  \n","0               0             1  51.0         0.0  \n","1               0             1  37.0         2.0  \n","4               0             1  37.0         2.0  \n","6               0             1  37.0         2.0  \n","7               0             1  61.0         0.0  "],"text/html":["\n","  <div id=\"df-c72138db-799b-4b1c-b93f-ed351bc3b149\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Birthday_count</th>\n","      <th>Employed_days</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-18772.0</td>\n","      <td>365243</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>-13557.0</td>\n","      <td>-586</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>-22134.0</td>\n","      <td>365243</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c72138db-799b-4b1c-b93f-ed351bc3b149')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c72138db-799b-4b1c-b93f-ed351bc3b149 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c72138db-799b-4b1c-b93f-ed351bc3b149');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d71d7bf-aa16-4ee7-b5ab-0f053121de0c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d71d7bf-aa16-4ee7-b5ab-0f053121de0c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d71d7bf-aa16-4ee7-b5ab-0f053121de0c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df6","summary":"{\n  \"name\": \"df6\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113172.76633042474,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthday_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4227.6870678766545,\n        \"min\": -24946.0,\n        \"max\": -7705.0,\n        \"num_unique_values\": 1250,\n        \"samples\": [\n          -14069.0,\n          -15960.0,\n          -11602.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Employed_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 137803,\n        \"min\": -14887,\n        \"max\": 365243,\n        \"num_unique_values\": 930,\n        \"samples\": [\n          -407,\n          -1054,\n          -564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.640916340697875,\n        \"min\": 0.0,\n        \"max\": 41.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          25.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}],"source":["df6.head()"]},{"cell_type":"code","execution_count":65,"id":"f4a44f7e","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f4a44f7e","executionInfo":{"status":"ok","timestamp":1708774457705,"user_tz":-330,"elapsed":669,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"62699943-6fc8-46c7-89c5-9be779648ede"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['CHILDREN', 'Annual_income', 'Birthday_count', 'Employed_days',\n","       'Family_Members', 'label', 'GENDER', 'Car_Owner', 'Propert_Owner',\n","       'Type_Income', 'EDUCATION', 'Marital_status', 'Housing_type', 'age',\n","       'Experience'],\n","      dtype='object')"]},"metadata":{},"execution_count":65}],"source":["df7=df6.copy()\n","df7.columns"]},{"cell_type":"code","execution_count":66,"id":"fe688de3","metadata":{"id":"fe688de3","executionInfo":{"status":"ok","timestamp":1708774461749,"user_tz":-330,"elapsed":494,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# removing columns'Birthday_count' and 'Employed_days' from table\n","df7.drop(['Birthday_count', 'Employed_days'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":67,"id":"44788d63","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"44788d63","executionInfo":{"status":"ok","timestamp":1708774463416,"user_tz":-330,"elapsed":20,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"4e180836-6a1c-425a-aa53-7a83c30c74f3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CHILDREN  Annual_income  Family_Members  label  GENDER  Car_Owner  \\\n","0         0       180000.0               2      1       1          1   \n","1         0       315000.0               2      1       0          1   \n","4         0       315000.0               2      1       0          1   \n","6         0       315000.0               2      1       0          1   \n","7         0       180000.0               2      1       0          0   \n","\n","   Propert_Owner  Type_Income  EDUCATION  Marital_status  Housing_type   age  \\\n","0              1            0          0               0             1  51.0   \n","1              0            1          0               0             1  37.0   \n","4              0            1          0               0             1  37.0   \n","6              0            1          0               0             1  37.0   \n","7              0            0          2               0             1  61.0   \n","\n","   Experience  \n","0         0.0  \n","1         2.0  \n","4         2.0  \n","6         2.0  \n","7         0.0  "],"text/html":["\n","  <div id=\"df-7978ba6c-2ca2-48c6-b22c-55d786ad2483\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7978ba6c-2ca2-48c6-b22c-55d786ad2483')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7978ba6c-2ca2-48c6-b22c-55d786ad2483 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7978ba6c-2ca2-48c6-b22c-55d786ad2483');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85913cd1-2f2c-4b47-b18c-8b7c9c7ba56b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85913cd1-2f2c-4b47-b18c-8b7c9c7ba56b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85913cd1-2f2c-4b47-b18c-8b7c9c7ba56b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df7","summary":"{\n  \"name\": \"df7\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113172.76633042474,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.640916340697875,\n        \"min\": 0.0,\n        \"max\": 41.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          25.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":67}],"source":["df7.head()"]},{"cell_type":"code","execution_count":68,"id":"e1ce1b48","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":843,"referenced_widgets":["2520910105e8402284e5eb5f96768320","15f7240ca68f4261b9ab34665ab913f1","50cef3924ce741cabe07c3113c685e43","d035886837574809a7634ee34c3cbfe4","290a24289b6d443f917920d176d8f1c1","5758c905c51b4b3f8fe214b6345c88a2","9c2fc68838be43aa924634c04d6165ef"]},"id":"e1ce1b48","executionInfo":{"status":"ok","timestamp":1708774467634,"user_tz":-330,"elapsed":715,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"efc2faa4-ac3a-44ac-9a60-41017f5315fe"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('CHILDREN', 'Annual_income', 'Family_Members', 'ageâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2520910105e8402284e5eb5f96768320"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["cols= ['CHILDREN', 'Annual_income','Family_Members','age','Experience']\n","@interact\n","def cat_uniq(col=cols):\n","    sns.boxplot(df7[col])"]},{"cell_type":"code","execution_count":69,"id":"f245a27c","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["7a0aa3e9454849a68cc0b77cb9b18c5b","a333297e74654c9aaaf139b1bd0cbde8","894707f7e54744a384ba2fc575ad82f0","50d04369b2cd46a19dd54ab56ea4d19d","ff27a15bc6634cbb9a109f955a7f1eaf","949e5fecd5624e488c22af72bff0afce","9d7c8592989146818ee4b09888590e86"]},"id":"f245a27c","executionInfo":{"status":"ok","timestamp":1708774474072,"user_tz":-330,"elapsed":1305,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"aaa08579-5f82-4301-b7b0-d11c4e20a93e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('CHILDREN', 'Annual_income', 'Family_Members', 'ageâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7a0aa3e9454849a68cc0b77cb9b18c5b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["cols= ['CHILDREN', 'Annual_income','Family_Members','age','Experience']\n","@interact\n","def cat_uniq(col=cols):\n","    sns.distplot(df7[col]) # Checking the distibution of values in each column"]},{"cell_type":"markdown","id":"5d2dba20","metadata":{"id":"5d2dba20"},"source":["# Data transformation of values to obtain normal distribution"]},{"cell_type":"code","execution_count":70,"id":"f7665141","metadata":{"id":"f7665141","executionInfo":{"status":"ok","timestamp":1708774479092,"user_tz":-330,"elapsed":16,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["df8=df7.copy()"]},{"cell_type":"code","execution_count":71,"id":"22e70dd1","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"22e70dd1","executionInfo":{"status":"ok","timestamp":1708773436799,"user_tz":-330,"elapsed":1278,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"51cd8763-eb39-45f1-cd95-9b3392fa22f4"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-71-834491ed8307>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df8['children_sqrt'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='children_sqrt', ylabel='Density'>"]},"metadata":{},"execution_count":71},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["df8['children_sqrt']=np.sqrt(df8['CHILDREN'])\n","sns.distplot(df8['children_sqrt'])"]},{"cell_type":"code","execution_count":71,"id":"d44290f2","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"d44290f2","executionInfo":{"status":"ok","timestamp":1708774485926,"user_tz":-330,"elapsed":1606,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"886cfc8b-44d1-4988-a93b-e1789d3b520e"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-71-69108f5f695a>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df8['fa_sqrt'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='fa_sqrt', ylabel='Density'>"]},"metadata":{},"execution_count":71},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"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SHADAAAAgAIJbgAAAABQIMENAAAAAAokuAEAAABAgQQ3AAAAACiQ4AYAAAAABRLcAAAAAKBAghsAAAAAFEhwAwAAAIACCW4AAAAAUCDBDQAAAAAKJLgBAAAAQIEENwAAAAAokOAGAAAAAAUS3AAAAACgQIIbAAAAABRIcAMAAACAAgluAAAAAFAgwQ0AAAAACiS4AQAAAECBBDcAAAAAKJDgBgAAAAAFEtwAAAAAoECCGwAAAAAUSHADAAAAgAIJbgAAAABQIMENAAAAAAokuAEAAABAgQQ3AAAAACiQ4AYAAAAABRLcAAAAAKBAghsAAAAAFEhwAwAAAIACCW4AAAAAUCDBDQAAAAAKJLgBAAAAQIEENwAAAAAokOAGAAAAAAUS3AAAAACgQIIbAAAAABRIcAMAAACAAgluAAAAAFAgwQ0AAAAACiS4AQAAAECBBDcAAAAAKJDgBgAAAAAFEtwAAAAAoECCGwAAAAAUSHADAAAAgAIJbgAAAABQIMENAAAAAAokuAEAAABAgQQ3AAAAACiQ4AYAAAAABRLcAAAAAKBAghsAAAAAFEhwAwAAAIACCW4AAAAAUCDBDQAAAAAKJLgBAAAAQIEENwAAAAAokOAGAAAAAAUS3AAAAACgQIIbAAAAABRIcAMAAACAAgluAAAAAFAgwQ0AAAAACiS4AQAAAECBBDcAAAAAKJDgBgAAAAAFEtwAAAAAoECCGwAAAAAUSHADAAAAgAIJbgAAAABQIMENAAAAAAokuAEAAABAgQQ3AAAAACiQ4AYAAAAABRLcAAAAAKBAghsAAAAAFEhwAwAAAIACCW4AAAAAUCDBDQAAAAAKJLgBAAAAQIEENwAAAAAokOAGAAAAAAUS3AAAAACgQIIbAAAAABRIcAMAAACAAgluAAAAAFAgwQ0AAAAACiS4AQAAAECBBDcAAAAAKJDgBgAAAAAFEtwAAAAAoECCGwAAAAAUSHADAAAAgAIJbgAAAABQIMENAAAAAAokuAEAAABAgQQ3AAAAACiQ4AYAAAAABRLcAAAAAKBAghsAAAAAFEhwAwAAAIACCW4AAAAAUCDBDQAAAAAKJLgBAAAAQIEENwAAAAAokOAGAAAAAAUS3AAAAACgQIIbAAAAABRIcAMAAACAAgluAAAAAFAgwQ0AAAAACiS4AQAAAECBBDcAAAAAKJDgBgAAAAAF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\n"},"metadata":{}}],"source":["df8['fa_sqrt']=np.sqrt(df8['Family_Members'])\n","sns.distplot(df8['fa_sqrt'])"]},{"cell_type":"code","execution_count":72,"id":"921312d5","metadata":{"id":"921312d5","executionInfo":{"status":"ok","timestamp":1708774490683,"user_tz":-330,"elapsed":506,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# Square root transformation of annual income column for converting to normal distribution of values\n","df8['Annual_income_sqrt']=np.sqrt(df8['Annual_income'])"]},{"cell_type":"code","execution_count":73,"id":"74ecbce7","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"74ecbce7","executionInfo":{"status":"ok","timestamp":1708774493299,"user_tz":-330,"elapsed":1117,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"3f6b51a0-c219-495d-bfd0-c6c3c09602aa"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-73-3bee0a4a0ba3>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df8['Annual_income_sqrt'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Annual_income_sqrt', ylabel='Density'>"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.distplot(df8['Annual_income_sqrt'])"]},{"cell_type":"code","execution_count":74,"id":"231bdb25","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"231bdb25","executionInfo":{"status":"ok","timestamp":1708774498095,"user_tz":-330,"elapsed":764,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"5874da58-cec5-4f1f-a271-3b5c1080d96f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CHILDREN  Annual_income  Family_Members  label  GENDER  Car_Owner  \\\n","0         0       180000.0               2      1       1          1   \n","1         0       315000.0               2      1       0          1   \n","4         0       315000.0               2      1       0          1   \n","6         0       315000.0               2      1       0          1   \n","7         0       180000.0               2      1       0          0   \n","\n","   Propert_Owner  Type_Income  EDUCATION  Marital_status  Housing_type   age  \\\n","0              1            0          0               0             1  51.0   \n","1              0            1          0               0             1  37.0   \n","4              0            1          0               0             1  37.0   \n","6              0            1          0               0             1  37.0   \n","7              0            0          2               0             1  61.0   \n","\n","   Experience   fa_sqrt  Annual_income_sqrt  \n","0         0.0  1.414214          424.264069  \n","1         2.0  1.414214          561.248608  \n","4         2.0  1.414214          561.248608  \n","6         2.0  1.414214          561.248608  \n","7         0.0  1.414214          424.264069  "],"text/html":["\n","  <div id=\"df-ac52184d-b492-487b-aff8-6e02547559c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CHILDREN</th>\n","      <th>Annual_income</th>\n","      <th>Family_Members</th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","      <th>fa_sqrt</th>\n","      <th>Annual_income_sqrt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>315000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>180000.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac52184d-b492-487b-aff8-6e02547559c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac52184d-b492-487b-aff8-6e02547559c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac52184d-b492-487b-aff8-6e02547559c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be4566d1-0c81-4756-b720-6b48ea64e4f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be4566d1-0c81-4756-b720-6b48ea64e4f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be4566d1-0c81-4756-b720-6b48ea64e4f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df8","summary":"{\n  \"name\": \"df8\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113172.76633042474,\n        \"min\": 33750.0,\n        \"max\": 1575000.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          387000.0,\n          472500.0,\n          337500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Family_Members\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.640916340697875,\n        \"min\": 0.0,\n        \"max\": 41.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          25.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fa_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29971440784128583,\n        \"min\": 1.0,\n        \"max\": 2.449489742783178,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.4142135623730951,\n          1.7320508075688772\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109.0464089824864,\n        \"min\": 183.71173070873834,\n        \"max\": 1254.9900398011134,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          622.0932405998316,\n          687.386354243376\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}],"source":["df8.head()"]},{"cell_type":"code","execution_count":75,"id":"8dbaf013","metadata":{"id":"8dbaf013","executionInfo":{"status":"ok","timestamp":1708774501346,"user_tz":-330,"elapsed":10,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["df9=df8.drop(['Annual_income','CHILDREN', 'Family_Members'], axis=1)"]},{"cell_type":"code","execution_count":76,"id":"7234c22e","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7234c22e","executionInfo":{"status":"ok","timestamp":1708774503307,"user_tz":-330,"elapsed":30,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"917342fe-8b31-46c8-ab82-25f4bf450617"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   label  GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  \\\n","0      1       1          1              1            0          0   \n","1      1       0          1              0            1          0   \n","4      1       0          1              0            1          0   \n","6      1       0          1              0            1          0   \n","7      1       0          0              0            0          2   \n","\n","   Marital_status  Housing_type   age  Experience   fa_sqrt  \\\n","0               0             1  51.0         0.0  1.414214   \n","1               0             1  37.0         2.0  1.414214   \n","4               0             1  37.0         2.0  1.414214   \n","6               0             1  37.0         2.0  1.414214   \n","7               0             1  61.0         0.0  1.414214   \n","\n","   Annual_income_sqrt  \n","0          424.264069  \n","1          561.248608  \n","4          561.248608  \n","6          561.248608  \n","7          424.264069  "],"text/html":["\n","  <div id=\"df-1a8d61f2-818b-40e9-bdbd-455cba1eefa5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","      <th>fa_sqrt</th>\n","      <th>Annual_income_sqrt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a8d61f2-818b-40e9-bdbd-455cba1eefa5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a8d61f2-818b-40e9-bdbd-455cba1eefa5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a8d61f2-818b-40e9-bdbd-455cba1eefa5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3fb1a78-15b9-4524-b004-24e7fd5585ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3fb1a78-15b9-4524-b004-24e7fd5585ef')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3fb1a78-15b9-4524-b004-24e7fd5585ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df9","summary":"{\n  \"name\": \"df9\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.640916340697875,\n        \"min\": 0.0,\n        \"max\": 41.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          25.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fa_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29971440784128583,\n        \"min\": 1.0,\n        \"max\": 2.449489742783178,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.4142135623730951,\n          1.7320508075688772\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109.0464089824864,\n        \"min\": 183.71173070873834,\n        \"max\": 1254.9900398011134,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          622.0932405998316,\n          687.386354243376\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":76}],"source":["df9.head()"]},{"cell_type":"code","execution_count":77,"id":"6f997055","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["ff7f55bc6a2c484a8c13aa3e553c396f","8154f229b63b4f03af3cff00cc2c159c","422ab49b36da4a0d9ba754370c64ff2e","7f86f9e003014b1287cd189261e246a6","e7a2b4edbf9b4a02abe7b60d48b0335f","40306909a0334e9e8291613340bc694c","49584a724a624c1aa0b4192686b5bd2e"]},"id":"6f997055","executionInfo":{"status":"ok","timestamp":1708774507331,"user_tz":-330,"elapsed":768,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"d5f307ec-573c-470c-d8b3-586c0c4253de"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('children_sqrt', 'Annual_income_sqrt', 'fa_sqrt', 'â€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ff7f55bc6a2c484a8c13aa3e553c396f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABN8AAAMaCAYAAAC27eA0AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABJz0lEQVR4nO3dfXTedX3/8VeS3iGQlIptmh+ltlOsRbqhTohl1Y3+QEApitXOTJn0Z+Wm3qFDORRQBKtMGUNbKhMURxXtb0oFAUXucoDITQHjUNDNjoJt2rnYhLveJfn9wa+ZGa32kn56pc3jcc51JN/PJ9f1vnbOPPjM96amr6+vLwAAAADATldb7QEAAAAAYE8lvgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQyrNoD7C56e3uzevXq7Lvvvqmpqan2OAAAAABUSV9fX5588sk0NTWltvb3n9smvu2g1atXZ8KECdUeAwAAAIBB4vHHH88BBxzwe/eIbzto3333TfLc/1Hr6+urPA0AAAAA1dLd3Z0JEyb096LfR3zbQVsvNa2vrxffAAAAANihW5N54AIAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFCK+AQAAAEAh4hsAAAAAFDKs2gMAALB72LRpU5YvX57Vq1enqakps2bNyogRI6o9FgDAoCa+AQDwBy1ZsiTLli1LT0/PgGOzZ8/OKaecUsXJAAAGN/ENAIDfa8mSJbnmmmuy3377Ze7cuWlubk5bW1uuuOKKXHPNNUkiwAEAbEdNX19fX7WH2B10d3enoaEhXV1dqa+vr/Y4AAC7xKZNm3LMMcekvr4+y5Yty7Bh//232y1btmT27Nnp7u7OjTfe6BJUAGDIqKQTeeACAADbtXz58vT09GTu3LkDwluSDBs2LCeffHJ6enqyfPnyKk0IADC4iW8AAGzX6tWrkyTNzc3bXN96fOs+AAAGEt8AANiupqamJElbW9s217ce37oPAICBxDcAALZr1qxZqauryxVXXJEtW7YMWNuyZUuuvPLK1NXVZdasWVWaEABgcBPfAADYrhEjRmT27Nn57W9/m9mzZ+e6667Lb37zm1x33XUDjnvYAgDAtg37w1sAABjKTjnllCTJsmXL8oUvfKH/eF1dXebMmdO/DgDA89X09fX1VXuI3UElj5AFANgTbdq0KcuXL8/q1avT1NSUWbNmOeMNABiSKulEznwDAGCHbL0EFQCAHeeebwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQiPgGAAAAAIWIbwAAAABQSFXjW2tra97ylrekqakpNTU1ufbaa/vXNm/enI9//OM55JBDsvfee6epqSnvec97snr16gHv0dnZmZaWltTX12f06NGZO3dunnrqqQF72tvb8xd/8RcZNWpUJkyYkIsuumhXfD0AAAAAhriqxrenn346f/qnf5pFixY9b+2ZZ57JAw88kHPOOScPPPBAvvOd7+TRRx/N8ccfP2BfS0tLHn744dx88825/vrr09ramnnz5vWvd3d356ijjsrEiROzYsWK/P3f/30++clP5vLLLy/+/QAAAAAY2mr6+vr6qj1EktTU1OS73/1uTjjhhO3uue+++/K6170ujz32WA488MD8/Oc/z9SpU3Pfffflta99bZLkpptuyrHHHpsnnngiTU1Nueyyy3L22Weno6MjI0aMSJJ84hOfyLXXXptHHnlkh+fr7u5OQ0NDurq6Ul9f/4K+KwAAAAC7r0o60W51z7eurq7U1NRk9OjRSZK2traMHj26P7wlycyZM1NbW5t77rmnf8+MGTP6w1uSHH300Xn00Ufz29/+druftXHjxnR3dw94AQAAAEAldpv4tmHDhnz84x/PX//1X/cXxY6OjowdO3bAvmHDhmXMmDHp6Ojo3zNu3LgBe7b+vHXPtixcuDANDQ39rwkTJuzMrwMAAADAELBbxLfNmzfnHe94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L80XvvCFvPnNb95pww0mHrgAAAxVW5922tzcnJaWlkyaNCkrV67M0qVL09bWlk996lOZMWNGtccEANhlKulEFT/tdNKkSbn//vvz4he/+AUNubsR3wCAoay1tTWLFy9OR0dH/7Hx48fn1FNPFd4AgCGnkk60w5edJsnmzZszefLkdHZ2Drn4BgAwlM2YMSPTp09Pe3t7Ojs7M2bMmEybNi11dXXVHg0AYFCrKL4NHz7cY+QBAIaourq6HHroodUeAwBgt1Lx007/5m/+JldccUWJWQAAAABgj1LRmW9JsmXLllx55ZX50Y9+lNe85jXZe++9B6xffPHFO204AAAAANidVRzf/vVf/zWvfvWrkyS/+MUvBqzV1NTsnKkAAAAAYA9QcXy77bbbSswBAAAAAHuciu/5tiv19PTknHPOyaRJk7LXXnvlT/7kT/LpT386fX19/Xv6+vpy7rnnZvz48dlrr70yc+bM/PKXvxzwPp2dnWlpaUl9fX1Gjx6duXPn5qmnntrVXwcAAACAIabiM9/e+ta37vDlpd/5zncqHuh3fe5zn8tll12Wq666KgcffHDuv//+vPe9701DQ0M++MEPJkkuuuiiXHrppbnqqqsyadKknHPOOTn66KPzs5/9LKNGjUqStLS0ZM2aNbn55puzefPmvPe97828efPyjW984wXNBwAAAAC/T8XxraGhId/97nfT0NCQ1772tUmSFStWpKurKyeccMJOve/b3XffnVmzZuW4445Lkrz0pS/NN7/5zdx7771Jnjvr7ZJLLsmCBQsya9asJMnXv/71jBs3Ltdee23mzJmTn//857npppty33339c/7xS9+Mccee2w+//nPp6mpaZufvXHjxmzcuLH/5+7u7p32vQAAAAAYGiq+7HTcuHF5xzvekZUrV+Y73/lOvvOd7+RXv/pV3vnOd+YlL3lJvvrVr/a/XqjXv/71ueWWW/of7PCTn/wkd955Z4455pgkycqVK9PR0ZGZM2f2/05DQ0MOO+ywtLW1JUna2toyevTo/vCWJDNnzkxtbW3uueee7X72woUL09DQ0P+aMGHCC/4+AAC7s56enjz44IO55ZZb8uCDD6anp6faIwEADHoVn/l25ZVX5s4770xdXV3/sbq6upxxxhl5/etfn7//+7/facN94hOfSHd3d6ZMmZK6urr09PTkwgsvTEtLS5Kko6MjyXNB8HeNGzeuf62joyNjx44dsD5s2LCMGTOmf8+2nHXWWTnjjDP6f+7u7hbgAIAhq7W1NYsXLx7w70+NjY057bTTMmPGjCpOBgAwuFV85tuWLVvyyCOPPO/4I488kt7e3p0y1Fbf/va3s3Tp0nzjG9/IAw88kKuuuiqf//znc9VVV+3Uz9mWkSNHpr6+fsALAGAoam1tzXnnnZfJkydn0aJFueGGG7Jo0aJMnjw55513XlpbW6s9IgDAoFXxmW/vfe97M3fu3Pz7v/97Xve61yVJ7rnnnnz2s5/Ne9/73p063N/93d/lE5/4RObMmZMkOeSQQ/LYY49l4cKFOemkk9LY2JgkWbt2bcaPH9//e2vXrs2f/dmfJXnuL7Lr1q0b8L5btmxJZ2dn/+8DALBtPT09Wbx4cZqbm3PBBRektva5v90efPDBueCCC7JgwYJcdtllmT59+oArIwAAeE7FZ759/vOfz5lnnpkvfOELmTFjRmbMmJGLL744f/d3f7dTLzlNkmeeeab/X/C2qqur6z/DbtKkSWlsbMwtt9zSv97d3Z177rknzc3NSZLm5uasX78+K1as6N9z6623pre3N4cddthOnRcAYE/T3t6ejo6OtLS0PO/fy2pra/ufKt/e3l6lCQEABreKz3yrra3NmWeemTPPPLP/CaClLsl8y1vekgsvvDAHHnhgDj744Dz44IO5+OKLc/LJJydJampq8uEPfzgXXHBBXv7yl2fSpEk555xz0tTUlBNOOCFJ8spXvjJvetOb8r73vS9LlizJ5s2bM3/+/MyZM2e7TzoFAOA5nZ2dSZ77o+e2bD2+dR8AAANVHN+effbZ9PX15UUvelHq6+vz2GOP5corr8zUqVNz1FFH7dThvvjFL+acc87JaaedlnXr1qWpqSnvf//7c+655/bvOfPMM/P0009n3rx5Wb9+fY444ojcdNNNGTVqVP+epUuXZv78+TnyyCNTW1ubE088MZdeeulOnRUAYE80ZsyYJM89Zf7ggw9+3vrKlSsH7AMAYKCavr6+vkp+4aijjsrb3va2nHLKKVm/fn1e8YpXZMSIEfnNb36Tiy++OKeeemqpWauqu7s7DQ0N6erq8vAFAGDI6OnpSUtLSyZPnpxzzz031113XVavXp2mpqa85S1vyfnnn5+VK1fm6quvds83AGDIqKQTVRzf9t9//9xxxx05+OCD85WvfCVf/OIX8+CDD+Zf/uVfcu655+bnP//5Cxp+sBLfAIChqrW1dcCVB//T+eefnxkzZuzCiQAAqquSTlTxAxeeeeaZ7LvvvkmSH/7wh3nb296W2traHH744Xnsscf+uIkBABi0fvaznyXJNh+48LvrAAA8X8X3fHvZy16Wa6+9Nm9961vzgx/8IB/5yEeSJOvWrXNGGADAHmbTpk1ZtmxZ9ttvv1xzzTX52c9+ls7OzowZMyZTp07NnDlzsmzZspx88skZMWJEtccFABh0Kj7z7dxzz83HPvaxvPSlL81hhx2W5ubmJM+dBXfooYfu9AEBAKie5cuXp6enJ3Pnzs3IkSNz6KGH5sgjj8yhhx6akSNH5uSTT05PT0+WL19e7VEBAAalis98e/vb354jjjgia9asyZ/+6Z/2Hz/yyCPz1re+tf/nJ554Ik1NTc+7PAEAgN3H6tWrk6T/D67/09bjW/cBADDQH1XGGhsbc+ihhw4Ia6973esyZcqU/p+nTp2a//iP/3jBAwIAUD1NTU1Jkra2tm2ubz2+dR8AAAMVOy2twoeoAgAwCM2aNSt1dXW54oorsmXLlgFrW7ZsyZVXXpm6urrMmjWrShMCAAxuFV92CgDA0DFixIjMnj0711xzTd7+9rfnqKOOSlNTU1avXp0f/vCHWb9+febMmeNhCwAA2yG+AQDwe51yyil5/PHHc9ddd+Xb3/72gLXp06fnlFNOqdJkAACDn/gGAMDv1dramrvvvjuHH354/tf/+l/ZtGlTRowYkV//+te5++6709ramhkzZlR7TACAQanYPd9qampKvTUAALtIT09PFi9enObm5pxzzjnp6enJmjVr0tPTk3POOSfNzc257LLL0tPTU+1RAQAGpWJnvnngAgDA7q+9vT0dHR0ZO3ZsjjvuuP7j999/f6699tpMmzYta9asSXt7ew499NAqTgoAMDj90We+/du//Vt+8IMf5Nlnn03y/Nj2s5/9LBMnTnxh0wEAUFWdnZ1Jnotww4cPz7ve9a5cffXVede73pXhw4envb19wD4AAAaqOL7913/9V2bOnJmDDjooxx57bNasWZMkmTt3bj760Y/275swYULq6up23qQAAOxy++yzT5Kkrq4u3//+9zNv3rwccMABmTdvXr7//e/3//ve1n0AAAxUcXz7yEc+kmHDhmXVqlV50Yte1H/8ne98Z2666aadOhwAANV11113JUkaGxszbNjAO5YMGzYs48aNG7APAICBKr7n2w9/+MP84Ac/yAEHHDDg+Mtf/vI89thjO20wAACqb/Xq1UmSX//611mwYEFaWloyadKkrFy5MkuXLu1f3/qfAAAMVHF8e/rppwec8bZVZ2dnRo4cuVOGAgBgcDjggANy//3354gjjsi//du/5fTTT+9fGz9+fI444ojceeedz/vDLAAAz6npq/CxpMcee2xe85rX5NOf/nT23XfftLe3Z+LEiZkzZ056e3vzf//v/y01a1V1d3enoaEhXV1dqa+vr/Y4AAC7xLPPPptjjjkmw4cPz/e+97088sgj6ezszJgxYzJlypQcf/zx2bx5c2688cbstdde1R4XAGCXqKQTVXzPt4suuiiXX355jjnmmGzatClnnnlmXvWqV6W1tTWf+9zn/uihAQAYfPbaa69Mnz49mzdvzvHHH5977703Bx10UO69997+8DZ9+nThDQBgOyo+8y1Jurq68qUvfSk/+clP8tRTT+XVr351Tj/99IwfP77EjIOCM98AgKHs7LPP3uZDFaZPn54LL7ywChMBAFRPJZ3oj4pvQ5H4BgAMdc8++2y+/OUv54knnsgBBxyQ97///c54AwCGpOLxbcOGDWlvb8+6devS29s7YO3444+v9O12C+IbAAAAAEllnajip53edNNNec973pPf/OY3z1urqalJT09PpW8JAAAAAHukih+48IEPfCCzZ8/OmjVr0tvbO+AlvAEAAADAf6s4vq1duzZnnHFGxo0bV2IeAAAAANhjVBzf3v72t+f2228vMAoAAAAA7FkqfuDCM888k9mzZ+clL3lJDjnkkAwfPnzA+gc/+MGdOuBg4YELAAAAACSFH7jwzW9+Mz/84Q8zatSo3H777ampqelfq6mp2WPjGwAAAABUquL4dvbZZ+dTn/pUPvGJT6S2tuKrVgEAAABgyKi4nm3atCnvfOc7hTcAAAAA+AMqLmgnnXRSvvWtb5WYBQCAQezZZ5/NJZdcko997GO55JJL8uyzz1Z7JACAQa/iy057enpy0UUX5Qc/+EGmTZv2vAcuXHzxxTttOAAABoezzz47d911V//P999/f6699tpMnz49F154YRUnAwAY3Cp+2ulf/uVfbv/Nampy6623vuChBiNPOwUAhqqt4W348OGZPXt2jj322Nxwww1ZtmxZNm/eLMABAENOJZ2o4vg2VIlvAMBQ9Oyzz+aYY47J8OHD8/3vfz8jRozoX9u0aVOOO+64bN68OTfeeGP22muvKk4KALDrVNKJXtBTE5544ok88cQTL+QtAAAYxL785S8nSWbPnj0gvCXJiBEj8va3v33APgAABqo4vvX29ub8889PQ0NDJk6cmIkTJ2b06NH59Kc/nd7e3hIzAgBQJVv/0Hrsscduc33rcX+QBQDYtorj29lnn50vfelL+exnP5sHH3wwDz74YD7zmc/ki1/8Ys4555wSMwIAUCUHHHBAkuSGG27Y5vrW41v3AQAwUMX3fGtqasqSJUty/PHHDzi+fPnynHbaafn1r3+9UwccLNzzDQAYitzzDQDg+Yre862zszNTpkx53vEpU6aks7Oz0rcDAGAQ22uvvTJ9+vRs3rw5xx13XL785S/n8ccfz5e//OX+8DZ9+nThDQBgOyo+8+2www7LYYcdlksvvXTA8Q984AO577778uMf/3inDjhYOPMNABjKzj777Nx1113POz59+vRceOGFVZgIAKB6KulEFce3O+64I8cdd1wOPPDANDc3J0na2try+OOP54Ybbshf/MVf/PGTD2LiGwAw1D377LP58pe/nCeeeCIHHHBA3v/+9zvjDQAYkorGtyT59a9/ncWLF+eRRx5Jkrzyla/Maaedlqampj9u4t2A+AYAAABAsgvi21AkvgEAAACQFH7gwle/+tUsW7bseceXLVuWq666qtK3AwAAAIA9VsXxbeHChdl///2fd3zs2LH5zGc+s1OGAgAAAIA9QcXxbdWqVZk0adLzjk+cODGrVq3aKUMBAAAAwJ6g4vg2duzYtLe3P+/4T37yk7z4xS/eKUMBAAAAwJ6g4vj213/91/ngBz+Y2267LT09Penp6cmtt96aD33oQ5kzZ06JGQEAAABgtzSs0l/49Kc/nf/4j//IkUcemWHDnvv13t7evOc973HPNwAAAAD4HTV9fX19f8wv/uIXv8hPfvKT7LXXXjnkkEMyceLEnT3boFLJI2QBAAAA2HNV0okqPvNtq4MOOigHHXTQH/vrAADsZjZt2pTly5dn9erVaWpqyqxZszJixIhqjwUAMKhVHN96enryta99LbfcckvWrVuX3t7eAeu33nrrThsO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nLMz3g4AAAAA9ggv+IELW3V1daWrq2tnvR0AQ9SGDRuyatWqao8BALutAw88MKNGjar2GAD8fxXHt0svvXTAz319fVmzZk3++Z//Occcc8xOGwyAoWnVqlWZN29etccAgN3W5ZdfnoMOOqjaYwDw/1X8wIVJkyYN+Lm2tjYveclL8ld/9Vc566yzsu++++7UAQcLD1wA2DWc+QaD22OPPZYLL7wwZ599diZOnFjtcYBtcOYbQHlFH7iwcuXKP3owAPhDRo0a5a/1sBuYOHGi/18FANgBO+WBCwAAAADA81V85tvTTz+dz372s7nllluybt269Pb2Dlj/1a9+tdOGAwAAAIDdWcXx7f/8n/+TO+64I+9+97szfvz41NTUlJgLAAAAAHZ7Fce3G2+8Md///vczffr0EvMAAAAAwB6j4nu+7bfffhkzZkyJWQAAAABgj1JxfPv0pz+dc889N88880yJeQAAAABgj1HxZadf+MIX8u///u8ZN25cXvrSl2b48OED1h944IGdNhwAAAAA7M4qjm8nnHBCgTEAAAAAYM9TcXw777zzSswBAAAAAHuciuPbVps2bcq6devS29s74PiBBx74gocCAAAAgD1BxfHtF7/4RebOnZu77757wPG+vr7U1NSkp6dnpw0HAAAAALuziuPbe9/73gwbNizXX399xo8fn5qamhJzAQAAAMBur+L49tBDD2XFihWZMmVKiXkAAAAAYI9RW+kvTJ06Nb/5zW9KzAIAAAAAe5SK49vnPve5nHnmmbn99tvzX//1X+nu7h7wAgAAAACeU/FlpzNnzkySHHnkkQOOe+ACAAAAAAxUcXy77bbbtrv205/+9AUNAwAAAAB7korj2xve8IYBPz/55JP55je/ma985StZsWJF5s+fv9OGAwAAAIDdWcX3fNuqtbU1J510UsaPH5/Pf/7z+au/+qv8+Mc/3pmzAQAAAMBuraIz3zo6OvK1r30tV1xxRbq7u/OOd7wjGzduzLXXXpupU6eWmhEAAAAAdks7fObbW97ylrziFa9Ie3t7LrnkkqxevTpf/OIXS84GAAAAALu1HT7z7cYbb8wHP/jBnHrqqXn5y19eciYAAAAA2CPs8Jlvd955Z5588sm85jWvyWGHHZYvfelL+c1vflNyNgAAAADYre1wfDv88MPzT//0T1mzZk3e//7355prrklTU1N6e3tz880358knnyw5JwAAAADsdip+2unee++dk08+OXfeeWd++tOf5qMf/Wg++9nPZuzYsTn++ONLzAgAAAAAu6WK49vvesUrXpGLLrooTzzxRL75zW/urJkAAAAAYI/wguLbVnV1dTnhhBPyve99b2e8HQAAAADsEXZKfAMAAAAAnm/Qx7df//rX+Zu/+Zu8+MUvzl577ZVDDjkk999/f/96X19fzj333IwfPz577bVXZs6cmV/+8pcD3qOzszMtLS2pr6/P6NGjM3fu3Dz11FO7+qsAAAAAMMQM6vj229/+NtOnT8/w4cNz44035mc/+1m+8IUvZL/99uvfc9FFF+XSSy/NkiVLcs8992TvvffO0UcfnQ0bNvTvaWlpycMPP5ybb745119/fVpbWzNv3rxqfCUAAAAAhpBh1R7g9/nc5z6XCRMm5Ktf/Wr/sUmTJvX/c19fXy655JIsWLAgs2bNSpJ8/etfz7hx43Lttddmzpw5+fnPf56bbrop9913X1772tcmSb74xS/m2GOPzec///k0NTXt2i8FAAAAwJAxqM98+973vpfXvva1mT17dsaOHZtDDz00//RP/9S/vnLlynR0dGTmzJn9xxoaGnLYYYelra0tSdLW1pbRo0f3h7ckmTlzZmpra3PPPfds97M3btyY7u7uAS8AAAAAqMSgjm+/+tWvctlll+XlL395fvCDH+TUU0/NBz/4wVx11VVJko6OjiTJuHHjBvzeuHHj+tc6OjoyduzYAevDhg3LmDFj+vdsy8KFC9PQ0ND/mjBhws78agAAAAAMAYM6vvX29ubVr351PvOZz+TQQw/NvHnz8r73vS9Lliwp/tlnnXVWurq6+l+PP/548c8EAAAAYM8yqOPb+PHjM3Xq1AHHXvnKV2bVqlVJksbGxiTJ2rVrB+xZu3Zt/1pjY2PWrVs3YH3Lli3p7Ozs37MtI0eOTH19/YAXAAAAAFRiUMe36dOn59FHHx1w7Be/+EUmTpyY5LmHLzQ2NuaWW27pX+/u7s4999yT5ubmJElzc3PWr1+fFStW9O+59dZb09vbm8MOO2wXfAsAAAAAhqpB/bTTj3zkI3n961+fz3zmM3nHO96Re++9N5dffnkuv/zyJElNTU0+/OEP54ILLsjLX/7yTJo0Keecc06amppywgknJHnuTLk3velN/Zerbt68OfPnz8+cOXM86RQAAACAogZ1fPvzP//zfPe7381ZZ52V888/P5MmTcoll1ySlpaW/j1nnnlmnn766cybNy/r16/PEUcckZtuuimjRo3q37N06dLMnz8/Rx55ZGpra3PiiSfm0ksvrcZXAgAAAGAIqenr6+ur9hC7g+7u7jQ0NKSrq8v93wCAIesXv/hF5s2bl8svvzwHHXRQtccBAKiKSjrRoL7nGwAAAADszsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChkWLUHgGpZu3Zturq6qj0GAOxWHnvssQH/CQDsuIaGhowbN67aY7CL1fT19fVVe4jdQXd3dxoaGtLV1ZX6+vpqj8MLtHbt2vzNu9+TzZs2VnsUAAAAhojhI0bm6n/+ugC3B6ikEznzjSGpq6srmzdtzLOT35DeUQ3VHgcAAIA9XO2GruRXd6Srq0t8G2LEN4a03lEN6d17/2qPAQAAAOyhPHABAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgEPENAAAAAAoR3wAAAACgkGHVHgCqqfbZ9dUeAQAAgCHA//4cusQ3hrS9VrZWewQAAABgD7ZbxbfPfvazOeuss/KhD30ol1xySZJkw4YN+ehHP5prrrkmGzduzNFHH53Fixdn3Lhx/b+3atWqnHrqqbntttuyzz775KSTTsrChQszbNhu9fUp4NlJM9K71+hqjwEAAMAervbZ9U4AGaJ2m/p033335ctf/nKmTZs24PhHPvKRfP/738+yZcvS0NCQ+fPn521ve1vuuuuuJElPT0+OO+64NDY25u67786aNWvynve8J8OHD89nPvOZanwVBpHevUand+/9qz0GAAAAsIfaLR648NRTT6WlpSX/9E//lP3226//eFdXV6644opcfPHF+au/+qu85jWvyVe/+tXcfffd+fGPf5wk+eEPf5if/exnufrqq/Nnf/ZnOeaYY/LpT386ixYtyqZNm6r1lQAAAAAYAnaL+Hb66afnuOOOy8yZMwccX7FiRTZv3jzg+JQpU3LggQemra0tSdLW1pZDDjlkwGWoRx99dLq7u/Pwww9v9zM3btyY7u7uAS8AAAAAqMSgv+z0mmuuyQMPPJD77rvveWsdHR0ZMWJERo8ePeD4uHHj0tHR0b/nd8Pb1vWta9uzcOHCfOpTn3qB0wMAAAAwlA3qM98ef/zxfOhDH8rSpUszatSoXfrZZ511Vrq6uvpfjz/++C79fAAAAAB2f4M6vq1YsSLr1q3Lq1/96gwbNizDhg3LHXfckUsvvTTDhg3LuHHjsmnTpqxfv37A761duzaNjY1JksbGxqxdu/Z561vXtmfkyJGpr68f8AIAAACASgzq+HbkkUfm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67/mzjvvLP5ZI0eOzMiRI4t/DgAAAAB7rt3mzLf58+fn+uuvz2233ZYDDjig/3hjY2M2bdqU9evXD9i/du3aNDY29u/5n08/3frz1j0AAAAAsLMN+vjW19eX+fPn57vf/W5uvfXWTJo0acD6a17zmgwfPjy33HJL/7FHH300q1atSnNzc5Kkubk5P/3pT7Nu3br+PTfffHPq6+szderUXfNFAAAAABhyBv1lp6effnq+8Y1vZPny5dl3333779HW0NCQvfbaKw0NDZk7d27OOOOMjBkzJvX19fnABz6Q5ubmHH744UmSo446KlOnTs273/3uXHTRReno6MiCBQty+umnu7QUAAAAgGIGfXy77LLLkiRvfOMbBxz/6le/mr/9279NkvzDP/xDamtrc+KJJ2bjxo05+uijs3jx4v69dXV1uf7663Pqqaemubk5e++9d0466aScf/75u+prAAAAADAEDfr41tfX9wf3jBo1KosWLcqiRYu2u2fixIm54YYbduZoAAAAAPB7Dfp7vgEAAADA7kp8AwAAAIBCBv1lpwAMLRs2bMiqVauqPQawHY899tiA/wQGnwMPPDCjRo2q9hgA/H/iGwCDyqpVqzJv3rxqjwH8ARdeeGG1RwC24/LLL89BBx1U7TEA+P/ENwAGlQMPPDCXX355tccAgN3WgQceWO0RAPgd4hsAg8qoUaP8tR4AANhjeOACAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQivgEAAABAIeIbAAAAABQyrNoD7C76+vqSJN3d3VWeBAAAAIBq2tqHtvai30d820FPPvlkkmTChAlVngQAAACAweDJJ59MQ0PD791T07cjiY709vZm9erV2XfffVNTU1PtcQAAqqK7uzsTJkzI448/nvr6+mqPAwBQFX19fXnyySfT1NSU2trff1c38Q0AgB3W3d2dhoaGdHV1iW8AADvAAxcAAAAAoBDxDQAAAAAKEd8AANhhI0eOzHnnnZeRI0dWexQAgN2Ce74BAAAAQCHOfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAAChEfAMAAACAQsQ3AAAAACjk/wGszQi67Rl4ygAAAABJRU5ErkJggg==\n"},"metadata":{}}],"source":["cols= ['children_sqrt', 'Annual_income_sqrt','fa_sqrt','age','Experience']\n","@interact\n","def cat_uniq(col=cols):\n","    sns.boxplot(df8[col])"]},{"cell_type":"code","execution_count":78,"id":"fabdcccc","metadata":{"id":"fabdcccc","executionInfo":{"status":"ok","timestamp":1708774537855,"user_tz":-330,"elapsed":689,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["def rem_out(df, col):\n","    q1=df[col].quantile(0.25)\n","    q3=df[col].quantile(0.75)\n","\n","    iqr=q3-q1\n","    ul=q3+1.5*iqr\n","    ll=q1-1.5*iqr\n","    df[col]=np.where(df[col]>ul,ul, df[col])\n","    df[col]=np.where(df[col]<ll,ll, df[col])"]},{"cell_type":"code","execution_count":79,"id":"904b7d84","metadata":{"id":"904b7d84","executionInfo":{"status":"ok","timestamp":1708774566113,"user_tz":-330,"elapsed":763,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["rem_out(df9,'Annual_income_sqrt')\n"]},{"cell_type":"code","execution_count":80,"id":"6dc91483","metadata":{"id":"6dc91483","executionInfo":{"status":"ok","timestamp":1708774568258,"user_tz":-330,"elapsed":5,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["rem_out(df9,'Experience')"]},{"cell_type":"code","execution_count":82,"id":"ac79db5e","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510,"referenced_widgets":["7a767e9ef07a49afaa0d4be453696083","46d00bb3b38b43788053b9bd894f024f","12a0bc785ac94098a8f5325a5107768f","5854d13faab4466da69a2df08e39b6b6","5876645c059549ca95ae314cad2a632e","985b83adea4e4fde804241909bee00e5","08f05df38a914057a00cc7be5b691d14"]},"id":"ac79db5e","executionInfo":{"status":"ok","timestamp":1708774604922,"user_tz":-330,"elapsed":729,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"7993332d-2e87-4bc4-f556-5d3a7d4e8f3c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('children_sqrt', 'Annual_income_sqrt', 'fa_sqrt', 'â€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7a767e9ef07a49afaa0d4be453696083"}},"metadata":{}}],"source":["cols= ['children_sqrt', 'Annual_income_sqrt','fa_sqrt','age','Experience']\n","@interact\n","def cat_uniq(col=cols):\n","    sns.boxplot(df9[col])"]},{"cell_type":"code","execution_count":83,"id":"286d9e29","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"286d9e29","executionInfo":{"status":"ok","timestamp":1708774611348,"user_tz":-330,"elapsed":919,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"44ad97ab-159e-46fc-8ec9-af5aba9f3493"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   label  GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  \\\n","0      1       1          1              1            0          0   \n","1      1       0          1              0            1          0   \n","4      1       0          1              0            1          0   \n","6      1       0          1              0            1          0   \n","7      1       0          0              0            0          2   \n","\n","   Marital_status  Housing_type   age  Experience   fa_sqrt  \\\n","0               0             1  51.0         0.0  1.414214   \n","1               0             1  37.0         2.0  1.414214   \n","4               0             1  37.0         2.0  1.414214   \n","6               0             1  37.0         2.0  1.414214   \n","7               0             1  61.0         0.0  1.414214   \n","\n","   Annual_income_sqrt  \n","0          424.264069  \n","1          561.248608  \n","4          561.248608  \n","6          561.248608  \n","7          424.264069  "],"text/html":["\n","  <div id=\"df-a3a00955-53c1-41e4-bd49-2e675f375065\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","      <th>fa_sqrt</th>\n","      <th>Annual_income_sqrt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3a00955-53c1-41e4-bd49-2e675f375065')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a3a00955-53c1-41e4-bd49-2e675f375065 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a3a00955-53c1-41e4-bd49-2e675f375065');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6243bf9b-a679-4385-be6e-dfa1eb47bd11\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6243bf9b-a679-4385-be6e-dfa1eb47bd11')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6243bf9b-a679-4385-be6e-dfa1eb47bd11 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df9","summary":"{\n  \"name\": \"df9\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.864153065902092,\n        \"min\": 0.0,\n        \"max\": 21.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fa_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29971440784128583,\n        \"min\": 1.0,\n        \"max\": 2.449489742783178,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.4142135623730951,\n          1.7320508075688772\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.45770856301057,\n        \"min\": 183.71173070873834,\n        \"max\": 664.9450883140487,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          442.43643611257875,\n          345.9768778401239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":83}],"source":["df9.head() # Final dataframe for Model development"]},{"cell_type":"code","execution_count":84,"id":"1075da87","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":979},"id":"1075da87","executionInfo":{"status":"ok","timestamp":1708774638819,"user_tz":-330,"elapsed":2376,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e61a3b63-50ab-4d30-a323-c08df106ffa3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":84},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABNcAAAOxCAYAAADW4UHtAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd3hTVR8H8G+60qR7pC17taxCKWXJBmXKqoIIgmxEhiKbskGlgIooIigCirJ5RZA9pGyQtpTRQXcL3Xs3XXn/aEibLiDSpA3fz/Pkkd6ce3POz3POvTk5516BTCaTgYiIiIiIiIiIiF6ajqYzQEREREREREREVFtxcI2IiIiIiIiIiEhFHFwjIiIiIiIiIiJSEQfXiIiIiIiIiIiIVMTBNSIiIiIiIiIiIhVxcI2IiIiIiIiIiEhFHFwjIiIiIiIiIiJSEQfXiIiIiIiIiIiIVMTBNSIiIiIiIiIiIhVxcI2IiIiIiIiIiEhFHFwjIiIiIiIiIqIa6erVqxg2bBjq1q0LgUCAv/7667n7eHh4wMXFBUKhEPb29vj111+rNY8cXCMiIiIiIiIiohopKysL7dq1w7Zt214ofVhYGIYMGYK+ffvCx8cHn332GaZNm4Zz585VWx4FMplMVm1HJyIiIiIiIiIiegUEAgGOHTsGV1fXStMsWbIEp06dwqNHjxTbxowZg9TUVJw9e7Za8sWZa0REREREREREpDZSqRTp6elKL6lU+kqOfevWLfTr109p28CBA3Hr1q1XcvyK6FXbkYleQH5iqKazUOucarNC01molRL0+FvCy2LEVJMt0HQOah8DzqFXiW1BkaazUOs8ELKBqqJ1nqZzUPuEGrCuqcKiUNM5qH2EPIeqZELUH5rOglrU5O/b7j/sxdq1a5W2rV69GmvWrPnPx46NjYWtra3SNltbW6SnpyMnJwcikeg/f0ZZHFwjIiIiIiIiIiK1cXNzw/z585W2CYVCDeXmv+PgGhERERERERERqY1QKKy2wTQ7OzvExcUpbYuLi4OpqWm1zFoDOLhGRERERERERKR9il7PtdZdu3bF6dOnlbZduHABXbt2rbbP5C11iIiIiIiIiIioRsrMzISPjw98fHwAAGFhYfDx8UFkZCSA4iWmEyZMUKT/+OOPERoaisWLFyMgIAA//vgjDh8+jHnz5lVbHjm4RkRERERERERENZKnpyfat2+P9u3bAwDmz5+P9u3bY9WqVQCAmJgYxUAbADRp0gSnTp3ChQsX0K5dO3zzzTf45ZdfMHDgwGrLI5eFEhERERERERFpG5l2PFm8T58+kMkqfzTur7/+WuE+9+7dq8ZcKePMNSIiIiIiIiIiIhVxcI2IiIiIiIiIiEhFXBZKRERERERERKRtirRjWWhtwJlrREREREREREREKuLgGhERERERERERkYq4LJSIiIiIiIiISMvItORpobUBZ64RERERERERERGpiINrREREREREREREKuKyUCIiIiIiIiIibcOnhaoNZ64RERERERERERGpiINrREREREREREREKuKyUCIiIiIiIiIibcOnhaoNZ64RERERERERERGpiINrREREREREREREKuKyUCIiIiIiIiIibVNUqOkcvDY4c42IiIiIiIiIiEhFHFwjIiIiIiIiIiJSEZeFEhERERERERFpGz4tVG04c42IiIiIiIiIiEhFHFzTUn369MFnn332Qmk9PDwgEAiQmpr6nz6zcePG2LJly386BhERERERERFRbcJloUSlePo8xJ79R+EXEIyEpGR8574Sb/XqpulsaUyTyf3hMGsohBIzpPlF4sHy35B6L6TS9HWHdUGrxe9B3MAamWGx8PviIOIu+SilMXaoC8cVY2HdtRUEejrICIzCv1O3ICcqqZpLo14dFo5Ey7F9YWAmRtzdQFxftgfpYXFV7tN6Yj84fTwEIokZkv0jcXPlXiT4hAIAhOZG6LBgJOr1agvjelbITUpH+DkveH51FPkZOeooUrVzWTgSLUrF7OYLxKzVxH5oWypmt1buRaI8ZgDQYlxfNHPtBqs2jWFgIsLvrT9CXnp2dRdFrbosGAnHsX0hNBMj5m4gLi/bg7TwquPWdmI/uMwYArHEDIn+kbi6ai/iSsXtncPLUb9rK6V9Hv5+CR7L9lRLGdSto7x9Cs3EiL0biGsvUNccJ/ZDO3ldS/KPxI0y7bPjgpGoL2+fOaXaZ54WtE+eC16dPvNHov3YvjA0NcITz0CcXr4byVW014adW6LbjCGo07YJTGwtcGj6Zjw+76XGHKtXs0n90XzWEBjK69q95b8hpVTfVFa9oZ3huOQ9GNW3RmZYHB5+cQCx/9yvMG37jVPQbMJb8Fn1O4J3nq2uImhMj/kj4TS2L4SmYkR5BuLC8j1I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+FTOmkogKzvXl0iN8hNDNZ2FWudUmxXPT0TlJOhxou7LYsRUk117fpiuMQx4JaIS2wJeML+sB0I2UFW0fvHb9JJcqAHrmiosuArwpQl5DlXJhKg/NJ0FtZAGXtd0FiolbN5D01l4pfjdiYiIiIiIiIiISEVcFkpEREREREREpG2KOB1UXThzjYiIiIiIiIiISEUcXCMiIiIiIiIiIlIRl4USEREREREREWkbPi1UbThzjYiIiIiIiIiISEUcXCMiIiIiIiIiIlIRl4USEREREREREWmbIi4LVRfOXCMiIiIiIiIiIlIRB9eIiIiIiIiIiIhUxGWhRERERERERETahk8LVRvOXCMiIiIiIiIiIlIRB9eIiIiIiIiIiIhUxGWhRERERERERETahk8LVRvOXCMiIiIiIiIiIlIRB9eIiIiIiIiIiIhUxGWhRERERERERERaRiYr1HQWXhucuUZERERERERERKQiDq4RERERERERERGpiMtCiYiIiIiIiIi0jYxPC1UXzlwjIiIiIiIiIiJSEQfXiIiIiIiIiIiIVMRloURERERERERE2qaIy0LVhTPXiIiIiIiIiIiIVMTBNSIiIiIiIiIiIhVxWSgRERERERERkbbh00LVhoNrpFGn2qzQdBZqnSGPvtB0FmqltA8nazoLtc7hRw00nYVa6Y2iLE1noda5o2Ok6SzUSiEGXIDwssxkms5B7XRDWKDpLNQ6rQv4NUsVjfJZ115W8zpJms4CEYHLQomIiIiIiIiIiFTGn1SIiIiIiIiIiLRNUaGmc/Da4Mw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG2KuCxUXThzjYiIiIiIiIiISEUcXCMiIiIiIiIiIlIRl4USEREREREREWkbPi1UbThzjYiIiIiIiIiISEUcXCMiIiIiIiIiIlIRl4USEREREREREWkbPi1UbThzjYiIiIiIiIiISEUcXCMiIiIiIiIiIlIRl4USEREREREREWkbLgtVG85cIyIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERFpGJivUdBZeG5y5RkREREREREREpCIOrhEREREREREREamIy0KJiIiIiIiIiLQNnxaqNpy5RkRE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J6EvEqK/e3HcojwD8WeZuJk3VI7bY3ncus8vbqMJfhH434ebyt3kv837vZERk4zwq9r1xDgveczekscs2jMQf5Wta2ViFiSP2RvzS/q1v8rEzGfXOegJDdBr1XgYmhshwS8Sx8ZtQFotW378ov7ZcQIGIiFGu0+HyFSMsLuP8dPEDSgoFUfrRrYwKhXHHh8OAADMOaT8pWr/wu24e7T2P422rPs/FvdrPTcWn0Pj7gbi7Pjy51DDUjEK/fsODK1M0WFhcV1L8ovAmVL9mnXbxrCVPzl0zI3NSp934I3PkKllqzXijt+CgZUpmi1+D0Ibc2T4RsB77AbFQw4M61krDSgK7SzR9Z+SewI2nj0MjWcPQ/INP3i+u07t+deE7PNXkGxhDouZE6FrbYG8xyGIm7UMRcmpAAC9OjZAqXtbCUSGsFr2KXRtrCGTSpEf/gQJyzcg+7z2tUl6PQlk1XU3N6IX8JfdB5rOQq0z5NHrNzvuVUj7sPyAMVXt8KMGms5CrdSp6NUu+X8d3NGpeFY0VU1acyaJ1xr8VVk14ToFms5CrdO6gLVNFY3yWddeVvM6tX9JuCY09rmg6SyoRc75HzWdhUqJBsx6fqJahL0+EREREREREZG24QoZteEDDYiIiIiIiIiIiFTEwTUiIiIiIiIiIiIVcVkoEREREREREZG20aKnhdZ0nLlGRERERERERESkIg6uERERERERERERqYjLQomIiIiIiIiItA2XhaoNZ64RERERERERERGpiINrREREREREREREKuKyUCIiIiIiIiIibSPjslB14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXFwjYiIiIiIiIiISEVcFkpEREREREREpG34tFC14cw1IiIiIiIiIiIiFXHmGmlUgh7Hd19W2oeTNZ2FWsns9z2azkKtY9xulaazUCvlFupqOgu1Try+TNNZqJUKwbi9LGepQNNZqJUShLxee1ns1lQjEhRoOgu1jjSXX+mJagK2RCIiIiIiIiIibcNloWrDn6GIiIiIiIiIiIhUxME1IiIiIiIiIiIiFXFZKBERERERERGRtpHxBpDqwplrREREREREREREKuLgGhERERERERERkYq4LJSIiIiIiIiISNvwaaFqw5lrREREREREREREKuLgGhERERERERERkYq4LJSIiIiIiIiISNtwWajacOYaERERERERERGRiji4RkREREREREREpCIuCyUiIiIiIiIi0jYyLgtVF85cIyIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERNqGTwtVG85cIyIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERNpGJtN0Dl4bnLlGRERERERERESkIg6uERERERERERERqYjLQomIiIiIiIiItA2fFqo2nLlGRERERERERESkIg6uERERERERERERqYjLQomIiIiIiIiItA2XhaoNZ64RERERERERERGpiDPXVBAbG4svv/wSp06dQlRUFGxsbODs7IzPPvsMb731VrV9bnJyMtatW4djx44hJiYG1tbWGDRoENasWYOGDRtW2+dqkw4LR6Ll2L4wMBMj7m4gri/bg/SwuCr3aT2xH5w+HgKRxAzJ/pG4uXIvEnxCAQBCcyN0WDAS9Xq1hXE9K+QmpSP8nBc8vzqK/IwcdRRJrQyHukI0agx0LCxREBqCrO3foSAw4Ln7GfR+E6ZLV0N68xoyPl+hhpzWfJ4+D7Fn/1H4BQQjISkZ37mvxFu9umk6W2rRYmI/OM6Utym/SPy7ci+S5G2qIo2GdobzolEwrm+N9LA4eK8/iKh/7iulabdwJBw+6AsDUzESPANx220PMipo2zoGenj75FpYOjbC3wOWIcU38pWXT5PqTB6E+rOGw0Bijky/CIQs34XMe8EVphW3qI9Gi8bAuF1TGDawQcjKPYjeeUrNOa4Z3pw3Eh3G9oWhqREiPQPx94rdSA6v/NzQqHNL9PhoCOq0bQJTWwvs/2gzAs57qTHHNcNb80ahkzxuEZ6BOLFiN5LCYytN37hzS/T8aCjqyuP2x0eb4X/eU405Vq9mk/qjxawhMJSYIdUvEveW/4aUKvq6+kM7w3HJezCqb43MsDg8+OIAYsv0dc+4bJyCZhPegs+q3xG082x1FaHGeGveKHQs1UZfpK71KFXX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ERERERERERGRijhzjYiIiIiIiIhI2xQVaToHrw3OXCMiIiIiIiIiIlIRB9eIiIiIiIiIiIhUxGWhRERERERERETahstC1YYz14iIiIiIiIiIiFTEwTUiIiIiIiIiIiIVcVkoEREREREREZG2kck0nYPXBmeuERERERERERERqYiDa0RERERERERERCrislAiIiIiIiIiIm3Dp4WqDWeuERERERERERERqYiDa0REREREREREVGNt27YNjRs3hqGhIbp06YJ///23yvSpqamYPXs26tSpA6FQiObNm+P06dPVlj8uCyUiIiIiIiIiohrp0KFDmD9/Pnbs2IEuXbpgy5YtGDhwIB4/fgwbG5ty6fPy8tC/f3/Y2Njg6NGjqFevHiIiImBubl5teeTgGhERERERERGRtimSaToHr8TmzZsxffp0TJ48GQCwY8cOnDp1Crt378bSpUvLpd+9ezeSk5Nx8+ZN6OvrAwAaN25crXnkslAiIiIiIiIiIlIbqVSK9PR0pZdUKi2XLi8vD15eXujXr59im46ODvr164dbt25VeOwTJ06ga9eumD17NmxtbdGmTRusX78ehYWF1VYeDq4REREREREREZHauLu7w8zMTOnl7u5eLl1iYiIKCwtha2urtN3W1haxsbEVHjs0NBRHjx5FYWEhTp8+jZUrV+Kbb77BF198US1lAbgslIiIiIiIiIhI+8iKNJ2DSrm5uWH+/PlK24RC4Ss5dlFREWxsbPDzzz9DV1cXHTp0QFRUFL766iusXr36lXxGWRxcIyIiIiIiIiIitREKhS80mGZtbQ1dXV3ExcUpbY+Li4OdnV2F+9SpUwf6+vrQ1dVVbGvVqhViY2ORl5cHAwOD/5b5CnBZKBERERERERER1TgGBgbo0KEDLl26pNhWVFSES5cuoWvXrhXu0717dwQHB6OoqGTmXmBgIOrUqVMtA2sAB9eIiIiIiIiIiLRPkazmvl7C/PnzsXPnTvz222/w9/fHzJkzkZWVpXh66IQJE+Dm5qZIP3PmTCQnJ2Pu3LkIDAzEqVOnsH79esyePfuVhrc0LgslIiIiIiIiIqIa6f3330dCQgJWrVqF2NhYODs74+zZs4qHHERGRkJHp2TuWIMGDXDu3DnMmzcPTk5OqFevHubOnYslS5ZUWx45uEZERERERERERDXWnDlzMGfOnArf8/DwKLeta9euuH37djXnqgQH10ijuC755R1+1EDTWaiVjNut0nQWap2x99dpOgu10qYOKzWdhVrHrlCg6SzUSuIixu1l1ZXlajoLtZIkh3XtZd1/RU+8e90ECgw1nYVa52k665oqWmg6A2oiK6q5TwvVNhzbICIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERNrmJZ/KSarjzDUiIiIiIiIiIiIVcXCNiIiIiIiIiIhIRVwWSkRERERERESkbWR8Wqi6cOYaERERERERERGRiji4RkREREREREREpCIuCyUiIiIiIiIi0jZ8WqjacOYaERERERERERGRiji4RkREREREREREpCIuCyUiIiIiIiIi0jZFfFqounDmGhERERERERERkYo4uEZERERERERERKQiLgslIiIiIiIiItI2fFqo2nDmGhERERERERERkYo4uEZERERERERERKQiLgslIiIiIiIiItI2Mj4tVF04c42IiIiIiIiIiEhFHFwjIiIiIiIiIiJSEZeFEhERERERERFpGz4tVG04c42IiIiIiIiIiEhFHFwjIiIiIiIiIiJSEZeFEhERERERERFpGVkRnxaqLpy5RkREREREREREpCKtmLk2adIk/PbbbwAAfX19NGzYEBMmTMCyZcugp1fzirhmzRr89ddf8PHxean9bt68iS+++AK3bt1CTk4OHBwcMHnyZMydOxe6urrVk1kt47JwJFqM7QsDMzHi7gbi5rI9SA+Lq3KfVhP7oe3HQyCSmCHZPxK3Vu5Fok+o4v0W4/qimWs3WLVpDAMTEX5v/RHy0rOruyhq02nBSLQe2xdCMzFi7gbi6rI9SAuvOmZtJvaD84whEEvMkOQfiWur9iK+VMxKG7J3ERr1bYcz075F2Dmv6ihCtWoxsR8cZ8rrh18k/l25F0mVlBUAGg3tDOdFo2Bc3xrpYXHwXn8QUf/cV0rTbuFIOHzQFwamYiR4BuK22x5kVFBPdQz08PbJtbB0bIS/ByxDim/kKy9fTeLp8xB79h+FX0AwEpKS8Z37SrzVq5ums1Xj9Jo/Eu3H9oXQ1AhPPQNxZvlupFTRZht0bomuM4bArm0TmNha4Mj0zQg8X/va4stgv/Z8zgtHorm8H4r3DMStSvqh0lpO7Ic2pfrDO2XOl7pCfXRc9QGajHgDugb6iPJ4gNvLfkVuYjoA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2uOh0r3UCnPz0HxcH3ReMw46BvrIiklC5GlPPNz2t1rKXZ0Sj9+EnpUpGi4eAwOJObJ8w+E79kvky2/2LaxnDVlRya/4BnYWcL5Uck+oerNGoN6sEUi76YtH765We/41JeH4TRhYmaLJ4vdhYGOOTN9wPBj7peLhEIb1rJVuii20s0DHf0ruP9lw9nA0nD0cqTd84fPuGjXnXn28tp+EvkiIt9ynQGgqRrRnIP4q06+ZNVTu14L+vgORpSnemF/Sr/314SalByP47DoHPaEBeq0aD0NzIyT4ReLYuA1Ii4hXa/mqC78bvJzIE7chtDJB20WjYCgxQ4pvBDzGbVSUXVzPSum6N9EzCDdnb4PTkvfgtHQ0MsJicW3KZqTJr3tlRUUwta+LJu/1hNDSBNKUTCTfD8XFdz5HemBUhXkgqskEshe5S/5raNKkSUhNTcVff/2l6axotV31x2s6C7WOVPD8NFSesfbNPK52Y++v03QWaqVNHVZqOgu1jkUROzZViNmvvTSHwlxNZ6FWypexjb6s+1WsSqHK8Xrt5Ym18KmL6jA2ep+ms6AWmfOHazoLlTLerF331dOae64RERERERERERGpGwfXaoB9+/bB2Ni4wpejY/Xc8J+IiIiIiIiIiP671/Keay/i119/VdtnDR8+HF26dKnwPX19fbXlg4iIiIiIiIi0g4zLhtWGg2s1gImJCUxMTJ6fkIiIiIiIiIiIahQuCyUiIiIiIiIiIlIRZ64REREREREREWkbLgtVG85cIyIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERNqmqEjTOXhtcOYaERERERERERGRiji4RkREREREREREpCIuCyUiIiIiIiIi0jZ8WqjacOYaERERERERERGRiji4RkREREREREREpCIuCyUiIiIiIiIi0jZcFqo2nLlGRERERERERESkIg6uERERERERERERqYjLQomIiIiIiIiItIxMxmWh6sKZa0RERERERERERCri4BoREREREREREZGKuCyUiIiIiIiIiEjb8GmhasOZa0RERERERERERCri4BoREREREREREZGKuCyUiIiIiIiIiEjbcFmo2nDmGhERERERERERkYo4uEZERERERERERKQiLgslIiIiIiIiItIyMi4LVRsOrpFGZQs0nYPa542iLE1noVbKLdTVdBZqnU0dVmo6C7XSYq/PNZ2FWufrDqs0nYVaScpz6EsLlxlqOgu10kep1zWdhVonelAzTWehVkq4y6+nLysjk/0aUU3AZaFEREREREREREQq4k8DRERERERERETahstC1YYz14iIiIiIiIiIiFTEwTUiIiIiIiIiIiIVcVkoEREREREREZG2KdJ0Bl4fnLlGRERERERERESkIg6uERERERERERERqYjLQomIiIiIiIiItIyMTwtVG85cIyIiIiIiIiIiUhEH14iIiIiIiIiIiFTEZaFERERERERERNqGy0LVhjPXiIiIiIiIiIiIVMTBNSIiIiIiIiIiIhVxWSgRERERERERkbYp0nQGXh+cuUZERERERERERKQiDq4RERERERERERGpiMtCiYiIiIiIiIi0jIxPC1UbzlwjIiIiIiIiIqIaa9u2bWjcuDEMDQ3RpUsX/Pvvvy+038GDByEQCODq6lqt+ePgGhERERERERER1UiHDh3C/PnzsXr1anh7e6Ndu3YYOHAg4uPjq9wvPDwcCxcuRM+ePas9jxxcIyIiIiIiIiLSNkU1+PUSNm/ejOnTp2Py5Mlo3bo1duzYAbFYjN27d1e6T2FhIcaNG4e1a9eiadOmL/eBKuDgGhERERERERERqY1UKkV6errSSyqVlkuXl5cHLy8v9OvXT7FNR0cH/fr1w61btyo9/rp162BjY4OpU6dWS/7L4uAaERERERERERGpjbu7O8zMzJRe7u7u5dIlJiaisLAQtra2StttbW0RGxtb4bGvX7+OXbt2YefOndWS94rwaaFERERERERERFqmJj8t1M3NDfPnz1faJhQK//NxMzIy8OGHH2Lnzp2wtrb+z8d7URxcIyIiIiIiIiIitREKhS80mGZtbQ1dXV3ExcUpbY+Li4OdnV259CEhIQgPD8ewYcMU24qKim/ypqenh8ePH6NZs2b/MfflcVkoERERERERERHVOAYGBujQoQMuXbqk2FZUVIRLly6ha9eu5dK3bNkSDx8+hI+Pj+I1fPhw9O3bFz4+PmjQoEG15PO1m7kmEAiqfH/16tVYs2aNejJTgUmTJiE1NRV//fWXxvKgzbosGAnHsX0hNBMj5m4gLi/bg7TwuCr3aTuxH1xmDIFYYoZE/0hcXbUXcT6hivffObwc9bu2Utrn4e+X4LFsT7WUQZNsJg6G3UxX6EvM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pGK4LFRxOHONiIiIiIiIiIhIThxcIyIiIiIiIiIikhOXhRIRERERERERqRguC1UczlwjIiIiIiIiIiKSEwfXiIiIiIiIiIiI5MRloUREREREREREqqZMoOwIXhmcuUZERERERERERCQnDq4RERERERERERHJictCiYiIiIiIiIhUDJ8WqjicuUZERERERERERCQnDq4RERERERERERHJictCiYiIiIiIiIhUTFkpnxaqKJy5RkREREREREREJCcOrhEREREREREREcmJy0KJiIiIiIiIiFQMnxaqOJy5RkREREREREREJCcOrhEREREREREREcmJy0KJiIiIiIiIiFRMWRmfFqoonLlGREREREREREQkJ85cI6XSKlN2BI3PDTU9ZYfQKCVpsrK9LKsS/tIlj286rVR2CI3OQv/PlB1Co/S7ywplh9DoJGnwvCaPM6LOyg6h0Tl5VlvZITRKCfx2+tLuqYmVHUKj5KPsAEjl8PRFRERERERERKRi+LRQxeGyUCIiIiIiIiIiIjlxcI2IiIiIiIiIiEhOXBZKRERERERERKRiykp5r1FF4cw1IiIiIiIiIiIiOXFwjYiIiIiIiIiISE5cFkpEREREREREpGLKypQdwauDM9eIiIiIiIiIiIjkxME1IiIiIiIiIiIiOXFZKBERERERERGRiuHTQhWHM9eIiIiIiIiIiIjkxME1IiIiIiIiIiIiOXFZKBERERERERGRiuGyUMXhzDUiIiIiIiIiIiI5cXCNiIiIiIiIiIhITlwWSkRERERERESkYsrKlB3Bq4Mz14iIiIiIiIiIiOTEwTUiIiIiIiIiIiI5cVkoEREREREREZGK4dNCFYcz14iIiIiIiIiIiOTEwTUiIiIiIiIiIiI5cVkoEREREREREZGKKSvjslBF4cw1IiIiIiIiIiIiOXFwjYiIiIiIiIiISE5cFkpEREREREREpGLKSpUdwauDg2syTJs2Dbt27Xpm/6BBg+Dr6wsHBwfExMQAALS1tWFpaYmuXbtizpw5eO211yTpL168CHd3d6Snp8PIyEjqvRwcHPDRRx/ho48+kuy7cOEC/ve//+HGjRsQi8VwcHDAkCFD4OXlhSZNmkgd37p1a0RFRSEmJgZWVlaSz6rNhQsXEB0djY8++ggZGRmS/WKxGGvXrsX+/fsRExMDAwMDuLu7Y/Xq1XB2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PHlSbzFycI2IiIiIiIiISMWUlTXc7WVs2LABs2bNgqenJ9q2bYutW7dCV1cXO3bsqDH93r17MXfuXLi6uqJ169bYtm0bSktLcf78+Too1ZpxcI2IiIiIiIiIiBSmoKAAWVlZUltBQcEz6QoLC+Hv7w8PDw/JPjU1NXh4eODatWsv9Fl5eXkoKiqCiYlJncVfHQfXiIiIiIiIiIhIYdasWQNDQ0Opbc2aNc+kS0lJQUlJCSwtLaX2W1paIiEh4YU+a/HixbCxsZEaoKtrfFooEREREREREZGKKW3ATwv19vaGl5eX1D6hUFjnn7N27VocOHAAFy9ehLa2dp2//1McXCMiIiIiIiIiIoURCoUvNJhmZmYGdXV1JCYmSu1PTEyElZVVrcd+8803WLt2Lc6dO4f27dv/p3ifh8tCiYiIiIiIiIiowdHS0kKnTp2kHkbw9OEEPXr0kHncunXr8Pnnn8PX1xedO3eu9zg5c42IiIiIiIiISMWUNeBloS/Dy8sLU6dORefOndG1a1ds3LgRubm58PT0BABMmTIFTZo0kdyz7euvv8bKlSuxb98+ODg4SO7Npq+vD319/XqJkYNrRERERERERETUII0fPx7JyclYuXIlEhIS4OrqCl9fX8lDDmJjY6GmVrkwc8uWLSgsLMSYMWOk3mfVqlVYvXp1vcTIwTUiIiIiIiIiImqw5s2bh3nz5tX42sWLF6X+jo6Orv+AquHgGhERERERERGRiikrU3YErw4+0ICIiIiIiIiIiEhOHFwjIiIiIiIiIiKSE5eFEhERERERERGpmFIVeVpoY8CZa0RERERERERERHLi4BoREREREREREZGcuCyUlMqyuFTZITQ6kVocE5dHCfionJelW8pp5PIoYLG9tN9dVig7hEZpVNDnyg6h0fnObaWyQ2iUItS1lR1Co5OpruwIGqfFCReUHUKjs8vMXdkhUANWxmWhCsNv6URERERERERERHLi4BoREREREREREZGcuCyUiIiIiIiIiEjF8GmhisOZa0RERERERERERHLi4BoREREREREREZGcuCyUiIiIiIiIiEjFlCk7gFcIZ64RERERERERERHJiYNrREREREREREREcuKyUCIiIiIiIiIiFcOnhSoOZ64RERERERERERHJiYNrREREREREREREcuKyUCIiIiIiIiIiFVPGZaEKw5lr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xME1IiIiIiIiIiIiOXFZKBERERERERGRiilTdgCvEM5cIyIiIiIiIiIikhMH14iIiIiIiIiIiOTEZaFERERERERERCqmVNkBvEI4c42IiIiIiIiIiEhOHFwjIiIiIiIiIiKSE5eFEhERERERERGpmFKBQNkhvDI4c42IiIiIiIiIiEhOHFwjIiIiIiIiIiKSE5eFEhERERERERGpmDJlB/AK4cw1IiIiIiIiIiIiOXFwjYiIiIiIiIiISE5cFkpEREREREREpGJKlR3AK4SDa6RUd4V8NPDLMuTCebm4FrCuvSybsnxlh9AoRZdpKzuERidJg+1THt+5rVR2CI3OhwGfKTuERulQe9a1l2VWrOwIGqejJn2VHUKjk1/GLwdEDQGXhRIREREREREREcmJM9eIiIiIiIiIiFRMKRcHKAxnrhEREREREREREcmJg2tERERERERERERy4rJQIiIiIiIiIiIVUwquC1UUzlwjIiIiIiIiIiKSEwfXiIiIiIiIiIiI5MRloUREREREREREKqZM2QG8QjhzjYiIiIiIiIiISE4cXCMiIiIiIiIiIpITl4USEREREREREamYUj4sVGE4c42IiIiIiIiIiBqsH374AQ4ODtDW1ka3bt1w8+bNWtMfPnwYrVu3hra2NlxcXHDq1Kl6jY+Da0RERERERERE1CAdPHgQXl5eWLVqFQICAtChQwcMGjQISUlJNab/999/MXHiRMyYMQO3b9/GyJEjMXLkSNy7d6/eYuTgGhERERERERGRiiltwNvL2LBhA2bNmgVPT0+0bdsWW7duha6uLnbs2FFj+u+++w6DBw/GJ598gjZt2uDzzz+Hm5sbvv/++5f85BfHwTUiIiIiIiIiIlKYgoICZGVlSW0FBQXPpCssLIS/vz88PDwk+9TU1ODh4YFr167V+N7Xrl2TSg8AgwYNkpm+LnBwjYiIiIiIiIiIFGbNmjUwNDSU2tasWfNMupSUFJSUlMDS0lJqv6WlJRISEmp874SEhJdKXxf4tFAiIiIiIiIiIhVTpuwAauHt7Q0vLy+pfUKhUEnR/HccXCMiIiIiIiIiIoURCoUvNJhmZmYGdXV1JCYmSu1PTEyElZVVjcdYWVm9VPq6wGWhRERERERERETU4GhpaaFTp044f/68ZF9paSnOnz+PHj161HhMjx49pNIDwNmzZ2Wmrwuc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kR6diNNePyHqwh2F51EZ7oVFYPoHiyV/r9v8MwBgxBAPfLl8gbLCUgqe1+TDcnt5ccevQ8tUBKdFYyA0N0JWcAxuTFyLworrDJ0mZlLXa+l+EQiY+z1aLx6H1t7jkRuVgFue65EdJn29ZjOyBwQQ4MlR6dVQqoLXuUS1E5RVv4kYNWizZs1CWFgYLl++/J/eJycnB02aNIGPjw9GjRol9Vr//v3h6uqKjRs3/qfPeBGf2U+q989QNYZlXCojD5sinupelk1ZwfMT0TOi1bSVHUKjk6YakyEUroDdwUv7MOAzZYfQKB1qv1LZIdArQlT6Yg+So0r5Ai5Gk8fY+L3KDkEhvredrOwQZJr36Fdlh1CnOHOtgfvmm28wYMAA6Onp4fTp09i1axd+/PFHud+vtLQUKSkpWL9+PYyMjPDmm2/WYbRERERERERE1BBweoHicHCtgbt58ybWrVuH7OxsNG/eHJs2bcLMmTMBAM7OzoiJqfnJlj/99BMmTXp2VlhsbCyaNWuGpk2bYufOndDQYBUgIiIiIiIiIpIXR1YauEOHDsl87dSpUygqKqrxNUtLyxr3Ozg44HkrgS9evPjC8RERERERERERvco4uNaI2dvbKzsEIiIiIiIiImqASnl/VoXh3Q+JiIiIiIiIiIjkxME1IiIiIiIiIiIiOXFZKBERERERERGRiilVdgCvEM5cIyIiIiIiIiIikhMH14iIiIiIiIiIiOTEZaFERERERERERCqGy0IVhzPXiIiIiIiIiIiI5MTBNSIiIiIiIiIiIjlxWSgRERERERERkYopU3YArxDOXCMiIiIiIiIiIpITB9eIiIiIiIiIiIjkxGWhREREREREREQqplSg7AheHZy5RkREREREREREJCcOrhEREREREREREcmJy0KJiIiIiIiIiFRMqbIDeIVw5hoREREREREREZGcOLhGREREREREREQkJy4LJSIiIiIiIiJSMWXKDuAVwplrREREREREREREcuLgGhERERERERERkZy4LJSIiIiIiIiISMWUcmGownDmGhERERERERERkZw4c42Uqm2hsiNofK4Ki5UdQqOULORvCS/LXCxQdgiN0rsZV5QdQqNzRtRZ2SE0ShHq2soOodE51H6lskNolMbd/UzZITQ63ditCgAAy6JJREFUP7qxrsnjpECs7BAanTbQU3YIRAQO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tVpQUBC8vLxw9+5dtGlTsmDWtm3b0LdvX3z//fewtbV96RgXFxf873//k76uX78+Vq1ahbFjx6KwsBBaWlVrNmPPNSIiIiIiIiIiNVNcg7e8vDykp6fLbHl5ef/pem/dugVjY2NpwxoA9OzZExoaGrh9+3aVz5OWlgaRSFTlhjWAjWtERERERERERKREa9asgVgsltnWrFnzn84ZGxsLS0tLmX1aWlowNTVFbGxslc6RmJiIb7755pVDSeVh4xoRERERERERESmNp6cn0tLSZDZPT0+5aRctWgSBQPDK7dGjR/85pvT0dPTr1w9NmzbFypUr3+hYzrlGRERERERERKRmiqtxVc7/SigUQigUVint/PnzMWHChFemcXJygrW1NeLj42X2FxYWIjk5GdbW1q88PiMjA+7u7jAyMsLx48ehra1dpdheYOMaERERERERERHVSBYWFrCwsHhtug4dOiA1NRX37t1D69atAQAXL15EcXEx2rVrV+lx6enp6N27N4RCIf7880/o6uq+cYwcFkpERERERERERLVakyZN4O7ujqlTp+LOnTu4ceMGZs2ahZEjR0pXCo2KikLjxo1x584dACUNa7169UJWVhb27NmD9PR0xMbGIjY2FkVFRVX+bPZcIyIiIiIiIiJSMzV3UGj1OXToEGbNmoUePXpAQ0MDQ4cOxdatW6XvFxQU4PHjx8jOzgYA+Pj4SFcSdXZ2ljlXWFgYHB0dq/S5bFwjIiIiIiIiIqJaz9TUFIcPH670fUdHR0gkZc2O3bt3l3mtKA4LJSIiIiIiIiIiUhB7rhERERERERERqZmavFqoumHPNSIiIiIiIiIiIgWxcY2IiIiIiIiIiEhBbFwjIiIiIiIiIiJSEOdcIyIiIiIiIiJSM8WqDuAdwp5rRERERERERERECmLjGhERERERERERkYI4LJSIiIiIiIiISM1IIFF1CO8M9lwjIiIiIiIiIiJSEBvXiIiIiIiIiIiIFMRhoUREREREREREaoarhSoPe64REREREREREREpiI1rRERERERERERECuKwUFKppzoCVYdQ6zQtZLVVhDYXynljD4RCVYdQK0W711d1CLXOqXO6qg6hVkrTVHUEtY95oaojqJ1+aLVc1SHUOjN9vlZ1CLVSSxcPVYdQ6+RKilQdAtVgXC1UedhzjYiIiIiIiIiISEFsXCMiIiIiIiIiIlIQx5cREREREREREakZrhaqPOy5RkREREREREREpCA2rhERERERERERESmIw0KJiIiIiIiIiNRMsYSrhSoLe64REREREREREREpiI1rRERERERERERECuKwUCIiIiIiIiIiNcNBocrDnmtEREREREREREQKYuMaERERERERERGRgjgslIiIiIiIiIhIzRRzYKjSsOcaERERERERERGRgti4RkREREREREREpCAOCyUiIiIiIiIiUjMSDgtVGvZcIyIiIiIiIiIiUhAb14iIiIiIiIiIiBTEYaFERERERERERGqmWNUBvEPYc42IiIiIiIiIiEhBbFwjIiIiIiIiIiJSEIeFEhERERERERGpmWKuFqo07LlGRERERERERESkIDauERERERERERERKYjDQomIiIiIiIiI1IyEw0KVhj3X1MCECRMwaNAgVYdBRERERERERPTOYc+1KpowYQIOHDjw0v7evXvDy8tLBRGV2bJlCyQStkhXRed5Q+E26n0IRfqI8g7GuSX7kBIe98pjWn7SE22n9YOBhRjxQZE4v+IgYh88lb5vYCFG98Wj4NDZBTqGukh5Gotb208i+PTd6r4cpWi9YCgaj3ofOmJ9xN0NxvXF+5Ae9uo8azq+J9xm9IOehRjJQZG4uewgEnxL8kxobIDW84eiTldXGNYxQ25SOsLP3IP3d8dQkJGjjEt6q1rMG4J6A9tD39YUxflFSPIPg8+635F4P/Q/n7vx+J5w+bQ0HwMjcXvZQST6lpU999+XwLpjE5ljHv98AbcW7fvPn60K7ecNhcvokvoZ7R2MS4v3IfU19dPtk55oPb0f9C3ESAyKxOXlBxFXrn4CgHUrZ3T8chisW9ZHcZEEiYEROD52HYryCqrzclRCp8dACPsMh0BsiqJnocj9ZRuKnj5+7XHa7d6H/sylKLh3A9lblyshUtVpOKEnmpTWq5TASHgvPYgk36eVprfv3xZuCz+GYV1zZITF4f6qo4i++AAAINDSRHOPj1HngxYwdLBAfnoOYq89hO/qX5ETl6qkK1Ie1tE3w7KmOJa1t8/b1x/7Dh9D4KMnSEhKxpY1y9Cja0dVh1Wj2EzsDbuZH0HHwhiZgREIXbIXGfefyE2r36guHL4cAaPmTtC1s0Tosn2I2vWPkiNWPbuJveA4cwB0LMXIDIxE0OJ9SK/kGdig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WDMJQpE+or2DcWKcbFkT21tCr1xZC/nrNvRMRWg/r6SsJQZG4MS49TITYfvuOQMtoQ66Lh8LXWMDJARG4viYtUirwcNmFVVw5zIEIjF0h0yAQGyCoshQZH2/CJL0kkUONEwtgVrUeF0dIv68DaGZCM2/HApdCzFSAiJwaUxZvTKoYy7TwJ/oHYIbn/2A5h7D0GLRcGSExeLqpE1IK51PU9/aBHa9WwMA+p2XXczn3NBViK/lq0aXxzr6ZljWFMeyVj0ePgrBpNke0tfrt/0EABjYpydWLZ2vqrBqjISTN6FtJoLDwhHQsTBGZkA4Ho5ahYLShTKEFeqsjrUJWl/4TvrabuZHsJv5EVJvBsBvyEolR68acSdvQcdMhPoLh0FoaYyMgAj4jForXeRAt0KeCa1N0eHiOulrx88GwPGzAUi+EQjvIV8rPX6it00g4fIRStG9e3e0aNECmzdvVnUoNcp6h7GqDqHWMVGfH6eVSpvfdG8sTXkdS9XKhPfVa64yZTh1Tv4KivRqifyJ9I2ZF6o6gtqJZe3NzfRhY4Eibrl4vD4RyciV8IFNEb3ijqo6BKUYYF9zO7/8FXlK1SG8VZxzjYiIiIiIiIiISEFsXCMiIiIiIiIiIlIQO3kryeXLl1UdAhERERERERG9IyRquCpnTcWea0RERERERERERApi4xoREREREREREZGCOCyUiIiIiIiIiEjNFHNYqNKw5xoREREREREREZGC2LhGRERERERERESkIA4LJSIiIiIiIiJSMxIJh4UqC3uuERERERERERERKYiNa0RERERERERERArisFAiIiIiIiIiIjVTrOoA3iHsuUZERERERERERKQgNq4REREREREREREpiMNCiYiIiIiIiIjUjARcLVRZ2HONiIiIiIiIiIhIQWxcIyIiIiIiIiIiUhCHhRIRERERERERqZliDgtVGvZcIyIiIiIiIiIiUhAb14iIiIiIiIiIiBTEYaFERERERERERGpGIuGwUGVhzzUiIiIiIiIiIiIFsXGNiIiIiIiIiIhIQRwWSkRERERERESkZrhaqPKw5xoREREREREREZGC2LhGRERERERERESkIA4LJSIiIiIiIiJSMxIOC1UaNq6RSpkUqTqC2sehoFDVIdRKegLm25sKFuiqOoRaKeEub61vKpZZphCP2EuqDqHWOW7aVdUh1Eqn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GDRoULWcf1fdsdVyXnXmUMCbjSL0BMy3NxWspavqEGqlbqKE1yciGSczLVQdQq3kEateK1Mrw3HTrqoOoVY6LMxRdQi1zqd56j0Etbp0eLju9YlIxknXZaoOoVb6OObd6AHsZi1/kcKawC/2lqpDeKs45xoREREREREREZGC2LimRlavXg1DQ0O5W58+fVQdHhEREREREREpSbFEUmM3dcM519TIjBkzMHz4cLnv6enpKXROjhomIiIiIiIiIqocG9fUiKmpKUxNTV+fkIiIiIiIiIiI3go2rhERERERERERqRmuFqo8nHONiIiIiIiIiIhIQWxcIyIiIiIiIiIiUhCHhRIRERERERERqRl1XJWzpmLPNSIiIiIiIiIiIgWxcY2IiIiIiIiIiEhBHBZKRERERERERKRmuFqo8rDnGhERERERERERkYLYuEZERERERERERKQgDgslIiIiIiIiIlIzXC1UedhzjYiIiIiIiIiISEFsXCMiIiIiIiIiIlIQh4USEREREREREakZrhaqPOy5RkREREREREREpCA2rhERERERERERESmIw0KJiIiIiIiIiNQMVwtVHvZcIyIiIiIiIiIiUhAb14iIiIiIiIiIiBTEYaFERERERERERGqGq4UqD3uuERERERERERERKYiNa0RERERERERERArisFAiIiIiIiIiIjUjkRSrOoR3BnuuERERERERERERKYg910ilhJxf8Y01tElSdQi1Ul4uv+7e1PN0oapDqJUyMnVVHUKt81AjR9Uh1EoHzN9XdQi1Tq6EDx6KaAIDVYdQ6+RKilQdQq100nWZqkOodQb6f6PqEIgIbFwjIiIiIiIiIlI7xVwtVGk4LJSIiIiIiIiIiEhBbFwjIiIiIiIiIiJSEIeFEhERERERERGpGQnnGlUa9lwjIiIiIiIiIiJSEBvXiIiIiIiIiIiIFMRhoUREREREREREaoarhSoPe64REREREREREREpiI1rRERERERERERECuKwUCIiIiIiIiIiNcPVQpWHPdeIiIiIiIiIiIgUxMY1IiIiIiIiIiIiBXFYKBERERERERGRminmsFClYc81IiIiIiIiIiIiBbFxjYiIiIiIiIiISEEcFkpEREREREREpGYk4LBQZWHPNSIiIiIiIiIiIgWxcY2IiIiIiIiIiEhBHBZKRERERERERKRmJFwt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w8rKClu3bsWRI0cQGhqKxo0bY9WqVejcuXOVP1vxMYpERERERERERFQjSSSSGrutWbMGYrFYZluzZs1/ut7Y2FhYWlrK7NPS0oKpqSliY2PlHvP06VMAwMqVKzF16lR4eXmhVatW6NGjB0JCqj6/5zvRuNasWTMYGhrK3Q4dUo9hVpGRkZVeo6GhISIjX17VkoiIiIiIiIhI2eQteOjp6Sk37aJFiyAQCF65PXr0SKE4ikunTZk+fTomTpyIli1bYtOmTWjUqBH27t1b5fO8E+Mw/vnnHxQUFMh9z8pKPSbrtLW1ha+v7yvff1P79+9XPCAiIiIiIiIiIjneZAjo/PnzMWHChFemcXJygrW1NeLjZRfPKCwsRHJyMqytreUeZ2NjAwBo2rSpzP4mTZq8USeld6JxzcHBQdUhVDstLS04OzurOgwiIiIiIiIiqgGK1WSuUQsLC1hYWLw2XYcOHZCamop79+6hdeuSBZQuXryI4uJitGvXTu4xjo6OsLW1xePHj2X2BwcHSxeArIp3YlgoERERERERERGpryZNmsDd3R1Tp07FnTt3cOPGDcyaNQsjR46UjuaLiopC48aNcefOHQCAQCDAl19+ia1bt+LYsWN48uQJli1bhkePHmHy5MlV/ux3oucaERERERERERGpt0OHDmHWrFno0aMHNDQ0MHToUGzdulX6fkFBAR4/fozs7Gzpvjlz5iA3Nxdz585FcnIymjdvjnPnzqF+/aqvtsrGNSIiIiIiIiIiNSOBegwLfROmpqY4fPhwpe87OjpCIme47KJFi7Bo0SKFP5fDQomIiIiIiIiIiBTExjUiIiIiIiIiIiIFcVgoEREREREREZGaUZfVQmsD9lwjIiIiIiIiIiJSEBvXiIiIiIiIiIiIFMRhoUREREREREREakbeqphUPdhzjYiIiIiIiIiISEFsXCMiIiIiIiIiIlIQh4USEREREREREakZCTgsVFnYc42IiIiIiIiIiEhBbFwjIiIiIiIiIiJSEIeFEhERERERERGpGa4WqjzsuUZERERERERERKQgNq4REREREREREREpiMNCiYiIiIiIiIjUDIeFKg97rhERERERERERESmIjWtEREREREREREQK4rBQIiIiIiIiIiI1w0GhysOea0RERERERERERApi4xoREREREREREZGCBBIuH0H0kry8PKxZswaenp4QCoWqDqdWYJ4phvn25phnimG+vTnmmWKYb2+OeaYY5tubY54phvn25phn9K5h4xqRHOnp6RCLxUhLS4NIJFJ1OLUC80wxzLc3xzxTDPPtzTHPFMN8e3PMM8Uw394c80wxzLc3xzyjdw2HhRIRERERERERESmIjWtEREREREREREQKYuMaERERERERERGRgti4RiSHUCjEihUrOPnmG2CeKYb59uaYZ4phvr055plimG9vjnmmGObbm2OeKYb59uaYZ/Su4YIGRERERERERERECmLPNSIiIiIiIiIiIgWxcY2IiIiIiIiIiEhBbFwjIiIiIiIiIiJSEBvXiIiIiIiIiIiIFMTGNSIiIjWWn5+Px48fo7CwUNWhEBERERGpJTauEVG1OHbsmKpDqHEKCwtx8OBBxMXFqToUegdkZ2dj8uTJ0NfXR7NmzRAZGQkAmD17NtauXavi6IiI/psnT57gzJkzyMnJAQBIJBIVR0Tq5Ouvv0Z2dvZL+3NycvD111+rIKKaz8nJCUlJSS/tT01NhZOTkwoiIlIuNq4RkUIKCwvx8OFDBAcHy+w/efIkmjdvjjFjxqgosppLS0sLM2bMQG5urqpDqXUKCgqgpaWFhw8fqjqUWsPT0xMPHjzA5cuXoaurK93fs2dP/PrrryqMjN4FRUVF8PX1RUpKiqpDITWTlJSEnj17omHDhujbty9iYmIAAJMnT8b8+fNVHB2pi6+++gqZmZkv7c/OzsZXX32lgohqvvDwcBQVFb20Py8vD1FRUSqIiEi5tFQdAJEqbd26tcppP//882qMpHZ5+PAh+vfvj2fPngEABg4ciB07dmD48OF4+PAhpk6dir///lvFUdZMbdu2ha+vLxwcHFQdSq2ira0Ne3t7uQ9tJN+JEyfw66+/on379hAIBNL9zZo1Q2hoqAojq7le9O57HXt7+2qOpPaZM2cOXF1dMXnyZBQVFaFbt264efMm9PX1cerUKXTv3l3VIdZYoaGh2LdvH0JDQ7FlyxZYWlri9OnTsLe3R7NmzVQdXo0zd+5caGlpITIyEk2aNJHuHzFiBObNm4cNGzaoMLqajWWt6iQSicy984UHDx7A1NRUBRHVXH/++af032fOnIFYLJa+LioqwoULF+Do6KiCyIiUi41r9E7btGlTldIJBAI2rpXj4eEBZ2dnbN++HUeOHMGRI0cQFBSEyZMnw8vLC3p6eqoOscaaOXMm5s2bh2fPnqF169YwMDCQed/NzU1FkdV8S5YsweLFi/Hzzz/zwbYKEhISYGlp+dL+rKwsuX8wEODo6Cg3b8r/kSUQCDh/nRzHjh3D2LFjAQB//fUXwsLC8OjRI/z8889YsmQJbty4oeIIa6YrV66gT58+6NSpE65evYpVq1bB0tISDx48wJ49ezjFghxnz57FmTNnULduXZn9DRo0QEREhIqiqvlY1qrGxMQEAoEAAoEADRs2lLknFBUVITMzEzNmzFBhhDXPoEGDpP8eP368zHva2tpwdHRkoze9EwQSTlBARG/I0tISZ8+eRYsWLZCWlgYTExMcOHAA48aNU3VoNZ6Gxsuj8QUCgfSPd/bMqlzLli3x5MkTFBQUwMHB4aWGSR8fHxVFVjN17doVw4YNw+zZs2FkZAQ/Pz/Uq1cPs2fPRkhICLy8vFQdYo3z4MEDufslEgmOHj2KrVu3wtDQEPHx8UqOrObT1dXFkydPULduXUybNg36+vrYvHkzwsLC0Lx5c6Snp6s6xBqpQ4cOGDZsGObNmwcjIyM8ePAATk5OuHPnDoYMGYLnz5+rOsQax8jICD4+PmjQoIFMnnl7e6N3795y53wilrWqOnDgACQSCSZNmoTNmzfL9MLS0dGBo6MjOnTooMIIa6569erB29sbZmZmqg6FSCXYc42ogvz8fISFhaF+/frQ0mIVkScxMRG2trYAALFYDAMDA7Rv317FUdUOYWFhqg6h1ir/yyi93urVq9GnTx8EBgaisLAQW7ZsQWBgIG7evIkrV66oOrwaqXnz5i/tO3/+PBYtWoTg4GAsXLiQczpVwsrKCoGBgbCxsYGXlxd27NgBoGR+Ik1NTRVHV3P5+/vj8OHDL+23tLREYmKiCiKq+bp06YKDBw/im2++AVDyA1VxcTHWr1+P999/X8XR1Vwsa1Uzfvx4FBYWQiAQ4IMPPoCdnZ2qQ6oVCgoK4OTkhOTkZDau0TuLLQdEpbKzszF79mwcOHAAABAcHAwnJyfMnj0bderUwaJFi1QcYc0hEAiQkZEBXV1daY+rnJycl3omiEQiFUVYc3GuNcWtWLFC1SHUKp07d4avry/Wrl0LV1dXnD17Fq1atcKtW7fg6uqq6vBqPB8fH3h4eODatWuYMmUK/vnnH7nDbKnExIkTMXz4cNjY2EAgEKBnz54AgNu3b6Nx48Yqjq7mMjY2RkxMDOrVqyez//79+6hTp46KoqrZ1q9fjx49esDb2xv5+flYuHAhAgICkJyczOHHr8CyVnVaWlr49NNPERQUpOpQag1tbW34+fmpOgwileJqoUSluLJe1UkkEjRs2BAmJiYwNTVFZmYmWrZsCRMTE5iYmMDY2BgmJiaqDrPG+vnnn9GpUyfY2tpK54fZvHkzTp48qeLIar7U1FTs3r0bnp6eSE5OBlDSCMJVqOSrX78+du3ahTt37iAwMBC//PILG9ZeIzQ0FCNGjEDbtm1hYWGBwMBAbN++nQ1rr7Fy5Urs3r0b06ZNw40bNyAUCgEAmpqa/HHqFUaOHAkPDw/ExsZKe2DduHEDCxYswCeffKLq8GokFxcXBAcHo3Pnzhg4cCCysrIwZMgQ3L9/H/Xr11d1eDUWy9qbadu2Le7fv6/qMGqVsWPHYs+ePaoOg0hlOOcaUSkHBwfpynrl56J48uQJWrVqxfliyqnqkLJu3bpVcyS1z44dO7B8+XLMmTMHq1atwsOHD+Hk5IT9+/fjwIEDuHTpkqpDrLH8/PzQs2dPiMVihIeH4/Hjx3BycsLSpUsRGRmJgwcPqjrEGik+Ph7x8fEoLi6W2c/FM142c+ZM7NmzB++//z7Wrl2LFi1aqDokUnP5+fn47LPPsH//fhQVFUFLSwtFRUUYPXo09u/fzyG19NawrL2Z3377DZ6enpg7dy4XoKqi2bNn4+DBg2jQoIHcPNu4caOKIiNSDjauEZXS19eXNnSUb1x78OABunbtirS0NFWHSGqgadOmWL16NQYNGiRTzh4+fIju3btz3pNX6NmzJ1q1aoX169fL5N3NmzcxevRohIeHqzrEGuXevXsYP348goKCUPFWz8Uz5NPQ0ICuru5rhzFy8YyXff311698f/ny5UqKpHaKjIzEw4cPpT3BGzRooOqQaqzKhp4JBALo6urC3t5e2nOSXvbs2TP4+/uzrL0GF6B6c6+a81AgEODixYtKjIZI+TjnGlGpNm3a4O+//8bs2bMBQLr09u7du7kqUAW//fYbBg0aBB0dHQDA8+fPYWtrK30Qyc7Oxvbt27Fw4UJVhlkjhYWFoWXLli/tFwqFyMrKUkFEtcfdu3fx448/vrS/Tp06iI2NVUFENdukSZPQsGFD7NmzB1ZWVtLvNKoc5/VT3PHjx2VeFxQUICwsDFpaWqhfvz4b117D3t5eOnE66+qrtWjRQppHL344KJ9n2traGDFiBH788UeZaT6ohJ2dHSfprwIuQPXmOPqC3nVsXCMqxZX1qm7UqFGIiYmRzkHUtGlT+Pr6wsnJCQCQkZEBT09PNq7JUa9ePfj6+r60sIGXlxeaNGmioqhqB6FQKHd4dnBwMCwsLFQQUc329OlT/O9//4Ozs7OqQ6k12LimOHlzE6Wnp2PChAkYPHiwCiKqPfbs2YNNmzYhJCQEANCgQQPMmTMHU6ZMUXFkNdPx48fh4eGBL7/8Em3btgUA3LlzBxs2bMCKFStQWFiIRYsWYenSpfj+++9VHG3NMXToULRt2xYeHh4y+9evX4+7d+/i999/V1FkNRMXoCKiN8XGNaJSXFmv6ioOMePo8qqbN28ePvvsM+Tm5kIikeDOnTs4cuQI1qxZg927d6s6vBrto48+wtdff43ffvsNQElPhcjISHh4eGDo0KEqjq7m6dGjBx48eMDGNQX5+fkhODgYANCwYUPOr6MAkUiEr776CgMGDMC4ceNUHU6NtHz5cmzcuBGzZ8+W9pK/desW5s6di8jIyNcOt30XrVq1Clu2bEHv3r2l+1xdXVG3bl0sW7YMd+7cgYGBAebPn8/GtXKuXr2KlStXvrS/T58+2LBhg/IDquH+/PPPKqf96KOPqjGS2mPw4MFV7nn7xx9/VHM0RMrHxjWicl6srEdUXaZMmQI9PT0sXboU2dnZGD16NGxtbbFlyxaMHDlS1eHVaBs2bMDHH38MS0tL5OTkoFu3boiNjUWHDh2watUqVYdX4+zevRvjx4/Hw4cP4eLiAm1tbZn3+ceAfHfu3MHkyZMRGBgoM+SsWbNm2LNnD9577z0VR1i7pKWlcc7SV9ixYwd27dqFUaNGSfd99NFHcHNzw+zZs9m4Joe/v7/cXkUODg7w9/cHUDJ0NCYmRtmh1WiZmZnS6TzK09bW5qJdcgwaNEg6x1p5Ffdx/rUyYrEYx48fh1gsRps2bQCUzP+alpYmzU8idcbGNaJyioqKcPz4cQQFBQEoGe44cOBAaGmxqtDbM2bMGIwZMwbZ2dnIzMyUDq+lVxOLxTh37hyuX78OPz8/ZGZmolWrVujZs6eqQ6uRbt26hRs3buD06dMvvcc/BuQLDAxEjx490KRJE/zyyy/SodqBgYHYtGkTevTogX///RdNmzZVcaQ1z9atW2VeSyQSxMTE4Oeff0afPn1UFFXNV1BQIP0jtLzWrVujsLBQBRHVfI0bN8batWvx008/SRuLCgoKsHbtWuliJFFRUfj/9u48Lub8jwP4ayZSqGQrcnSpEEXWTe4rVkuWliVybY60EbLrKtYtV9bxI8naHIvFrpVViZy7JEVRihwJ5SyJmt8f1qxRrFrNZ6Zez8djH2s+3/nj9ZhHNTPv7+fzflerVk1kTJVja2uL7du3F+h/uG3bNv5NK8ShQ4cwdepUzJs3T2FX6fTp0zFv3jx07dpVcELVU61aNQwYMABr166VT5/Ny8vD2LFjoauri8WLFwtOSFSyOC2U6G8XL16Ek5MT7ty5g7p16wL4p5fT/v370bBhQ8EJVYdUKsXmzZuhp6cH4FUPtuXLl8s/yD58+BBubm788k4kkJmZGT777DPMmDGDXzI/0IABA/Dy5Uvs2rWrwB12mUwGZ2dnlC9fXn40mf5hbm6u8FgqlcLQ0BCdOnXCtGnToKOjIyiZavPw8ED58uXh7++vsO7t7Y1nz55h9erVgpKprhMnTsDJyQlSqVR+XDs2NhZ5eXn49ddf0bJlS2zZsgV37tzB5MmTBadVHfv374ezszMGDRqETp06AQDCwsIQEhKCnTt3ok+fPmIDqpiGDRti7dq1aNu2rcL6sWPHMHr0aPmNePqHoaEhoqKi5N+jXrt8+TJat26NjIwMQcmIlIPFNaK/tWrVCoaGhti8eTP09fUBAA8ePMCwYcNw7949nDhxQnBC1VHYePK3cWdM4dLT0+Ht7Y2wsDDcvXu3wHEDvmbvFxYWJn/t8vPzFa4FBgYKSqWadHR0cP78edSpU0d0FLVhaGiI33//vdCdRMCribU9e/bEvXv3lJyMSisPDw8EBwejdu3aaNmyJQDg9OnTSE1Nhaurq8Jx7rcLcGXZkydPsHXrVnlfxLp162LQoEEs4v6L3377DfPmzcP58+ehra0NOzs7zJo1C+3btxcdTeVoa2vjzz//LHBz/cKFC2jRogWePXsmKJnq0tfXR1BQED7//HOF9b1792LYsGF48OCBoGREysHiGtHftLW18ddff6FBgwYK63FxcWjWrBnfROmjcHR0RGpqKsaPHw9jY+MCu2Pe/kBC//D19YWfnx+aNm1a6Gu3Z88eQclU09ChQ+Hg4MCJg0WgpaWFxMRE1K5du9DrN27cgJWVFXJycpScTPUNHz4cK1asKFDcyMrKgoeHB4vf79CxY8cPep5EIkF4eHgJp1Evly5dQmpqKnJzcxXW2U+SPoZ27dpBS0sLW7Zske/+Tk9Ph6urK3JychAZGSk4oeqZOHEigoOD8e2338on+Z4+fRoLFizAkCFDeIOASj02kiL6m7W1NdLT0wsU1+7evctpe/TRREVF4dixY2jcuLHoKGpn7dq1CAoK4tTBD2RtbY1p06YhKioKtra2BQYaTJgwQVAy1WVqaoozZ868s7h2+vTpQhupE7B582YsWLCgQHHt2bNnCA4OZnHtHSIiIkRHUDvJycno27cvYmNj5c3l37zZwh3g75ebm1vo7m8TExNBiVRTYGAg+vbtCxMTE/l7wusbLL/88ovYcCpqyZIlqF69OpYuXSofKGJsbIzJkydj0qRJgtMRlTzuXKMy7c3pSFFRUZgyZQpmz54tP5px6tQp+Pn5YcGCBejZs6eomCorPDwcu3fvxrVr1yCRSGBubo4vvvgC7dq1Ex1NZdnY2GDr1q2wt7cXHUXtfPLJJzhz5gyPOX6gt3tgvUkikSA5OVmJadTDrFmzEBQUhN9++63AUaDY2Fj07t0brq6unOD4hsePH0Mmk0FfXx+JiYkwNDSUX8vLy8P+/fvh4+OD27dvC0ypujZt2oQvv/wS2traoqOojd69e0NDQwMbNmyAubk5Tp8+jczMTEyaNAlLliyBg4OD6IgqKTExEcOHDy/Q5uR1cZJFyYJkMhn++OMPJCQkAADq16+PLl26cOrlB3j9HUtXV1dwEiLlYXGNyjSpVKrwBvn61+H12puP+aFDkbu7O9avXw99fX1YW1tDJpMhMTERDx8+xNixY7Fq1SrREVXSoUOHsHTpUqxbtw5mZmai46iVqVOnonLlypgxY4boKFRK5eTkoHPnzjh9+jS6du2K+vXrQyaTIT4+HocPH0bz5s0RHh4OLS0t0VFVxtvvo2+TSCTw9fXFd999p8RU6qNatWp49uwZ+vfvjxEjRqB169aiI6k8AwMDhIeHw87ODnp6ejhz5gzq1q2L8PBwTJo0CdHR0aIjqqQ2bdqgXLly8PHxKbS1QqNGjQQlUx8PHz5ElSpVRMdQWc+ePYNMJkPFihUBANevX8eePXtgY2ODbt26CU5HVPJ4LJTKNB7HKJ49e/Zg06ZNCAwMxNChQ+Uf0PLz8xEUFIQxY8aga9eu7HtSCBcXF2RnZ6NOnTqoWLFigaN6mZmZgpKpvpycHKxfvx6HDx+GnZ1dgdeOvTze7e0bB1Q4LS0tREREYNmyZQgJCZH31LG2tsbcuXPh5eWFChUqCE6pWiIiIiCTydCpUyfs2rULVatWlV/T1NSEqakpatSoITChart16xb279+PoKAgdOjQARYWFnBzc8PQoUNRvXp10fFUUl5envz4sYGBAW7fvo26devC1NQUly9fFpxOdZ0/fx5nz55FvXr1REdRCwsXLoSZmRlcXFwAvJomvWvXLlSvXh0HDhxgMbIQn3/+OZydneHu7o6HDx+iefPm0NTUxP379+Hv748xY8aIjkhUorhzjYiKzMnJCQ0aNMD8+fMLvT516lQkJCRg7969Sk6m+oKCgt5b4Bg6dKgS06iX9zX+ZrPvwgUHB2Px4sVITEwE8KpINHnyZPato4/u+vXrqF279gdNk6bCpaen48cff8TmzZuRkJCAHj16YMSIEejduzdf1zc4ODhg0qRJ6NOnDwYNGoQHDx5g+vTpWL9+Pc6ePYu4uDjREVVSs2bNsGzZMrRt21Z0FLVgbm6OrVu3onXr1vjjjz8wYMAAbN++HTt27EBqaioOHTokOqLKMTAwQGRkJBo0aIANGzZg1apViI6Oxq5duzBz5kzEx8eLjkhUorhzjegt2dnZhU6fsrOzE5RI9Zw7dw7Tp09/53VnZ2f069dPiYnUx7Bhw0RHUFvcaVo0/v7+mDFjBsaPH482bdoAeNVb0t3dHffv34eXl5fghFSavB70wPfQ4qtWrRratm2LK1eu4MqVK4iNjcXQoUOhr6+PTZs2oUOHDqIjqoTp06cjKysLAODn54fPPvsMDg4O+OSTT7B9+3bB6VTXwoULMWXKFMybN6/QITfsjaXozp078kEGv/76KwYMGIBu3brBzMwMLVq0EJxONWVnZ8t3lR46dAjOzs6QSqVo2bIlrl+/LjgdUcljcY3ob/fu3YObmxt+//33Qq+z59o/7t+/j1q1ar3zeq1atZCRkaHEROrD1dUVHTt2RLt27diYv4jCw8PRpk0bHsv7QKtWrcKaNWvg6uoqX3u963T27NksrhVCX1//g47O8vh2QXwPLb709HRs2bIFmzZtQnJyMvr06YNff/0VXbp0QVZWFvz8/DB06FB+Of1b9+7d5f+2tLREQkICMjMzP/j3t6zq0qULAKBz584K6xxoUDh9fX3cuHEDtWvXxsGDBzF37lwAr14vvlaFs7S0xC+//IK+ffsiNDRU/jnj7t27LN5SmcDiGtHfvvnmGzx8+BCnT59Ghw4dsGfPHqSnp2Pu3LlYunSp6HgqJTc3t8AdzzeVK1euwK4FekVTUxPz58/HiBEjULNmTbRv3x4dOnRA+/btYWVlJTqeSnNycsLLly/RrFkz+WvWpk0bTtl7h7S0tEKbo7du3RppaWkCEqm+5cuXi46gtvgeWjy9e/dGaGgorK2tMWrUKLi6uir0ratUqRImTZqExYsXC0yp+t58zahw3P1dNM7Ozhg0aBCsrKyQkZEBR0dHAEB0dDQsLS0Fp1NNM2fOxKBBg+Dl5YXOnTujVatWAF7tYrO3txecjqjkseca0d+MjY2xd+9eNG/eHLq6uvjrr79gbW2Nffv2YdGiRYiKihIdUWVIpVKMHj1aPg3obdnZ2fjf//7HO3vvcevWLRw9ehSRkZGIjIzElStXYGxsjJs3b4qOprJevHiBM2fOyF+zEydOIDc3F02bNkXHjh3ld5XplYYNG2LQoEH49ttvFdbnzp2L7du3IzY2VlAy1XX06FG0bt0a5crx3mNR8T20eEaMGIGRI0fKv4QWRiaTITU1VX70lohK3osXL7BixQrcuHEDw4YNkxeHli1bBh0dHYwcOVJwQtV0584dpKWloVGjRvJekWfOnIGurq58mMbNmzdRo0YN9pKkUofFNaK/6erq4sKFCzAzM4OpqSl++ukntGnTBikpKWjQoAGys7NFR1QZHTp0+KCjF7xL+m7Z2dmIiopCREQEjhw5gnPnzsHGxgbR0dGio6mNixcvYvHixdi6dSvy8/NZzH3Lrl274OLigi5dush7rh0/fhxhYWHYsWMH+vbtKzih6tHQ0EBaWhqMjIxER1E7fA8tnuDgYLi4uBQ47p6bm4tt27YpHOsm+q+OHTuGdevWITk5GTt37kTNmjWxZcsWmJubc9BBMfXq1QsbNmyAsbGx6ChqQ1dXF+fPn4eFhYXoKEQfFW/NEv2tbt26uHz5MszMzNCoUSOsW7cOZmZmWLt2Ld8w33LkyBHREdTWt99+iyNHjiA6Ohr169dH+/bt4ePjg3bt2kFfX190PJV25coVHDlyBEeOHEFkZCSeP38OBwcHLFmyhI2+C9GvXz+cPn0ay5Ytwy+//AIAqF+/Ps6cOcPjGe/A+43Fx/fQ4nFzc0OPHj0KFHSfPHkCNzc3Ftfoo9m1axeGDBmCr776CufOncPz588BAI8ePcK8efNw4MABwQnV09GjR/Hs2TPRMdQK32uptOLONaK//fjjj3j58iWGDRuGs2fPokePHsjIyICmpiY2b94MFxcX0RGpFJBKpTA0NISXlxecnZ1hbW0tOpLaeP3aeXp64rPPPoOtrS2bV9NHJZVKkZ6eDkNDQ9FR1E5h76GZmZnQ1NREUFAQ30Pf4V0/czExMejYsSOHZ9BHY29vDy8vL7i6ukJHRwcxMTGwsLBAdHQ0HB0dcefOHdER1dKbryV9GL5mVFqxuEb0DtnZ2UhISICJiQkMDAxEx1Epfn5+H/S8mTNnlnAS9RMTE4PIyEgcOXIEx44dg6ampnyoQYcOHVhse49vvvkGR48exaVLl9CkSRP5a9a2bdt39v8ryw4cOAANDQ2FyXoAEBoaivz8fHlzZvqHVCqFo6Pjv06k3b17t5ISqS++h76fvb09JBIJYmJi0KBBA4U+f3l5eUhJSUGPHj2wY8cOgSmpNKlYsSIuXboEMzMzheJGcnIybGxskJOTIzqiWmKhqOj4mlFpxWOhVKZNnDjxg5/r7+9fgknUy549e955TSKR4PLly8jJyWFxrRCNGjVCo0aNMGHCBACvim3Lli3DuHHj2DfsX7ye5Pjw4UMcO3YMkZGR+O6773Dx4kXY29vj+PHjYgOqGB8fHyxYsKDAukwmg4+PD4tr76Cjo8MJtMXg5+cHb29veaG7YsWKaNKkCZ49ewY/Pz++H7ylT58+AIDz58+je/fuqFy5svyapqYmzMzM0K9fP0HpqDSqXr06kpKSYGZmprAeFRXFIgcR0UfA4hqVaR/aPJ5HzxS963U7f/48fHx8EBcXh1GjRik5lXqQyWSIjo6W9w6LiorC48ePYWdnh/bt24uOpxby8vLw4sULPH/+HDk5OXj+/DkuX74sOpbKSUxMhI2NTYH1evXqISkpSUAi9bBy5UoONCgGX19fuLu7F9hFmp2dDV9fXxbX3jJr1iwAgJmZGVxcXKClpfXe54eEhMDJyQmVKlVSRjwqhUaNGgVPT08EBgZCIpHg9u3bOHnyJLy9vTFjxgzR8agM4fcqKq1YXKMyjdMsP46UlBTMmDED27dvh7OzMy5evAgrKyvRsVRS1apV8fTpUzRq1Ajt27fHqFGj4ODggCpVqoiOpvImTJiAI0eO4NKlS9DX10e7du0watQodOjQAba2tqLjqRw9PT0kJycX2KWQlJTEL+jvwA/8xSeTyQp9/WJiYlC1alUBidTD0KFDP+h5X3/9NVq0aMEdRlRsPj4+yM/PR+fOnZGdnY127dqhQoUK8Pb2hoeHh+h4VIawKxWVViyuEVGx3b9/H76+vli/fj3atm2LEydOoFmzZqJjqbQff/wRDg4O0NXVFR1F7aSlpWH06NHo0KEDGjZsKDqOyvv888/xzTffYM+ePahTpw6AV4W1SZMmwcnJSXA61fRvH/jj4+OxceNGLFmyREmJVJ++vj4kEgkkEgmsra0VCmx5eXl4+vQp3N3dBSYsHfhllP4riUSC7777DpMnT0ZSUhKePn0KGxsbhSPJVHTffvstbyC8JSkpCVevXkW7du2gra1d4ObLpUuXUKNGDYEJiUoGBxoQUZFlZWVhyZIl8Pf3h6WlJebPn49u3bqJjqU2Hj58KD+WZ2lpyV1rVCIePXqEHj164K+//kKtWrUAADdv3oSDgwN2797Nn7tCREZGok2bNgrN5bOysrBt2zZs3LgRp06dgo2NDeLi4gSmVC2bN2+GTCbD8OHDsXz5cujp6cmvve4d1qpVK4EJSwc2ACcS49KlS0hNTUVubq7COm9SFZSRkQEXFxeEh4dDIpEgMTERFhYWGD58OPT19bF06VLREYlKFItrRFRk1atXx5MnT+Dh4YGBAwe+8yiVnZ2dkpOptmvXrmHcuHEIDQ2V70KQSCTo0aMHAgICChzfI0U7d+5ESEgIrly5AgCwtrbGoEGD8MUXXwhOprpkMhn++OMPxMTEQFtbG3Z2dmjXrp3oWGrh+PHj2LhxI3bs2IFnz57By8sLI0eORL169URHU0mFFSbp42FxjYrD2dkZQUFB0NXVhbOz83ufyynIipKTk9G3b1/ExsZCIpEofG4DwAFUhXB1dcXdu3exYcMG1K9fX/43KzQ0FBMnTsTFixdFRyQqUfwERERFdvfuXQDAokWLsHjxYoXjKq8/gEgkEn7weMONGzfQsmVLlC9fHnPmzEH9+vUBvLojumbNGrRq1Qp//vmnfIcR/SM/Px8DBw7Ezp07YW1tLS9uXLx4ES4uLujfvz9CQkLYL6sQEokE3bp1487SD3T37l0EBQUhMDAQjx49wsCBA3HkyBG0atUKw4cPZ2HtPXR0dBAfHy/vf7h3715s2rQJNjY2mD17NjQ1NQUnJCp79PT05O+Nb+4qpX/n6ekJc3NzhIWFwdzcHGfOnEFGRgYmTZrE1gDvcOjQIYSGhhb4LGtlZYXr168LSkWkPCyuEVGRpaSkiI6gdmbPno26desiNDRUYSpcnz594OXlhR49emD27NnYsGGDwJSqacWKFTh8+DD27duHzz77TOHavn374ObmhhUrVuCbb74RE1CFhYWFISwsDHfv3kV+fr7CtcDAQEGpVJepqSm++OILrFixAl27doVUKhUdSW18/fXX8PHxga2tLZKTk+Hi4gJnZ2fs3LkT2dnZWL58ueiIRGXOpk2bALzaxezr6wtDQ0Noa2sLTqUeTp48ifDwcBgYGEAqlUIqlaJt27aYP38+JkyYgOjoaNERVU5WVlaBidEAkJmZiQoVKghIRKRc/NRIREVmamr6Qf/RPw4ePIjvv/9eobD2mra2NubMmYMDBw4ISKb6Nm3ahMWLFxcorAGvep4sWrSIhaJC+Pr6olu3bggLC8P9+/fx4MEDhf+oIFNTU0RFReHo0aPy48f0Ya5cuYLGjRsDeHWEu3379vjpp58QFBSEXbt2iQ1XCpiamqJ8+fKiY5CakslksLS0xM2bN0VHURt5eXnQ0dEBABgYGOD27dsAXv0uXr58WWQ0leXg4IDg4GD5Y4lEgvz8fCxatAgdO3YUmIxIObhzjYiKbNGiRfDw8JDf/Tx+/DiaNm0qvyv15MkTTJ06FT/88IPImCrl/v377+2pZmFhgczMTOUFUiOJiYno0qXLO6936dIF48ePV2Ii9bB27VoEBQVhyJAhoqOojYSEBHmvtWbNmsHa2hqDBw8GAB47/hcymUy+O/Lw4cPyYnjt2rVx//59kdFKBQ7RoP9CKpXCysoKGRkZsLKyEh1HLTRs2BAxMTEwNzdHixYtsGjRImhqamL9+vXsffgOixYtQufOnfHXX38hNzcXU6ZMwcWLF5GZmYnjx4+LjkdU4rhzjYiKbNq0aXjy5In8saOjI27duiV/nJ2djXXr1omIprKMjY1x6dKld16Pi4tD9erVlZhIfWhra+Phw4fvvP748eNCdwSWdbm5uWjdurXoGGqnTZs2CAwMRFpaGtzd3bFz507k5eVh7Nix+N///od79+6JjqiSmjZtirlz52LLli2IjIxEr169ALxqI1CtWjXB6VSXvr4+qlatWuC/Tz75BDVr1kT79u3lR/uI/osFCxZg8uTJLNS+x4ULF+Q3CaZPny7vKezn54eUlBQ4ODjgwIEDWLlypciYKqthw4a4cuUK2rZti88//xxZWVlwdnZGdHQ06tSpIzoeUYnjtFAiKjKpVIo7d+7AyMgIQMEpZunp6ahRowYHGrzhm2++QXh4OMLCwmBoaKhw7e7du+jatSs6duzIvkSF6NWrF0xMTLBmzZpCr7u7uyM1NZXHat8ydepUVK5cGTNmzBAdRe3Fx8dj48aN2LJlCzIzM/HixQvRkVTOhQsX8NVXXyE1NRUTJ07ErFmzAAAeHh7IyMjATz/9JDihalq2bBm+//57ODo6onnz5gCAM2fO4ODBg/Dy8kJKSgq2bNmCVatWYdSoUYLTkjrT19dHdnY2Xr58CU1NzQK917h7HtDQ0EBaWhqMjIxgYWGBP//8E5988on8emZmJvT19bmTmYgKxeIaERUZi2tF9+DBA7Ro0QJ37tzB4MGDUa9ePchkMsTHx+Onn35C9erVcerUKVStWlV0VJVz4sQJdOjQAX369IG3t7fCa7d06VLs3bsXERERaNOmjeioKsXT0xPBwcGws7ODnZ1dgX5N/v7+gpKpr5cvX2Lfvn1wdnYWHUVt5OTkQENDQ/7zFxISAicnJ1SqVElwMtXQr18/dO3aFe7u7grr69atw6FDh7Br1y6sWrUK69evR2xsrKCUVBps3rz5vdeHDh2qpCSq65NPPsGBAwfQokULSKVSpKenF7ghSu+Xk5ODCxcuFDpIycnJSVAqIuVgcY2IiozFteJ58OABvv32W2zfvl1+zLFKlSoYMGAA5s2bx8Lae+zZswejR48ucGddX18f69atQ79+/QQlU13vax4skUgQHh6uxDTq4fbt2/D398fMmTOhq6urcO3Ro0eYO3cuvL29eczxP9DV1cX58+fZs+hvlStXxvnz52FpaamwnpSUhMaNG+Pp06e4evUq7OzskJWVJSglUdkwevRoBAcHw9jYGKmpqahVqxY0NDQKfW5ycrKS06m+gwcPwtXVtdA+mxKJhN8LqNTjQAMiKpYNGzagcuXKAF7t5ggKCoKBgQEAKPRjo3/o6+tjzZo1+OGHH+R9mwwNDQs9XvD2kIiyrm/fvujevTtCQ0ORmJgIALC2tka3bt0KHftOQEREhOgIasff3x+PHz8uUFgDAD09PTx58gT+/v5YuHChgHSlA+/pKqpatSr2798PLy8vhfX9+/fLb7hkZWXJpxYS/RdXr17Fpk2bcPXqVaxYsQJGRkb4/fffYWJiggYNGoiOJ9z69evh7OyMpKQkTJgwAaNGjeLvXhF4eHigf//+mDlzJm9CUZnEnWtEVGRmZmYf1G8iJSVFCWlKJ+7uKD5bW1scOHAAtWvXFh2F1EzDhg2xdu1atG3bttDrJ06cwKhRo3Dx4kUlJys93t7pXNb973//w5gxY9CzZ095z7U///wTBw4cwNq1azFixAgsXboUZ86cwfbt2wWnJXUWGRkJR0dHtGnTBkePHkV8fDwsLCywYMEC/PXXX/j5559FR1Qpbm5uWLlyJYtrRaCrq8vhBVSmcecaERXZtWvXREco9Xjfo/iuXbtWphvOf2g/sN27d5dwEvWTkpICExOTd16vVasW//7RRzVq1CjY2NggICBA/jtZt25dREZGyqf9Tpo0SWREKiV8fHwwd+5cTJw4UaFg1KlTJwQEBAhMppo4pbfovvjiCxw5coTFNSqzWFwjoiLLycnB4cOH8dlnnwEApk2bhufPn8uvlytXDn5+ftDS0hIVkajM0tPTEx1BbWlra+PatWvvLLBdu3atwIQ9ov+qTZs2HMhCJS42NrbQqb1GRkaF9sgiKqqAgAD0798fx44dg62tbYFBShMmTBCUjEg5WFwjoiILCgrCb7/9Ji+uBQQEoEGDBvIvnQkJCahevTomTpwoMiZRmVTUu+03b95EjRo1IJVKSyiR+mjRogW2bNmCdu3aFXo9ODhYfnSP6GPJz89HUlJSodP13vWzSFRUVapUQVpaGszNzRXWo6OjUbNmTUGpqDQJCQnBoUOHoKWlhSNHjii0kJFIJCyuUanH4hoRFdnWrVsxZcoUhbWffvpJ3kPnxx9/xOrVq1lcI1IDNjY27O/3N29vb3Tt2hV6enqYPHmyvCFzeno6Fi1ahKCgIBw6dEhwSvVmampaYDdDWXbq1CkMGjQI169fL9AOgNP16GP68ssvMXXqVOzcuRMSiQT5+fk4fvw4vL294erqKjoelQLfffcdfH194ePjwxt2VCaxuEZERZaUlARbW1v5Yy0tLYU30ebNm2PcuHEiopUaHzIwguhjYH+/f3Ts2BGrV6+Gp6cnli1bBl1dXUgkEjx69Ajly5fHqlWr0KlTJ9Ex1VpcXJzoCCrF3d0dTZs2xW+//QZjY2P+7acSM2/ePIwbNw61a9dGXl4ebGxskJeXh0GDBmH69Omi41EpkJubCxcXFxbWqMzitFAiKjJtbW2cP38edevWLfR6QkICGjdujJycHCUnU20ymQw3btyAkZHRv/aj40S94uNrVzR8vQq6desWduzYgaSkJMhkMlhbW+OLL75ArVq1REdTKfr6+h9cDMrMzCzhNOqpUqVKiImJgaWlpegoVEakpqYiLi4OT58+hb29PaysrERHolLCy8sLhoaG+Pbbb0VHIRKCO9eIqMhq1aqFuLi4dxbXLly4wC+hhZDJZLC0tMTFixf/9cPskydPlJRKfQQHB8PFxQUVKlRQWM/NzcW2bdvkx1rWrVsnP85HVBw1a9aEl5eX6Bgqb/ny5aIjqL0WLVogKSmJxTVSGhMTE9SuXRsAd8nTx5WXl4dFixYhNDQUdnZ2BVoA+Pv7C0pGpBzcuUZERebp6YnDhw/j7NmzBXZgPXv2DE2bNkWXLl2wYsUKQQlVV4MGDbBx40a0bNlSdBS1o6GhgbS0NBgZGSmsZ2RkwMjIiL2Jiok71/6xcuXKQtf19PRgbW2NVq1aKTkRlXZ79uzB9OnTMXny5EKn69nZ2QlKRqXRxo0bsWzZMiQmJgIArKys8M0332DkyJGCk1Fp0LFjx3dek0gkCA8PV2IaIuVjcY2Iiiw9PR2NGzeGpqYmxo8fD2trawDA5cuXERAQgJcvXyI6Opq7hwqxf/9+LFq0CGvWrEHDhg1Fx1ErUqkU6enpMDQ0VFiPiYlBx44deeysmHR1dTnQ4G9vT9F77eHDh3j06BFat26Nffv2oWrVqkpOpl5ycnKQm5ursKarqysojWorrDeRRCKBTCbjQAP6qGbOnAl/f394eHjIbxScPHkSAQEB8PLygp+fn+CERETqjcU1IiqWlJQUjBkzBn/88Ye8IbpEIkHXrl3xww8/8Iv6O+jr6yM7OxsvX76EpqYmtLW1Fa6zQFSQvb09JBIJYmJi0KBBA5Qr909Hg7y8PKSkpKBHjx7YsWOHwJTqizvXPkxycjIGDx6Mxo0b44cffhAdR+VkZWVh6tSp2LFjBzIyMgpcZ5GocNevX3/vdVNTUyUlodLO0NAQK1euxMCBAxXWQ0JC4OHhgfv37wtKRqXRzZs3AYBtYqhMYc81IioWc3NzHDx4EJmZmUhKSgIAWFpackfHv2CPoqLr06cPAOD8+fPo3r07KleuLL+mqakJMzMz9OvXT1A61ZeUlISrV6+iXbt20NbWlu+Iee3SpUuoUaOGwITqwcLCAgsWLMDw4cNFR1FJU6ZMQUREBNasWYMhQ4Zg9erVuHXrFtatW4cFCxaIjqeyWDwjZXnx4gWaNm1aYP3TTz/Fy5cvBSSi0iY/Px9z587F0qVL8fTpUwCvbuBNmjQJ3333HaeIUqnHnWtERKTy8vLy8OOPP6Jbt24wNjYWHUctZGRkwMXFBeHh4ZBIJEhMTISFhQWGDx8OfX19LF26VHREtXPt2jU0bNhQ/qWB/mFiYoLg4GB06NABurq6OHfuHCwtLbFlyxaEhITgwIEDoiOqjH379sHR0RHly5fHvn373vtcJycnJaWi0s7DwwPly5cv0FTe29sbz549w+rVqwUlo9Ji2rRp2LhxI3x9fdGmTRsAQFRUFGbPno1Ro0bh+++/F5yQqGSxuEZEJAj7EhWNlpYW4uPj39kXixS5urri7t272LBhA+rXry8/+hkaGoqJEyfi4sWLoiOqnf3798PHx4evXSEqV66MS5cuwcTEBLVq1cLu3bvRvHlzpKSkwNbWlgXJN0ilUty5cwdGRkbv3cnBnmv0MXl4eCA4OBi1a9eWD1U6ffo0UlNT4erqqjBMg1MdqThq1KiBtWvXFrgpsHfvXowdOxa3bt0SlIxIOXgslIhIidiXqPgaNmyI5ORkFtc+0KFDhxAaGlqg34mVldW/9nkqqx4/flzo+qNHj3D27FlMmjQJQ4cOVXIq9WBhYYGUlBSYmJigXr162LFjB5o3b479+/ejSpUqouOplPz8/EL/TVSS4uLi0KRJEwDA1atXAQAGBgYwMDBAXFyc/Hlvtg0gKorMzEzUq1evwHq9evXYU5jKBBbXiIiUiH2Jim/u3Lnw9vbGnDlz8Omnn6JSpUoK17nrT1FWVhYqVqxYYD0zMxMVKlQQkEj1ValS5Z1fLCUSCUaOHAkfHx8lp1IPbm5uiImJQfv27eHj44PevXsjICAAL1684C6YInr48CELkvTRRUREiI5ApVyjRo0QEBCAlStXKqwHBASgUaNGglIRKQ+PhRIRKRH7EhXfm8en3iyAvG7Qz11/inr27IlPP/0Uc+bMgY6ODi5cuABTU1N8+eWXyM/Px88//yw6osqJjIwsdF1XVxdWVlYKwzTo/a5fv46zZ8/C0tISdnZ2ouOorIULF8LMzAwuLi4AgP79+2PXrl0wNjbGgQMH+IWUPpp79+7B0NCw0GuxsbGwtbVVciIqbSIjI9GrVy+YmJigVatWAICTJ0/ixo0bOHDgABwcHAQnJCpZLK4RESkR+xIV37sKH6+1b99eSUnUQ1xcHDp37owmTZogPDwcTk5OuHjxIjIzM3H8+HHUqVNHdEQqRYKDg+Hi4lJgV2Rubi62bdsGV1dXQclUm7m5ObZu3YrWrVvjjz/+wIABA7B9+3bs2LEDqampOHTokOiIVEpUr14dGzduRK9evRTWlyxZghkzZuDZs2eCklFpcuvWLfzwww9ISEgAANSvXx9jx47lVHIqE1hcIyJSIjs7O6xatQrt27dHly5d0LhxYyxZsgQrV67EokWLcPPmTdERqRR59OgRAgICEBMTg6dPn6JJkyYYN24cJ67+i8TEROzduxfXrl2DRCKBubk5+vTpAwsLC9HRVJaGhgbS0tJgZGSksJ6RkQEjIyPuLH0HbW1tXLlyBbVr14anpydycnKwbt06XLlyBS1atMCDBw9ER6RSYtGiRZg5cybc3Nzg7++PzMxMuLq6IjY2FuvWrUPfvn1FRyQiUmssrhERKdGyZcugoaGBCRMm4PDhw+jduzdkMhlyc3OxbNkyeHp6io6o0o4dO4Z169YhOTkZO3fuRM2aNbFlyxaYm5ujbdu2ouNRKTB//nzMnDkT+fn5MDIygkwmw71796ChoYF58+bB29tbdESVJJVKkZ6eXuDYWUxMDDp27Mhm1u9Qo0YN/Pzzz2jdujXq1q2LuXPnon///rh8+TKaNWv2ziEbRMURHR2NIUOG4Pnz58jMzESLFi0QGBiI6tWri45GpcCmTZtQuXJl9O/fX2F9586dyM7O5kAgKvU40ICISIm8vLzk/+7SpQsSEhJw9uxZWFlZsd/Jv9i1axeGDBmCr776CufOncPz588BvNqdNW/ePParK8SDBw+wceNGxMfHAwBsbGzg5uaGqlWrCk6mmiIiIjB9+nTMmDEDnp6e0NfXB/BqCMTy5cvh4+OD5s2bo127doKTqg57e3tIJBJIJBJ07twZ5cr989EyLy8PKSkp6NGjh8CEqs3Z2RmDBg2ClZUVMjIy4OjoCOBVEcTS0lJwOiptLC0t0bBhQ+zatQsA4OLiwsIafTTz58/HunXrCqwbGRlh9OjRLK5Rqceda0REShAeHo7x48fj1KlTBaZaPnr0CK1bt8batWvZ7PU97O3t4eXlBVdXV+jo6CAmJgYWFhaIjo6Go6Mj7ty5IzqiSjl69Ch69+4NPT09NG3aFABw9uxZPHz4EPv372eBqBAuLi6oUqVKoV8OAGD06NF48uQJQkJClJxMdfn6+sr/P2nSJIWhD5qamjAzM0O/fv2gqakpKqJKe/HiBVasWIEbN25g2LBhsLe3B/Bql7OOjg5GjhwpOCGVFsePH8fgwYNRtWpV/Pjjjzh+/DgmTpwIR0dHrF27Vn4zgai4tLS0kJCQADMzM4X1a9euoX79+uzrR6Uei2tERErg5OSEjh07Kuxce9PKlSsRERGBPXv2KDmZ+qhYsSIuXboEMzMzheJacnIybGxskJOTIzqiSrG1tUWrVq2wZs0aaGhoAHi1k2js2LE4ceIEYmNjBSdUPebm5tiyZcs7jxgfO3YMrq6uSElJUXIy1bd582a4uLhAS0tLdBQiKkSFChXg5eWFOXPmoHz58gCAq1evYvDgwbhx4wZ7vtJ/ZmJigoCAADg5OSms7927F+PGjePPGJV6PBZKRKQEMTExWLhw4Tuvd+vWDUuWLFFiIvVTvXp1JCUlFbgjGhUVxUbzhUhKSsLPP/8sL6wBr5rOT5w4EcHBwQKTqa709PQCP19vMjc35w7Jd+Bxn+L5t99FTlmlj+XQoUMFpmrXqVMHx48fx/fffy8oFZUmAwcOxIQJE6CjoyPfHR8ZGQlPT098+eWXgtMRlTwW14iIlCA9PV1+p7gw5cqVw71795SYSP2MGjUKnp6eCAwMhEQiwe3bt3Hy5El4e3tjxowZouOpnCZNmiA+Ph5169ZVWI+Pj0ejRo0EpVJtOTk57z2+WL58eeTm5ioxkWqrWrUqrly5AgMDA+jr60MikbzzuRxoULi3h9i8ePEC2dnZ0NTURMWKFVlco/+sZ8+eCAkJkRfWFixYAHd3d1SpUgXAq96cISEhfB+l/2zOnDm4du2aQv/N/Px8uLq6Yt68eYLTEZU8FteIiJSgZs2aiIuLe2eD6gsXLsDY2FjJqdSLj48P8vPz0blzZ2RnZ6Ndu3aoUKECvL294eHhITqeypkwYQI8PT2RlJSEli1bAgBOnTqF1atXY8GCBbhw4YL8uXZ2dqJiqpwNGzYo9A1705MnT5ScRrW97gsGAMuXLxcbRk09ePCgwFpiYiLGjBmDyZMnC0hEpU1oaKh8ABAAzJs3DwMGDJAX116+fInLly8LSkeliaamJrZv3445c+YgJiYG2trasLW1hampqehoRErBnmtERErg4eGBI0eO4M8//yzQk+jZs2do3rw5OnbsiJUrVwpKqD5yc3ORlJSEp0+fwsbG5p2FkLJOKpW+97pEIoFMJoNEIkFeXp6SUqk2MzOz9+6+eo091xS9fPkSP/30E7p3745q1aqJjlMq/PXXXxg8eDASEhJERyE1J5VKcefOHRgZGQGAQs9S4NXO+ho1avB9gIjoP+LONSIiJZg+fTp2794Na2trjB8/Xn5ULyEhAatXr0ZeXh6+++47wSnVg6amJnR0dKCjo8PC2nuwAFR0165dEx1BLZUrVw7u7u6Ij48XHaXUKFeuHG7fvi06BhHRB8vLy0NQUBDCwsJw9+5d5OfnK1wPDw8XlIxIOVhcIyJSgmrVquHEiRMYM2YMpk2bhtebhiUSCbp3747Vq1dzx8e/ePnyJXx9fbFy5Uo8ffoUAFC5cmV4eHhg1qxZ7+1pVxYZGBigUqVKomOolde9ifT09AAU7E2UkZEBBwcHXLp0SWBK1dS8eXNER0fz+E8R7du3T+GxTCZDWloaAgIC0KZNG0GpqDSRSCQFduR+yA5doqLy9PREUFAQevXqhYYNG/LnjMocHgslIlKyBw8eICkpCTKZDFZWVtDX1xcdSS2MGTMGu3fvhp+fH1q1agUAOHnyJGbPno0+ffpgzZo1ghOqlsqVK2PAgAEYPnw42rZtKzqOWnj7+JSuri7Onz/P41MfYMeOHZg2bRq8vLzw6aefFijssq9f4d4+vi2RSGBoaIhOnTph6dKl7MVJ/5lUKoWjoyMqVKgAANi/fz86deok/x19/vw5Dh48yL9r9J8ZGBggODgYPXv2FB2FSAgW14iISC3o6elh27ZtcHR0VFg/cOAABg4ciEePHglKppp++eUXBAUF4cCBAzAzM8Pw4cPh6uqKGjVqiI6mstibqPgK6/HHvn5E4rm5uX3Q8zZt2lTCSai0q1GjBo4cOQJra2vRUYiEYHGNiIjUgpGRESIjI1G/fn2F9fj4eLRr1w737t0TlEy13bt3D1u2bEFQUBDi4+PRvXt3DB8+HE5OTihXjt0h3sTiWvFdv379vdd5XPTfvdkugIhI3SxduhTJyckICAjg3zEqk1hcIyIiteDn54eEhARs2rRJfrzl+fPnGDFiBKysrDBr1izBCVXfqlWrMHnyZOTm5sLAwADu7u7w8fFBxYoVRUdTCRoaGrhz5w4MDQ0BvCquXbhwAebm5gBYXKOSERwcjMWLFyMxMREAYG1tjcmTJ2PIkCGCkxERfbi+ffsiIiICVatWRYMGDQr0wt29e7egZETKwVvWRESkFqKjoxEWFoZatWqhUaNGAICYmBjk5uaic+fOcHZ2lj+XH+D+kZ6ejs2bNyMoKAjXr1/HF198gREjRuDmzZtYuHAhTp06hUOHDomOqRJkMhmGDRsmL97m5OTA3d1doTcRvd+lS5eQmpqK3NxchXUnJydBiVSbv78/ZsyYgfHjx8sHGERFRcHd3R3379+Hl5eX4IRERB+mSpUq6Nu3r+gYRMJw5xoREamFD+0bA5Tt3jF+fn7w9vbGwYMHsWnTJoSGhsLGxgYjR47E4MGD5ZMvAeDq1auoX79+gUJIWcXeRMWXnJyMvn37IjY2Vt5rDfjniCN3+xXO3Nwcvr6+cHV1VVjfvHkzZs+ejZSUFEHJiIiIqChYXCMiIipFNDQ0kJaWBisrK3z55ZcYOXIkmjVrVuhznz17hkWLFvFILf1nvXv3hoaGBjZs2ABzc3OcOXMGGRkZmDRpEpYsWQIHBwfREVWSlpYW4uLiYGlpqbCemJgIW1tb5OTkCEpGRERERcFjoUREpFbu3buHy5cvAwDq1q0r749Fr7y+Z5aWlvavvdS0tbVZWKOP4uTJkwgPD4eBgQGkUimkUinatm2L+fPnY8KECYiOjhYdUSVZWlpix44d+PbbbxXWt2/fDisrK0GpiIg+TJMmTRAWFgZ9fX3Y29u/d5DBuXPnlJiMSPlYXCMiIrWQlZUFDw8PBAcHIz8/H8CrXVqurq5YtWoVm/K/QSKR8PUgpcrLy4OOjg4AwMDAALdv30bdunVhamoqL4ZTQb6+vnBxccHRo0flPdeOHz+OsLAw7NixQ3A6IqL3+/zzz+V9Svv06SM2DJFgPBZKRERq4euvv8bhw4cREBCg0Ph7woQJ6Nq1K9asWSM4oWqQSqXQ09N7791jAMjMzFRSIioLHBwcMGnSJPTp0weDBg3CgwcPMH36dKxfvx5nz55FXFyc6Igq6+zZs1i2bBni4+MBAPXr18ekSZNgb28vOBkR0ccXEhICJycn+bAgotKCxTUiIlILBgYG+Pnnn9GhQweF9YiICAwYMAD37t0TE0zFSKVSLF++HHp6eu993tChQ5WUiMqC0NBQZGVlwdnZGYmJiejduzeuXLmCTz75BNu2bUPnzp1FR1Qpjx8//qDn6erqlnASIiLl0tXVxfnz52FhYSE6CtFHxWOhRESkFrKzs1GtWrUC60ZGRsjOzhaQSHV9+eWXMDIyEh2DypDu3bvL/21lZYWEhARkZmZCX1//X3dRlkVVqlT5oNeFU1aJqLTh3h4qrVhcIyIitdCqVSvMmjULwcHB0NLSAvBq2qWvry9atWolOJ3qYCGDlGn48OEf9LzAwMASTqJeIiIi5P+WyWTo2bMnNmzYgJo1awpMRURERMXF4hoREamF5cuXo0ePHqhVqxYaNWoEAIiJiYGWlhZCQ0MFp1MdvCNMyhQUFARTU1PY29vzZ68I2rdvr/BYQ0MDLVu25DEpIiIiNcXiGhERqQVbW1skJiZi69atSEhIAAAMHDgQX331FbS1tQWnUx2vJ6kSKcOYMWMQEhKClJQUuLm5YfDgwahataroWERERERKxYEGRESk8l68eIF69erh119/Rf369UXHIaI3PH/+HLt370ZgYCBOnDiBXr16YcSIEejWrRuPKX8gHR0dxMTEcOcaEZV6/HtHpZVUdAAiIqJ/U758eeTk5IiOQUSFqFChAgYOHIg//vgDly5dQoMGDTB27FiYmZnh6dOnouOpDRYiiagsMDU1Rfny5UXHIProeCyUiIjUwrhx47Bw4UJs2LAB5crx7YtIFUmlUkgkEshkMk66fA9nZ2eFxzk5OXB3d0elSpUU1nfv3q3MWEREJS4uLk50BKISwW8nRESkFv7880+EhYXh0KFDsLW15ZdQIhXx5rHQqKgofPbZZwgICECPHj0glfKQRGH09PQUHg8ePFhQEiKi4tPX1//gXbeZmZklnIZILBbXiIhILVSpUgX9+vUTHYOI3jB27Fhs27YNtWvXxvDhwxESEgIDAwPRsVTepk2bREcgIvrPli9fLjoCkcrgQAMiIlJp+fn5WLx4Mfbt24fc3Fx06tQJs2fP5oRQIhUglUphYmICe3v79+5e4M5SIiIiKs24c42IiFTa999/j9mzZ6NLly7Q1tbGypUrce/ePQQGBoqORlTmubq6shE/EREpyMnJQW5ursKarq6uoDREysGda0REpNKsrKzg7e2Nr7/+GgBw+PBh9OrVC8+ePWM/JyIiIiIVkJWVhalTp2LHjh3IyMgocJ1Dbqi047cSIiJSaampqejZs6f8cZcuXSCRSHD79m2BqYiIiIjotSlTpiA8PBxr1qxBhQoVsGHDBvj6+qJGjRoIDg4WHY+oxPFYKBERqbSXL19CS0tLYa18+fJ48eKFoERERERE9Kb9+/cjODgYHTp0gJubGxwcHGBpaQlTU1Ns3boVX331leiIRCWKxTUiIlJpMpkMw4YNQ4UKFeRrOTk5cHd3R6VKleRrbJhOREREJEZmZiYsLCwAvOqvlpmZCQBo27YtxowZIzIakVKwuEZERCpt6NChBdYGDx4sIAkRERERFcbCwgIpKSkwMTFBvXr1sGPHDjRv3hz79+9HlSpVRMcjKnEcaEBERERERERExbZs2TJoaGhgwoQJOHz4MHr37g2ZTIYXL17A398fnp6eoiMSlSgW14iIiIiIiIjoo7l+/TrOnj0LS0tL2NnZiY5DVOJYXCMiIiIiIiIiIiom9lwjIiIiIiIiomLz8/N77/WZM2cqKQmRGNy5RkRERERERETFZm9vr/D4xYsXSElJQbly5VCnTh2cO3dOUDIi5eDONSIiIiIiIiIqtujo6AJrjx8/xrBhw9C3b18BiYiUizvXiIiIiIiIiOiji42NRe/evXHt2jXRUYhKlFR0ACIiIiIiIiIqfR49eoRHjx6JjkFU4ngslIiIiIiIiIiKbeXKlQqPZTIZ0tLSsGXLFjg6OgpKRaQ8PBZKRERERERERMVmbm6u8FgqlcLQ0BCdOnXCtGnToKOjIygZkXKwuEZERERERERERFRM7LlGRERERERERERUTOy5RkRERERERETFlpWVhQULFiAsLAx3795Ffn6+wvXk5GRByYiUg8U1IiIiIiIiIiq2kSNHIjIyEkOGDIGxsTEkEonoSERKxZ5rRERERERERFRsVapUwW+//YY2bdqIjkIkBHuuEREREREREVGx6evro2rVqqJjEAnD4hoRERERERERFducOXMwc+ZMZGdni45CJASPhRIRERERERFRsdnb2+Pq1auQyWQwMzND+fLlFa6fO3dOUDIi5eBAAyIiIiIiIiIqtj59+oiOQCQUd64REREREREREREVE3euEREREREREdF/lpubi7t37yI/P19h3cTERFAiIuVgcY2IiIiIiIiIiu3KlSsYMWIETpw4obAuk8kgkUiQl5cnKBmRcrC4RkRERERERETF5ubmhnLlyuHXX3+FsbExJBKJ6EhESsWea0RERERERERUbJUqVcLZs2dRr1490VGIhJCKDkBERERERERE6svGxgb3798XHYNIGBbXiIiIiIiIiKjYFi5ciClTpuDIkSPIyMjA48ePFf4jKu14LJSIiIiIiIiIik0qfbVv5+1eaxxoQGUFBxoQERERERERUbFFRES881psbKwSkxCJwZ1rRERERERERPTRPHnyBCEhIdiwYQPOnj3LnWtU6rHnGhERERERERH9Z0ePHsXQoUNhbGyMJUuWoFOnTjh16pToWEQljsdCiYiIiIiIiKhY7ty5g6CgIGzcuBGPHz/GgAED8Pz5c/zyyy+wsbERHY9IKbhzjYiIiIiIiIiKrHfv3qhbty4uXLiA5cuX4/bt21i1apXoWERKx51rRERERERERFRkv//+OyZMmIAxY8bAyspKdBwiYbhzjYiIiIiIiIiKLCoqCk+ePMGnn36KFi1aICAgAPfv3xcdi0jpOC2UiIiIiIiIiIotKysL27dvR2BgIM6cOYO8vDz4+/tj+PDh0NHRER2PqMSxuEZEREREREREH8Xly5exceNGbNmyBQ8fPkTXrl2xb98+0bGIShSLa0RERERERET0UeXl5WH//v0IDAxkcY1KPRbXiIiIiIiIiIiIiokDDYiIiIiIiIiIiIqJxTUiIiIiIiIiIqJiYnGNiIiIiIiIiIiomFhcIyIiIiIiIiIiKiYW14iIiIiIiIiIiIqJxTUiIiIiIiIiIqJiYnGNiIiIiIiIiIiomFhcIyIiIiIiIiIiKqb/A9EJ+eIZh8NrAAAAAElFTkSuQmCC\n"},"metadata":{}}],"source":["sns.heatmap(df9.corr(), annot=True, fmt='0.1g')"]},{"cell_type":"markdown","id":"e684ab33","metadata":{"id":"e684ab33"},"source":["Splitting the features and label"]},{"cell_type":"code","execution_count":85,"id":"5b5bbf43","metadata":{"id":"5b5bbf43","executionInfo":{"status":"ok","timestamp":1708774645949,"user_tz":-330,"elapsed":792,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["x=df9.drop('label', axis=1)\n","y=df9['label']"]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test=train_test_split(x, y, stratify= y, test_size=0.25, random_state= 5)\n","sc= StandardScaler()\n","x_train=sc.fit_transform(x_train)\n","x_test=sc.fit_transform(x_test)"],"metadata":{"id":"_8kS6QW16ZWT","executionInfo":{"status":"ok","timestamp":1708774763228,"user_tz":-330,"elapsed":528,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"id":"_8kS6QW16ZWT","execution_count":86,"outputs":[]},{"cell_type":"markdown","id":"849be464","metadata":{"id":"849be464"},"source":["# Model selection"]},{"cell_type":"markdown","id":"369653cc","metadata":{"id":"369653cc"},"source":["1.Comparing the model with default hyperparameters values using Cross validation"]},{"cell_type":"code","execution_count":87,"id":"61163371","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61163371","executionInfo":{"status":"ok","timestamp":1708774770042,"user_tz":-330,"elapsed":1269,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"bf08cf8a-ef21-4fe8-c8c9-267e732004af"},"outputs":[{"output_type":"stream","name":"stdout","text":["LogisticRegression(max_iter=10000)\n","cross validation accuracies [0.88888889 0.89285714 0.875      0.89285714 0.89285714]\n","accuracy score 88.85\n","**************************************************************************************\n","RandomForestClassifier(random_state=5)\n","cross validation accuracies [0.92444444 0.95089286 0.92857143 0.90625    0.91964286]\n","accuracy score 92.6\n","**************************************************************************************\n","KNeighborsClassifier()\n","cross validation accuracies [0.87555556 0.90625    0.89732143 0.87946429 0.87053571]\n","accuracy score 88.58\n","**************************************************************************************\n","SVC(kernel='linear')\n","cross validation accuracies [0.89333333 0.89285714 0.89285714 0.89285714 0.89285714]\n","accuracy score 89.3\n","**************************************************************************************\n"]}],"source":["#list of models\n","models =[LogisticRegression(max_iter=10000), RandomForestClassifier(random_state=5), KNeighborsClassifier(), SVC(kernel='linear')]\n","\n","for model in models:\n","    cv_score=cross_val_score(model, x_train, y_train, cv=5) # cv - splits data into 5 folds\n","    mean= round(sum(cv_score)/len(cv_score)*100, 2)\n","\n","    print(model)\n","    print('cross validation accuracies', cv_score)\n","    print('accuracy score', mean)\n","    print('**************************************************************************************')"]},{"cell_type":"markdown","id":"915c8eef","metadata":{"id":"915c8eef"},"source":[" Inference: For Credit card dataset RandomForestClassifier has the highest accuracy value with the default hyperparameters."]},{"cell_type":"markdown","id":"49266f26","metadata":{"id":"49266f26"},"source":["2.Comparing the models with different hyperparameter values using 'GridSearchCV'"]},{"cell_type":"code","execution_count":88,"id":"9fd67e32","metadata":{"id":"9fd67e32","executionInfo":{"status":"ok","timestamp":1708774785532,"user_tz":-330,"elapsed":650,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# models list\n","model_list =[LogisticRegression(max_iter=10000), RandomForestClassifier(random_state=5), KNeighborsClassifier(), SVC()]\n","\n","#Creating a dictionary that contains hyperparameter values for above models\n","hyper_para= { 'lr_hypara': {'C': [1, 5, 10]},'rfc_hypara':{'n_estimators':[20, 50, 100]}, 'kn_hypara':{'n_neighbors':[5, 10]},'svc_hypara':{'kernel':['linear','poly', 'rbf'],'C': [1, 5, 10]}}\n"]},{"cell_type":"code","execution_count":89,"id":"422db12c","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"422db12c","executionInfo":{"status":"ok","timestamp":1708774791681,"user_tz":-330,"elapsed":701,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"0bf274c0-f81c-462b-d3ec-148623f002ff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'kernel': ['linear', 'poly', 'rbf'], 'C': [1, 5, 10]}"]},"metadata":{},"execution_count":89}],"source":["# To get the hyperparameters of models from dict\n","model_keys=list(hyper_para.keys())\n","a= model_keys[3]\n","hyper_para[a]"]},{"cell_type":"markdown","id":"cf7c7469","metadata":{"id":"cf7c7469"},"source":["# Applying GridSearchCV"]},{"cell_type":"markdown","id":"3e58a82b","metadata":{"id":"3e58a82b"},"source":["loop to iterate over different model with different hyperparameters and applying GridSearchCV to select best hyperparametes"]},{"cell_type":"code","execution_count":90,"id":"f4b8a5e3","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f4b8a5e3","executionInfo":{"status":"ok","timestamp":1708774798989,"user_tz":-330,"elapsed":4119,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"b57ba359-658e-4119-8019-fabd5a2bd693"},"outputs":[{"output_type":"stream","name":"stdout","text":["LogisticRegression(max_iter=10000)\n","{'C': [1, 5, 10]}\n","RandomForestClassifier(random_state=5)\n","{'n_estimators': [20, 50, 100]}\n","KNeighborsClassifier()\n","{'n_neighbors': [5, 10]}\n","SVC()\n","{'kernel': ['linear', 'poly', 'rbf'], 'C': [1, 5, 10]}\n"]}],"source":["\n","best_result=[]\n","i=0\n","for model in model_list:\n","    key=model_keys[i]\n","    param=hyper_para[key]\n","\n","    i+= 1\n","    print(model)\n","    print(param)\n","\n","    classifier=GridSearchCV(model, param, cv=5)\n","\n","    classifier.fit(x_train, y_train)\n","\n","    best_result.append({'model': model, 'highest_score': classifier.best_score_ , 'best_param': classifier.best_params_ })\n","\n","\n",""]},{"cell_type":"code","execution_count":91,"id":"8a8e1654","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8a8e1654","executionInfo":{"status":"ok","timestamp":1708774806082,"user_tz":-330,"elapsed":540,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"1605d45e-0eeb-4154-c02f-4c5f581c4a39"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'model': LogisticRegression(max_iter=10000),\n","  'highest_score': 0.8884920634920634,\n","  'best_param': {'C': 1}},\n"," {'model': RandomForestClassifier(random_state=5),\n","  'highest_score': 0.9259642857142858,\n","  'best_param': {'n_estimators': 50}},\n"," {'model': KNeighborsClassifier(),\n","  'highest_score': 0.8893849206349206,\n","  'best_param': {'n_neighbors': 10}},\n"," {'model': SVC(),\n","  'highest_score': 0.8929523809523809,\n","  'best_param': {'C': 1, 'kernel': 'linear'}}]"]},"metadata":{},"execution_count":91}],"source":["best_result"]},{"cell_type":"code","execution_count":92,"id":"701a33a4","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"701a33a4","executionInfo":{"status":"ok","timestamp":1708774810583,"user_tz":-330,"elapsed":707,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"c5d6d075-ef0d-4e2f-8103-0c5dc8037798"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                    model  highest_score  \\\n","0      LogisticRegression(max_iter=10000)       0.888492   \n","1  RandomForestClassifier(random_state=5)       0.925964   \n","2                  KNeighborsClassifier()       0.889385   \n","3                                   SVC()       0.892952   \n","\n","                     best_param  \n","0                      {'C': 1}  \n","1          {'n_estimators': 50}  \n","2           {'n_neighbors': 10}  \n","3  {'C': 1, 'kernel': 'linear'}  "],"text/html":["\n","  <div id=\"df-4bfe170d-4f61-46ba-9761-50c465ca6009\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>highest_score</th>\n","      <th>best_param</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LogisticRegression(max_iter=10000)</td>\n","      <td>0.888492</td>\n","      <td>{'C': 1}</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RandomForestClassifier(random_state=5)</td>\n","      <td>0.925964</td>\n","      <td>{'n_estimators': 50}</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>KNeighborsClassifier()</td>\n","      <td>0.889385</td>\n","      <td>{'n_neighbors': 10}</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SVC()</td>\n","      <td>0.892952</td>\n","      <td>{'C': 1, 'kernel': 'linear'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4bfe170d-4f61-46ba-9761-50c465ca6009')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4bfe170d-4f61-46ba-9761-50c465ca6009 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4bfe170d-4f61-46ba-9761-50c465ca6009');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-56d9801c-2630-4f5c-9139-113775983282\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56d9801c-2630-4f5c-9139-113775983282')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-56d9801c-2630-4f5c-9139-113775983282 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0231bb88-dc44-4bd3-b16c-a2ebc92eebb3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('best_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0231bb88-dc44-4bd3-b16c-a2ebc92eebb3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('best_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"best_df","summary":"{\n  \"name\": \"best_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"RandomForestClassifier(random_state=5)\",\n          \"SVC()\",\n          \"LogisticRegression(max_iter=10000)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"highest_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.017947659185186222,\n        \"min\": 0.8884920634920634,\n        \"max\": 0.9259642857142858,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9259642857142858,\n          0.8929523809523809,\n          0.8884920634920634\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"best_param\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":92}],"source":["best_df=pd.DataFrame(best_result)\n","best_df # Table of models and their respective highest score and best hyperparameters"]},{"cell_type":"markdown","id":"99173e23","metadata":{"id":"99173e23"},"source":[" Best model is RandomForestClassifier and n_estimators is 20 with highest score of 92 among all models"]},{"cell_type":"markdown","id":"c52b95fb","metadata":{"id":"c52b95fb"},"source":["# RandomForestClassifier"]},{"cell_type":"code","execution_count":93,"id":"f007a944","metadata":{"id":"f007a944","executionInfo":{"status":"ok","timestamp":1708774834524,"user_tz":-330,"elapsed":819,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# Model development\n","rfc=RandomForestClassifier(random_state=5, n_estimators=50)"]},{"cell_type":"code","execution_count":94,"id":"0555e08c","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"0555e08c","executionInfo":{"status":"ok","timestamp":1708774837334,"user_tz":-330,"elapsed":519,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"f6fbd2fb-57e6-4d3f-dfc7-d6f5b56eb199"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(n_estimators=50, random_state=5)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(n_estimators=50, random_state=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_estimators=50, random_state=5)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":94}],"source":["#fitting tha data into model\n","rfc.fit(x_train, y_train)"]},{"cell_type":"code","execution_count":95,"id":"00613e79","metadata":{"id":"00613e79","executionInfo":{"status":"ok","timestamp":1708774840549,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# predicting the labels using testing set of features\n","prediction = rfc.predict(x_test)"]},{"cell_type":"markdown","id":"2b18e057","metadata":{"id":"2b18e057"},"source":["Accuracy of model during Training and Testing"]},{"cell_type":"code","execution_count":96,"id":"dc159fb8","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dc159fb8","executionInfo":{"status":"ok","timestamp":1708774844750,"user_tz":-330,"elapsed":1504,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"757525cc-e585-4daa-f4bf-4aef363fa66a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model_Accuracy\n","Training_accuracy: 0.9973238180196253\n","cross_validation_accuracy: 0.9259642857142858\n","Testing_accuracy: 0.9197860962566845\n"]}],"source":["cv_score=cross_val_score(rfc, x_train, y_train, cv=5)\n","print(\"Model_Accuracy\")\n","print('Training_accuracy:',rfc.score(x_train, y_train))\n","print('cross_validation_accuracy:',cv_score.mean())\n","print('Testing_accuracy:', accuracy_score(y_test, prediction))\n"]},{"cell_type":"code","execution_count":97,"id":"960dd803","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"960dd803","executionInfo":{"status":"ok","timestamp":1708774852833,"user_tz":-330,"elapsed":512,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"281a6989-3ee2-4ffd-e025-c147d2c24d67"},"outputs":[{"output_type":"stream","name":"stdout","text":["RandomForestClassifier classification_report\n","-------------------------------------\n","              precision    recall  f1-score   support\n","\n","           0       0.93      0.99      0.96       334\n","           1       0.78      0.35      0.48        40\n","\n","    accuracy                           0.92       374\n","   macro avg       0.85      0.67      0.72       374\n","weighted avg       0.91      0.92      0.91       374\n","\n"]}],"source":["print('RandomForestClassifier classification_report')\n","print('-------------------------------------')\n","print(classification_report(y_test, prediction))"]},{"cell_type":"code","execution_count":98,"id":"cee77ce2","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":937},"id":"cee77ce2","executionInfo":{"status":"ok","timestamp":1708774858196,"user_tz":-330,"elapsed":558,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"94970811-956b-4fa8-814e-c72b1968f07d"},"outputs":[{"output_type":"stream","name":"stdout","text":["RandomForestClassifier confusion_matrix\n","-------------------------------------\n","[[330   4]\n"," [ 26  14]]\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(158.22222222222223, 0.5, 'y_test')"]},"metadata":{},"execution_count":98},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABGYAAANBCAYAAACiR7jzAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABC30lEQVR4nO3de5yWdZ0//tcoMALKICogKmpaKeUh0XAyLVcS1CxXLDUzLFfTwF0hD7EdLCspq9Us03Yt0QrzlFZWtkgJHcgDfTUzw0O05GHwFBC4DIf7/v3Rz9mdVfQavOEzDM+nj/vxcK77mnvewx+Rr8f7dX2a6vV6PQAAAACsd5uUHgAAAABgYyWYAQAAAChEMAMAAABQiGAGAAAAoBDBDAAAAEAhghkAAACAQgQzAAAAAIUIZgAAAAAKEcwAAAAAFNKr9ADrwsqn/1R6BADYIPUddmDpEQBgg7RqxWOlR1gvuvN/b/fe+lWlR1grNmYAAAAAChHMAAAAABTSI6tMAAAAwDpQW116gh7HxgwAAABAIYIZAAAAgEJUmQAAAIBq6rXSE/Q4NmYAAAAAChHMAAAAABSiygQAAABUU1NlajQbMwAAAACFCGYAAAAAClFlAgAAACqpO5Wp4WzMAAAAABQimAEAAAAoRJUJAAAAqMapTA1nYwYAAACgEMEMAAAAQCGqTAAAAEA1TmVqOBszAAAAAIUIZgAAAAAKUWUCAAAAqqmtLj1Bj2NjBgAAAKAQwQwAAABAIapMAAAAQDVOZWo4GzMAAAAAhQhmAAAAAApRZQIAAACqqakyNZqNGQAAAIBCBDMAAAAAhagyAQAAAJXUncrUcDZmAAAAAAoRzAAAAAAUosoEAAAAVONUpoazMQMAAABQiGAGAAAAoBBVJgAAAKAapzI1nI0ZAAAAgEIEMwAAAACFqDIBAAAA1dRWl56gx7ExAwAAAFCIYAYAAACgEFUmAAAAoBqnMjWcjRkAAACAQgQzAAAAAIWoMgEAAADV1FSZGs3GDAAAAEAhghkAAACAQlSZAAAAgGqcytRwNmYAAAAAChHMAAAAABSiygQAAABU41SmhrMxAwAAAFCIYAYAAACgEFUmAAAAoJJ6fXXpEXocGzMAAAAAhQhmAAAAAApRZQIAAACqqTuVqdFszAAAAAAUIpgBAAAAKESVCQAAAKimpsrUaDZmAAAAAAoRzAAAAAAUosoEAAAAVONUpoazMQMAAABQiGAGAAAAoBDBDAAAAFBNbXX3fXXBZZddlj333DMDBgzIgAED0tramp/85Ccd7y9fvjwTJkzIVlttlc033zzjxo3LwoULO33GggULcsQRR6Rfv34ZPHhwzj777KxatarLf6SCGQAAAGCjsv322+dzn/tc5s6dm7vvvjv/8A//kHe+8525//77kySTJk3KD3/4w1x//fWZNWtWHn/88Rx99NEd37969eocccQRWbFiRX7961/nqquuyrRp0/KJT3yiy7M01ev1esN+s25i5dN/Kj0CAGyQ+g47sPQIALBBWrXisdIjrBfL77qx9AhrtNl+417R9w8aNChf+MIXcswxx2SbbbbJ9OnTc8wxxyRJ/vjHP2b33XfPnDlzsv/+++cnP/lJ3v72t+fxxx/PkCFDkiSXX355zj333Dz11FPp06dP5Z9rYwYAAACopl7rvq+1tHr16nz3u9/NsmXL0tramrlz52blypUZPXp0xz277bZbhg8fnjlz5iRJ5syZkz322KMjlEmSMWPGZMmSJR1bN1U5LhsAAADY4LW3t6e9vb3Ttebm5jQ3N7/o/ffdd19aW1uzfPnybL755rnpppsyYsSI3HPPPenTp08GDhzY6f4hQ4akra0tSdLW1tYplHn+/eff6wobMwAAAMAGb+rUqWlpaen0mjp16hrvf+1rX5t77rknd9xxR04//fSMHz8+f/jDH9bjxH9nYwYAAACoprb2laF1bcqUKZk8eXKna2valkmSPn36ZNddd02SjBw5MnfddVe+/OUv59hjj82KFSuyaNGiTlszCxcuzNChQ5MkQ4cOzZ133tnp854/ten5e6qyMQMAAABs8JqbmzuOv37+9VLBzP9Vq9XS3t6ekSNHpnfv3pk5c2bHe/PmzcuCBQvS2tqaJGltbc19992XJ598suOeGTNmZMCAARkxYkSX5rYxAwAAAGxUpkyZksMOOyzDhw/P3/72t0yfPj233357fvrTn6alpSUnn3xyJk+enEGDBmXAgAE544wz0tramv333z9Jcuihh2bEiBE58cQTc+GFF6atrS0f+9jHMmHChC6FQYlgBgAAAKjqFZx+1J08+eSTed/73pcnnngiLS0t2XPPPfPTn/40b3vb25IkF110UTbZZJOMGzcu7e3tGTNmTL72ta91fP+mm26aW265JaeffnpaW1vTv3//jB8/Pueff36XZ2mq1+v1hv1m3cTKp/9UegQA2CD1HXZg6REAYIO0asVjpUdYL5bPuab0CGu0WevxpUdYK54xAwAAAFCIKhMAAABQTTc+lWlDZWMGAAAAoBDBDAAAAEAhqkwAAABANapMDWdjBgAAAKAQwQwAAABAIapMAAAAQCX1+urSI/Q4NmYAAAAAChHMAAAAABSiygQAAABU41SmhrMxAwAAAFCIYAYAAACgEFUmAAAAoJq6KlOj2ZgBAAAAKEQwAwAAAFCIKhMAAABQjVOZGs7GDAAAAEAhghkAAACAQlSZAAAAgGqcytRwNmYAAAAAChHMAAAAABSiygQAAABU41SmhrMxAwAAAFCIYAYAAACgEFUmAAAAoBqnMjWcjRkAAACAQgQzAAAAAIWoMgEAAADVOJWp4WzMAAAAABQimAEAAAAoRJUJAAAAqEaVqeFszAAAAAAUIpgBAAAAKESVCQAAAKimrsrUaDZmAAAAAAoRzAAAAAAUosoEAAAAVONUpoazMQMAAABQiGAGAAAAoBBVJgAAAKAapzI1nI0ZAAAAgEIEMwAAAACFqDIBAAAA1TiVqeFszAAAAAAUIpgBAAAAKESVCQAAAKjGqUwNZ2MGAAAAoBDBDAAAAEAhqkwAAABANU5lajgbMwAAAACFCGYAAAAAClFlAgAAAKpRZWo4GzMAAAAAhQhmAAAAAApRZQIAAACqqddLT9Dj2JgBAAAAKEQwAwAAAFCIKhMAAABQjVOZGs7GDAAAAEAhghkAAACAQlSZAAAAgGpUmRrOxgwAAABAIYIZAAAAgEJUmQAAAIBq6qpMjWZjBgAAAKAQwQwAAABAIapMAAAAQDVOZWo4GzMAAAAAhQhmAAAAAApRZQIAAACqqddLT9Dj2JgBAAAAKEQwAwAAAFCIKhMAAABQjVOZGs7GDAAAAEAhghkAAACAQlSZAAAAgGpUmRrOxgwAAABAIYIZAAAAgEJUmQAAAIBq6qpMjWZjBgAAAKAQwQwAAABAIapMAAAAQCX1Wr30CD2OjRkAAACAQgQzAAAAAIWoMgEAAADV1JzK1Gg2ZgAAAAAKEcwAAAAAFKLKBAAAAFRTV2VqNBszAAAAAIUIZgAAAAAKUWUCAAAAqqnVS0/Q49iYAQAAAChEMAMAAABQiCoTAAAAUE3NqUyNZmMGAAAAoBDBDAAAAEAhqkwAAABANapMDWdjBgAAAKAQwQwAAABAIapMAAAAQDX1eukJehwbMwAAAACFCGYAAAAAClFlAgAAAKpxKlPD2ZgBAAAAKEQwAwAAAFCIKhMAAABQTc2pTI1mYwYAAADYqEydOjX77bdftthiiwwePDhHHXVU5s2b1+met771rWlqaur0Ou200zrds2DBghxxxBHp169fBg8enLPPPjurVq3q0iw2ZgAAAICNyqxZszJhwoTst99+WbVqVf71X/81hx56aP7whz+kf//+HfedcsopOf/88zu+7tevX8e/r169OkcccUSGDh2aX//613niiSfyvve9L717984FF1xQeRbBDPCKffemW3LtTT/K408sTJLsuvOOOe3978mBrfslST514SWZc9f/y1NPP5t+/TbL3q8fkUkf+kBeteMOHZ/xRNuTOf+LX81dv/1d+vXdLO84bHTOPO396dVr0yK/EwB0R+ecPSEXfPZf8+VLrsiHzzqv9DjAxqjeM05luvXWWzt9PW3atAwePDhz587NQQcd1HG9X79+GTp06It+xn/+53/mD3/4Q2677bYMGTIke++9dz796U/n3HPPzSc/+cn06dOn0iyqTMArNnSbrTPptPfnum9+Jdd+45K8ceReOeMj5+fhP/1XkmTEa3fNZz46OT+Y/u/5+r99NvV6PadO+mhWr16d5O9J84fOPi8rV67Kty//Uj77sQ/n+z+Zka9e8a2SvxYAdCv7jtwrp/zTe3Pv7/5QehSAHmfx4sVJkkGDBnW6/p3vfCdbb711Xv/612fKlCl57rnnOt6bM2dO9thjjwwZMqTj2pgxY7JkyZLcf//9lX+2YAZ4xd765v1z0JvemB132C47Dd8+//LBk9Kv72a59/4/Jkne9c7Ds+/ee2S7bYdkxGt3zRmnjk/bwqfy2P+/YfPrO3+bR/68IJ877+zs9ppdcmDrfpn4T+/Ld7/3w6xcubLkrwYA3UL//v1y9dVfzWmnn5NFf11UehyAbqm9vT1Llizp9Gpvb3/Z76vVajnzzDNzwAEH5PWvf33H9fe85z359re/nZ///OeZMmVKvvWtb+W9731vx/ttbW2dQpkkHV+3tbVVnlswAzTU6tWr8+Pbbs9/L1+evV+/2wvef+6/l+fmH/1nth82NNsO2SZJcu/vH8irX7VTth60Zcd9B4wamaXLnsvD8/9rvc0OAN3VVy65ID/58czM/NkvSo8CbOxq9W77mjp1alpaWjq9pk6d+rK/0oQJE/L73/8+3/3udztdP/XUUzNmzJjsscceOeGEE3L11VfnpptuyiOPPNLQP9Kiz5h5+umn881vfjNz5szpSJOGDh2aN73pTTnppJOyzTbblBwP6IIHH5mfEz44OStWrEi/vn3z5Qs+nl123rHj/e9+75Z86WvfyH//9/LsPHz7/PtFn03v3r2TJE8/+9dsNWhgp897/uunn/nr+voVAKBbeve735E3vOH12b/1iNKjAHRrU6ZMyeTJkztda25ufsnvmThxYm655ZbMnj0722+//UveO2rUqCTJww8/nF122SVDhw7NnXfe2emehQv/3gpY03NpXkyxjZm77rorr3nNa3LJJZekpaUlBx10UA466KC0tLTkkksuyW677Za77777ZT9nbVeVgMbaefj2uXHapZn+7xfn3UcdkY9+9kt55H9tuxxx6MG54cqvZtqlF2bHHbbLWZ+Ymvb2FQUnBoDub/vth+WiL52f940/w//HBXgZzc3NGTBgQKfXmoKZer2eiRMn5qabbsrPfvaz7Lzzzi/7+ffcc0+SZNttt02StLa25r777suTTz7Zcc+MGTMyYMCAjBgxovLcxTZmzjjjjLzrXe/K5Zdfnqampk7v1ev1nHbaaTnjjDMyZ86cl/ycqVOn5lOf+lSnax87+5/ziXP+peEzA2vWu3fvDN9+WJLkdbu9Ovf/8cF8+/rv57xz/jlJssXm/bPF5v2z4w7bZa/X7ZY3jX1XZs7+dQ5/21uz9aAtc98fHuz0ec88uyhJsvVWWwYANlb77LNHhgzZJnfd8T+nh/Tq1SsHHrh/JnzopPTbfOfUaj3jhBRgw1DvIf+bM2HChEyfPj3f//73s8UWW3S0eFpaWtK3b9888sgjmT59eg4//PBstdVW+d3vfpdJkybloIMOyp577pkkOfTQQzNixIiceOKJufDCC9PW1paPfexjmTBhwstu6vxvxYKZe++9N9OmTXtBKJMkTU1NmTRpUt7whje87Oe82KrSJn97rGFzAmunVqtnxYoXf3BvvV5PvZ6O9/d6/e7596uvzTN/XZStthyYJJlz12+zef9+2WWn4etrZADodn72s19mrzf8Q6drV/zHv2XevEfyhS9eKpQB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AKAQwQwAAABAIapMAAAAQCX1mipTo9mYAQAAAChEMAMAAABQiCoTAAAAUEm9XnqCnsfGDAAAAEAhghkAAACAQlSZAAAAgEqcytR4NmYAAAAAChHMAAAAABSiygQAAABUUqurMjWajRkAAACAQroczJx//vl57rnnXnD9v//7v3P++ec3ZCgAAACAjUFTvV6vd+UbNt100zzxxBMZPHhwp+vPPPNMBg8enNWrVzd0wLWx8uk/lR4BADZIfYcdWHoEANggrVrxWOkR1ov7dj6y9AhrtMf8H5YeYa10eWOmXq+nqemFnbJ77703gwYNashQAAAAABuDyg//3XLLLdPU1JSmpqa85jWv6RTOrF69OkuXLs1pp522ToYEAAAA6IkqBzMXX3xx6vV6PvCBD+RTn/pUWlpaOt7r06dPdtppp7S2tq6TIQEAAIDyuvYwFKqoHMyMHz8+SbLzzjvngAMOSK9eTtoGAAAAeCW6/IyZLbbYIg888EDH19///vdz1FFH5V//9V+zYsWKhg4HAAAA0JN1OZj54Ac/mAcffDBJ8qc//SnHHnts+vXrl+uvvz7nnHNOwwcEAAAAuodavanbvjZUXQ5mHnzwwey9995Jkuuvvz5vectbMn369EybNi033nhjo+cDAAAA6LHW6rjsWq2WJLntttty+OGHJ0l22GGHPP30042dDgAAAKAH6/ITfPfdd9985jOfyejRozNr1qxcdtllSZL58+dnyJAhDR8QAAAA6B7qG3BlqLvq8sbMxRdfnN/+9reZOHFiPvrRj2bXXXdNktxwww1505ve1PABAQAAAHqqpnq9MaeQL1++PJtuuml69+7diI97RVY+/afSIwDABqnvsANLjwAAG6RVKx4rPcJ68f+Gv7P0CGv0hgXfLz3CWunyxkySLFq0KFdccUWmTJmSZ599Nknyhz/8IU8++WRDhwMAAAC6j3q9+742VF1+xszvfve7HHLIIRk4cGD+/Oc/55RTTsmgQYPyve99LwsWLMjVV1+9LuYEAAAA6HG6vDEzefLkvP/9789DDz2UzTbbrOP64YcfntmzZzd0OAAAAICerMsbM3fddVe+/vWvv+D6dtttl7a2toYMBQAAAHQ/NacyNVyXN2aam5uzZMmSF1x/8MEHs8022zRkKAAAAICNQZeDmXe84x05//zzs3LlyiRJU1NTFixYkHPP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mDz55JOlRwOAbm3ZsmXZa6+9cumll5YeBYB1wHHZwHoxatSo7LfffvnqV7+aJKnVatlhhx1yxhln5CMf+Ujh6QBgw9DU1JSbbropRx11VOlRAGgQGzPAOrdixYrMnTs3o0eP7ri2ySabZPTo0ZkzZ07ByQAAAMoSzADr3NNPP53Vq1dnyJAhna4PGTIkbW1thaYCAAAoTzADAAAAUIhgBljntt5662y66aZZuHBhp+sLFy7M0KFDC00FAABQnmAGWOf69OmTkSNHZubMmR3XarVaZs6cmdbW1oKTAQAAlNWr9ADAxmHy5MkZP3589t1337zxjW/MxRdfnGXLluX9739/6dEAoFtbunRpHn744Y6v58+fn3vuuSeDBg3K8OHDC04GQCM4LhtYb7761a/mC1/4Qtra2rL33nvnkksuyahRo0qPBQDd2u23356DDz74BdfHjx+fadOmrf+BAGgowQwAAABAIZ4xAwAAAFCIYAYAAACgEMEMAAAAQCGCGQAAAIBCBDMAAAAAhQhmAAAAAAoRzAAAAAAUIpgBgI3USSedlKOOOqrj67e+9a0588wz1/sct99+e5qamrJo0aL1/rMBAEoTzABAN3PSSSelqakpTU1N6dOnT3bdddecf/75WbVq1Tr9ud/73vfy6U9/utK9whQAgMboVXoAAOCFxo4dmyuvvDLt7e358Y9/nAkTJqR3796ZMmVKp/tWrFiRPn36NORnDho0qCGfAwBAdTZmAKAbam5uztChQ7Pjjjvm9NNPz+jRo/ODH/ygo3702c9+NsOGDctrX/vaJMlf/vKXvPvd787AgQMzaNCgvPOd78yf//znjs9bvXp1Jk+enIEDB2arrbbKOeeck3q93uln/t8qU3t7e84999zssMMOaW5uzq677ppvfOMb+fOf/5yDDz44SbLlllumqakpJ510UpKkVqtl6tSp2XnnndO3b9/stddeueGGGzr9nB//+Md5zWtek759++bggw/uNCcAwMZGMAMAG4C+fftmxYoVSZKZM2dm3rx5mTFjRm655ZasXLkyY8aMyRZbbJFf/OIX+dWvfpXNN988Y8eO7fieL33pS5k2bVq++c1v5pe//GWeffbZ3HTTTS/5M9/3vvflmmuuySWXXJIHHnggX//617P55ptnhx12yI033pgkmTdvXp544ol8+ctfTpJMnTo1V199dS6//PLcf//9mTRpUt773vdm1qxZSf4eIB199NE58sgjc8899+Sf/umf8pGPfGRd/bEBAHR7qkwA0I3V6/XMnDkzP/3pT3PGGWfkqaeeSv/+/XPFFVd0VJi+/e1vp1ar5YorrkhTU1OS5Morr8zAgQNz++2359BDD83FF1+cKVOm5Oijj06SXH755fnpT3+6xp/74IMP5rrrrsuMGTMyevToJMmrXvWqjvefrz0NHjw4AwcOTPL3DZsLLrggt912W1pbWzu+55e//GW+/vWv5y1veUsuu+yy7LLLLvnSl76UJHnta1+b++67L5///Ocb+KcGALDhEMwAQDd0yy23ZPPNN8/KlStTq9Xynve8J5/85CczYcKE7LHHHp2eK3Pvvffm4YcfzhZbbNHpM5YvX55HHnkkixcvzhNPPJFRo0Z1vNerV6/su+++L6gzPe+ee+7Jpptumre85S2VZ3744Yfz3HPP5W1ve1un6ytWrMgb3vCGJMkDDzzQaY4kHSEOAMDGSDADAN3QwQcfnMsuuyx9+vTJsGHD0qvX//yV3b9//073Ll26NCNHjsx3vvOdF3zONttss1Y/v2/fvl3+nqVLlyZJfvSjH2W77bbr9F5zc/NazQEA0NMJZgCgG+rfv3923XXXSvfus88+ufbaazN48OAMGDDgRe/Zdtttc8cdd+Sggw5KkqxatSpz587NPvvs86L377HHHqnVapk1a1ZHlel/e35jZ/Xq1R3XRowYkebm5ixYsGCNmza77757fvCDH3S69pvf/Oblf0kAgB7Kw38BYAN3wgknZOutt8473/nO/OIXv8j8+fNz++2355//+Z/z6KOPJkn+5V/+JZ/73Ody8803549//GM+9KEPZdGiRWv8zJ122injx4/PBz7wgdx8880dn3ndddclSXbcccc0NTXllltuyVNPPZWlS5dmiy22yFlnnZVJkyblqquuyiOPPJLf/va3+cpXvpKrrroqSXLaaafloYceytlnn5158+Zl+vTpmTZt2rr+IwIA6LYEMwCwgevXr19mz56d4cOH5+ijj87uu++ek08+OcuXL+/YoPnwhz+cE088MePHj09ra2u22GKL/OM//uNLfu5ll12WY445Jh/60Iey22675ZRTTsmyZcuSJNttt10+9alP5SMf+UiGDBmSiRMnJkk+/elP5+Mf/3imTp2a3XffPWPHjs2PfvSj7LzzzkmS4cOH58Ybb8zNN9+cvfbaK5dffnkuuOCCdfinAwDQvTXV1/TUPwAAAADWKRszAAAAAIUIZgAAAAAKEcwAAAAAFCKYAQAAAChEMAMAAABQiGAGAAAAoBDBDAAAAEAhghkAAACAQgQzAAAAAIUIZgAAAAAKEcwAAAAAFCKYAQAAACjk/wNZFlYS8D4zBwAAAABJRU5ErkJggg==\n"},"metadata":{}}],"source":["print('RandomForestClassifier confusion_matrix')\n","print('-------------------------------------')\n","cm= confusion_matrix(y_test, prediction)\n","print(cm)\n","\n","\n","sns.heatmap(cm, annot=True, fmt='0.3g')\n","plt.xlabel('Predicted')\n","plt.ylabel('y_test')"]},{"cell_type":"markdown","id":"7c218717","metadata":{"id":"7c218717"},"source":["for above given prediction model predicted 0 as\n"]},{"cell_type":"code","execution_count":99,"id":"f8f3ca70","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"f8f3ca70","executionInfo":{"status":"ok","timestamp":1708774887232,"user_tz":-330,"elapsed":919,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"fb91c455-6b89-4507-e031-dd1d55cae6e6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  Marital_status  \\\n","0       1          1              1            0          0               0   \n","1       0          1              0            1          0               0   \n","4       0          1              0            1          0               0   \n","6       0          1              0            1          0               0   \n","7       0          0              0            0          2               0   \n","\n","   Housing_type   age  Experience   fa_sqrt  Annual_income_sqrt  \n","0             1  51.0         0.0  1.414214          424.264069  \n","1             1  37.0         2.0  1.414214          561.248608  \n","4             1  37.0         2.0  1.414214          561.248608  \n","6             1  37.0         2.0  1.414214          561.248608  \n","7             1  61.0         0.0  1.414214          424.264069  "],"text/html":["\n","  <div id=\"df-1b0beda2-5176-4bbe-899b-51ae0b57788f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>Car_Owner</th>\n","      <th>Propert_Owner</th>\n","      <th>Type_Income</th>\n","      <th>EDUCATION</th>\n","      <th>Marital_status</th>\n","      <th>Housing_type</th>\n","      <th>age</th>\n","      <th>Experience</th>\n","      <th>fa_sqrt</th>\n","      <th>Annual_income_sqrt</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>2.0</td>\n","      <td>1.414214</td>\n","      <td>561.248608</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.0</td>\n","      <td>0.0</td>\n","      <td>1.414214</td>\n","      <td>424.264069</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b0beda2-5176-4bbe-899b-51ae0b57788f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b0beda2-5176-4bbe-899b-51ae0b57788f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b0beda2-5176-4bbe-899b-51ae0b57788f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-475d6c2a-71a4-4d4c-89cf-7d7b18400df2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-475d6c2a-71a4-4d4c-89cf-7d7b18400df2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-475d6c2a-71a4-4d4c-89cf-7d7b18400df2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 1495,\n  \"fields\": [\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Car_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propert_Owner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Housing_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.597401440576899,\n        \"min\": 21.0,\n        \"max\": 68.0,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          67.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Experience\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.864153065902092,\n        \"min\": 0.0,\n        \"max\": 21.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fa_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29971440784128583,\n        \"min\": 1.0,\n        \"max\": 2.449489742783178,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.4142135623730951,\n          1.7320508075688772\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Annual_income_sqrt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.45770856301057,\n        \"min\": 183.71173070873834,\n        \"max\": 664.9450883140487,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          442.43643611257875,\n          345.9768778401239\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":99}],"source":["x.head()"]},{"cell_type":"code","execution_count":100,"id":"4f6fe53a","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":101,"referenced_widgets":["907aba8a18b8454db8d699c6bb4744d2","128d609056484e5e9f726e21d96c9eae","2af60846d5fa4c2897a826da74a357ee","88e75e2a3c564055a91af6cec6ee5c7f","f0a8f35fdeb642beb6eb254691190661","057684e3e794404fa50efbc1910e9695","3306ae6ddf014781a9e5e835b67d612d"]},"id":"4f6fe53a","executionInfo":{"status":"ok","timestamp":1708774891422,"user_tz":-330,"elapsed":531,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"7b80c546-7673-4adb-89b2-29d8081e189a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('GENDER', 'Car_Owner', 'Propert_Owner', 'Type_Incomâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"907aba8a18b8454db8d699c6bb4744d2"}},"metadata":{}}],"source":["@interact\n","def cat_uniq(col=list(x.columns)):\n","    print(x[col].value_counts())"]},{"cell_type":"code","execution_count":101,"id":"e0a1fa1f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":101,"referenced_widgets":["09bf991ebd4e4c9d8359f4762ff8701f","6679c6913495481181f110dee729d1f3","8cc9461a67754257a57471e2483649fe","b4a89438d8eb4927aac3ab2b3da24efe","e2479f8f0ae84d4386edd6451590ecb4","dddb6c4ec9b741eb93fc6e9e317bd5b2","fc678f4254dd45b98b4e6106f903b8e2"]},"id":"e0a1fa1f","executionInfo":{"status":"ok","timestamp":1708774905372,"user_tz":-330,"elapsed":820,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"e7cb51c8-aaee-476a-863e-bcb33466be29"},"outputs":[{"output_type":"display_data","data":{"text/plain":["interactive(children=(Dropdown(description='col', options=('GENDER', 'Car_Owner', 'Propert_Owner', 'Type_Incomâ€¦"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"09bf991ebd4e4c9d8359f4762ff8701f"}},"metadata":{}}],"source":["@interact\n","def cat_uniq(col=list(df4_cat1.columns)):\n","    print(df4_cat1[col].value_counts())"]},{"cell_type":"code","execution_count":102,"id":"a27c27cf","metadata":{"id":"a27c27cf","executionInfo":{"status":"ok","timestamp":1708774909692,"user_tz":-330,"elapsed":462,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["colms= x.columns"]},{"cell_type":"code","execution_count":103,"id":"2ca8a0a3","metadata":{"id":"2ca8a0a3","executionInfo":{"status":"ok","timestamp":1708774911742,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}}},"outputs":[],"source":["# list of all the features with their encoded numbers\n","Details=['No_of Children =','No_of family members =', 'Gender: Female- 0, Male- 1 =', 'Car_owner: No-0, Yes-1 =','Property_owner:No-0,Yes-1 =','Type_Income: Working-1, Pensioner-0 =', 'Education:Lower Secondary-0, Degree-1, Secondary-2=','Martial status:Married-0, Single(married)-1,Singele(Not married)-2 =','Housing type: No-Own house-0, Own house-1 =', 'Age =', 'Experience(years) =']"]},{"cell_type":"markdown","id":"9cdd2d4f","metadata":{"id":"9cdd2d4f"},"source":["# User input to predict Credit card approval"]},{"cell_type":"code","execution_count":106,"id":"40f6e351","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":749},"id":"40f6e351","executionInfo":{"status":"error","timestamp":1708775286083,"user_tz":-330,"elapsed":84756,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"79c74bc8-4620-49db-aa23-c638c2713f28"},"outputs":[{"name":"stdout","output_type":"stream","text":["Enter details to check credit card availability\n","-----------------------------------------------------\n","1.No_of Children = :2\n","-----------------------------------------------------\n","2.No_of family members = :4\n","-----------------------------------------------------\n","3.Gender: Female- 0, Male- 1 = :0\n","-----------------------------------------------------\n","4.Car_owner: No-0, Yes-1 = :0\n","-----------------------------------------------------\n","5.Property_owner:No-0,Yes-1 = :0\n","-----------------------------------------------------\n","6.Type_Income: Working-1, Pensioner-0 = :0\n","-----------------------------------------------------\n","7.Education:Lower Secondary-0, Degree-1, Secondary-2= :0\n","-----------------------------------------------------\n","8.Martial status:Married-0, Single(married)-1,Singele(Not married)-2 = :2\n","-----------------------------------------------------\n","9.Housing type: No-Own house-0, Own house-1 = :1\n","-----------------------------------------------------\n","10.Age = :27\n","-----------------------------------------------------\n","11.Experience(years) = :4\n","12. annual income:200000\n"]},{"output_type":"error","ename":"IndexError","evalue":"index 11 is out of bounds for axis 0 with size 11","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-106-5b2a43627ab4>\u001b[0m in \u001b[0;36m<cell line: 15>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0muser_input1\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'{a}. annual income:'\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mCriteria\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolms\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0muser_input1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   5318\u001b[0m             \u001b[0;31m# GH#44051 exclude bool, which would return a 2d ndarray\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5319\u001b[0m             \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcast_scalar_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwarn_float\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5320\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mgetitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5321\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5322\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: index 11 is out of bounds for axis 0 with size 11"]}],"source":["import math\n","colms= x.columns\n","print('Enter details to check credit card availability')\n","Criteria={}\n","a =1\n","\n","# iterate over all features to collect input from user\n","for i in Details:\n","      print('-----------------------------------------------------')\n","      user_input=int(input(f'{a}.{i} :' ) )\n","      a +=1\n","      Criteria[colms[a-2]]=user_input # it adds user input to \"Criteria\" dictionary\n","\n","user_input1=math.sqrt(int(input(f'{a}. annual income:' )))\n","Criteria[colms[a-1]] = user_input1\n","\n","\n","print('*************************************************************')\n","print(Criteria)0"]},{"cell_type":"code","execution_count":107,"id":"6fb378cf","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6fb378cf","executionInfo":{"status":"ok","timestamp":1708775301144,"user_tz":-330,"elapsed":618,"user":{"displayName":"Bibhanshu Chaubey","userId":"14565317690749427230"}},"outputId":"560b2744-dc3c-4362-c067-08d05bbbe089"},"outputs":[{"output_type":"stream","name":"stdout","text":["   GENDER  Car_Owner  Propert_Owner  Type_Income  EDUCATION  Marital_status  \\\n","0       2          4              0            0          0               0   \n","\n","   Housing_type  age  Experience  fa_sqrt  Annual_income_sqrt  \n","0             0    2           1       27                   4  \n","****************************************************************\n","prediction: [0]\n","-----------------------------------------------------------------\n","'Sorry', For this customer credit card is not approved \n"]}],"source":["# convertiong dictionary to DataFrame\n","Criteria_df=pd.DataFrame([Criteria])\n","z= Criteria_df\n","print(z)\n","print('****************************************************************')\n","\n","# scaling features using standard scaler\n","z=sc.fit_transform(z)\n","\n","# predicting the Credit card approval\n","pred = rfc.predict(z)\n","print('prediction:', pred)\n","print('-----------------------------------------------------------------')\n","\n","if pred == 0:\n","    print(\"'Sorry', For this customer credit card is not approved \")\n","else:\n","    print(\" 'Good', You can approve a credit card to this customer\")"]},{"cell_type":"markdown","id":"1662f96e","metadata":{"id":"1662f96e"},"source":["# Conclusion"]},{"cell_type":"markdown","id":"5c5e34ce","metadata":{"id":"5c5e34ce"},"source":["This project aims to develop a machine learning model to predict credit card approval with high accuracy. The model will be trained on a dataset of customer information and credit card approval decisions. The model will be used to improve the bank's credit card approval process by identifying applicants who are more likely to be approved.\n","\n","The proposed approach is important because it can help banks to make more informed decisions about credit card applications. This can lead to a reduction in credit card fraud and a decrease in the number of bad debts. The proposed approach can also be used to develop targeted marketing campaigns for credit cards.\n","\n","The proposed approach is feasible because the data required to train the model is available from banks. The data can be collected from credit card applications and credit bureau reports. The data can be cleaned and prepared using standard data science techniques.\n","\n","The proposed approach is beneficial because it can help banks to improve their credit card approval process and reduce credit card fraud. The proposed approach can also be used to develop targeted marketing campaigns for credit cards."]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.6"},"colab":{"provenance":[]},"widgets":{"application/vnd.jupyter.widget-state+json":{"cab142a87a1945629e60ab513c4e24fd":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_e67d2e7246d140c680fb27d68fdfdd59","IPY_MODEL_f10aae087d7b437e87d02478576dcf6c"],"layout":"IPY_MODEL_d28c54c156b641619d2196456db5381b"}},"e67d2e7246d140c680fb27d68fdfdd59":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["GENDER","Car_Owner","Propert_Owner","Type_Income","EDUCATION","Marital_status","Housing_type"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_5a31716b88b64d47bbf42e906361ed47","style":"IPY_MODEL_bdaf46f96b5e422ea68a8a8f0575778a"}},"f10aae087d7b437e87d02478576dcf6c":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_ce1a6a396bcb40a4b770766d0fdbb9e1","msg_id":"","outputs":[{"output_type":"stream","name":"stdout","text":["F    947\n","M    549\n","Name: GENDER, dtype: int64\n"]}]}},"d28c54c156b641619d2196456db5381b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a31716b88b64d47bbf42e906361ed47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bdaf46f96b5e422ea68a8a8f0575778a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ce1a6a396bcb40a4b770766d0fdbb9e1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f4bee0f9cc2489bb108d8ada7907197":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_58a09eff2fa6448ab4b57bfd4c984b40","IPY_MODEL_ec8ae469657d4d85907a433b59797156"],"layout":"IPY_MODEL_38bf7cb843554319854eae90f76edb41"}},"58a09eff2fa6448ab4b57bfd4c984b40":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["GENDER","Car_Owner","Propert_Owner","Type_Income","EDUCATION","Marital_status","Housing_type"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_fdd61593284f4d588e3fd5f12f7fdb28","style":"IPY_MODEL_253a829725184372a31b6d7cc07a7f8e"}},"ec8ae469657d4d85907a433b59797156":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_168f9f8f72454119804d8426c28acb6d","msg_id":"","outputs":[{"output_type":"stream","name":"stdout","text":["F    947\n","M    549\n","Name: GENDER, dtype: int64\n"]}]}},"38bf7cb843554319854eae90f76edb41":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fdd61593284f4d588e3fd5f12f7fdb28":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"253a829725184372a31b6d7cc07a7f8e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"168f9f8f72454119804d8426c28acb6d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"65987b3f1a704d1284162db99f4da91d":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_d98c51a70488404f9f86c0310fa73945","IPY_MODEL_f6d7965040f648fda95c39a856809f9a"],"layout":"IPY_MODEL_4bda211b364f427fbbda78cc5473d515"}},"d98c51a70488404f9f86c0310fa73945":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["CHILDREN","Annual_income","Birthday_count","Employed_days","Family_Members","label","GENDER","Car_Owner","Propert_Owner","Type_Income","EDUCATION","Marital_status","Housing_type"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_b41342aa082b49e5b04919a9bfb6c4cd","style":"IPY_MODEL_656b3875cb4b47a7bf0f63e2cd0c5bc2"}},"f6d7965040f648fda95c39a856809f9a":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_019f9f7d3a704ad2bd40c3b5e25e25aa","msg_id":"","outputs":[{"output_type":"stream","name":"stdout","text":["[ 0  1  2  4  3 14]\n"]}]}},"4bda211b364f427fbbda78cc5473d515":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b41342aa082b49e5b04919a9bfb6c4cd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"656b3875cb4b47a7bf0f63e2cd0c5bc2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"019f9f7d3a704ad2bd40c3b5e25e25aa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2520910105e8402284e5eb5f96768320":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_15f7240ca68f4261b9ab34665ab913f1","IPY_MODEL_50cef3924ce741cabe07c3113c685e43"],"layout":"IPY_MODEL_d035886837574809a7634ee34c3cbfe4"}},"15f7240ca68f4261b9ab34665ab913f1":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["CHILDREN","Annual_income","Family_Members","age","Experience"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_290a24289b6d443f917920d176d8f1c1","style":"IPY_MODEL_5758c905c51b4b3f8fe214b6345c88a2"}},"50cef3924ce741cabe07c3113c685e43":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_9c2fc68838be43aa924634c04d6165ef","msg_id":"","outputs":[]}},"d035886837574809a7634ee34c3cbfe4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"290a24289b6d443f917920d176d8f1c1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5758c905c51b4b3f8fe214b6345c88a2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9c2fc68838be43aa924634c04d6165ef":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7a0aa3e9454849a68cc0b77cb9b18c5b":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_a333297e74654c9aaaf139b1bd0cbde8","IPY_MODEL_894707f7e54744a384ba2fc575ad82f0"],"layout":"IPY_MODEL_50d04369b2cd46a19dd54ab56ea4d19d"}},"a333297e74654c9aaaf139b1bd0cbde8":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["CHILDREN","Annual_income","Family_Members","age","Experience"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_ff27a15bc6634cbb9a109f955a7f1eaf","style":"IPY_MODEL_949e5fecd5624e488c22af72bff0afce"}},"894707f7e54744a384ba2fc575ad82f0":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_9d7c8592989146818ee4b09888590e86","msg_id":"","outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-69-2785dc8e2e0f>:4: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df7[col]) # Checking the distibution of values in each column\n"]}]}},"50d04369b2cd46a19dd54ab56ea4d19d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff27a15bc6634cbb9a109f955a7f1eaf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"949e5fecd5624e488c22af72bff0afce":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9d7c8592989146818ee4b09888590e86":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff7f55bc6a2c484a8c13aa3e553c396f":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_8154f229b63b4f03af3cff00cc2c159c","IPY_MODEL_422ab49b36da4a0d9ba754370c64ff2e"],"layout":"IPY_MODEL_7f86f9e003014b1287cd189261e246a6"}},"8154f229b63b4f03af3cff00cc2c159c":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["children_sqrt","Annual_income_sqrt","fa_sqrt","age","Experience"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_e7a2b4edbf9b4a02abe7b60d48b0335f","style":"IPY_MODEL_40306909a0334e9e8291613340bc694c"}},"422ab49b36da4a0d9ba754370c64ff2e":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_49584a724a624c1aa0b4192686b5bd2e","msg_id":"","outputs":[{"output_type":"error","ename":"KeyError","evalue":"'children_sqrt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'children_sqrt'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipywidgets/widgets/interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    255\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    256\u001b[0m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 257\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    258\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    259\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-77-1027890c4e5b>\u001b[0m in \u001b[0;36mcat_uniq\u001b[0;34m(col)\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0minteract\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcat_uniq\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcols\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf8\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3805\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3807\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3808\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3809\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'children_sqrt'"]}]}},"7f86f9e003014b1287cd189261e246a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e7a2b4edbf9b4a02abe7b60d48b0335f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"40306909a0334e9e8291613340bc694c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"49584a724a624c1aa0b4192686b5bd2e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7a767e9ef07a49afaa0d4be453696083":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_46d00bb3b38b43788053b9bd894f024f","IPY_MODEL_12a0bc785ac94098a8f5325a5107768f"],"layout":"IPY_MODEL_5854d13faab4466da69a2df08e39b6b6"}},"46d00bb3b38b43788053b9bd894f024f":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["children_sqrt","Annual_income_sqrt","fa_sqrt","age","Experience"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_5876645c059549ca95ae314cad2a632e","style":"IPY_MODEL_985b83adea4e4fde804241909bee00e5"}},"12a0bc785ac94098a8f5325a5107768f":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_08f05df38a914057a00cc7be5b691d14","msg_id":"","outputs":[{"output_type":"error","ename":"KeyError","evalue":"'children_sqrt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'children_sqrt'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipywidgets/widgets/interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m    255\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    256\u001b[0m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 257\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    258\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    259\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-82-c02728204bd2>\u001b[0m in \u001b[0;36mcat_uniq\u001b[0;34m(col)\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0minteract\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcat_uniq\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcols\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf9\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3805\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3807\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3808\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3809\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'children_sqrt'"]}]}},"5854d13faab4466da69a2df08e39b6b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5876645c059549ca95ae314cad2a632e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"985b83adea4e4fde804241909bee00e5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"08f05df38a914057a00cc7be5b691d14":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"907aba8a18b8454db8d699c6bb4744d2":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_128d609056484e5e9f726e21d96c9eae","IPY_MODEL_2af60846d5fa4c2897a826da74a357ee"],"layout":"IPY_MODEL_88e75e2a3c564055a91af6cec6ee5c7f"}},"128d609056484e5e9f726e21d96c9eae":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["GENDER","Car_Owner","Propert_Owner","Type_Income","EDUCATION","Marital_status","Housing_type","age","Experience","fa_sqrt","Annual_income_sqrt"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_f0a8f35fdeb642beb6eb254691190661","style":"IPY_MODEL_057684e3e794404fa50efbc1910e9695"}},"2af60846d5fa4c2897a826da74a357ee":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_3306ae6ddf014781a9e5e835b67d612d","msg_id":"","outputs":[{"output_type":"stream","name":"stdout","text":["0    947\n","1    548\n","Name: GENDER, dtype: int64\n"]}]}},"88e75e2a3c564055a91af6cec6ee5c7f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f0a8f35fdeb642beb6eb254691190661":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"057684e3e794404fa50efbc1910e9695":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3306ae6ddf014781a9e5e835b67d612d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"09bf991ebd4e4c9d8359f4762ff8701f":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":["widget-interact"],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_6679c6913495481181f110dee729d1f3","IPY_MODEL_8cc9461a67754257a57471e2483649fe"],"layout":"IPY_MODEL_b4a89438d8eb4927aac3ab2b3da24efe"}},"6679c6913495481181f110dee729d1f3":{"model_module":"@jupyter-widgets/controls","model_name":"DropdownModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DropdownModel","_options_labels":["GENDER","Car_Owner","Propert_Owner","Type_Income","EDUCATION","Marital_status","Housing_type"],"_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"DropdownView","description":"col","description_tooltip":null,"disabled":false,"index":0,"layout":"IPY_MODEL_e2479f8f0ae84d4386edd6451590ecb4","style":"IPY_MODEL_dddb6c4ec9b741eb93fc6e9e317bd5b2"}},"8cc9461a67754257a57471e2483649fe":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_fc678f4254dd45b98b4e6106f903b8e2","msg_id":"","outputs":[{"output_type":"stream","name":"stdout","text":["F    947\n","M    549\n","Name: GENDER, dtype: int64\n"]}]}},"b4a89438d8eb4927aac3ab2b3da24efe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e2479f8f0ae84d4386edd6451590ecb4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dddb6c4ec9b741eb93fc6e9e317bd5b2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fc678f4254dd45b98b4e6106f903b8e2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}}}}},"nbformat":4,"nbformat_minor":5}